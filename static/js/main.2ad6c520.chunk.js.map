{"version":3,"sources":["graph_view/DiagramSystem.module.css","serviceWorker.ts","redux/actions/index.js","constants/index.js","buttons/Help.js","buttons/LockButton.js","buttons/TableButton.js","buttons/DatabaseButton.js","math_view/components_parts/TextInput.js","math_view/components_parts/TextComponent.js","buttons/ComponentLockButton.js","math_view/components/Language.js","redux/containers/LanguageContainer.js","math_view/components/VariablesValue.js","redux/containers/VariablesValueContainer.js","math_view/components_parts/Domain.js","math_view/components_parts/ConstantInterpretation.js","math_view/components/RelationalTable.js","math_view/components_parts/SelectComponent.js","math_view/components_parts/DatabasePredicate.js","math_view/components_parts/PredicateInterpretation.js","math_view/components_parts/DatabaseFunction.js","math_view/components_parts/FunctionInterpretation.js","math_view/components/Structure.js","constants/messages.js","model/Structure.js","model/Language.js","redux/selectors/languageObject.js","redux/selectors/structureObject.js","redux/containers/StructureContainer.js","buttons/AddButton.js","buttons/HenkinHintikkaGameButton.js","expressions_view/GameContainer.js","expressions_view/MessageAreaContainer.js","constants/gameMessages.js","expressions_view/MessageBubbles.js","model/Expression.js","model/formula/Formula.js","model/formula/Formula.PredicateAtom.js","constants/gameConstants.js","model/formula/Formula.Implication.js","expressions_view/HenkinHintikkaGame.js","redux/containers/HenkinHintikkaGameContainer.js","expressions_view/Expressions.js","redux/containers/ExpressionsContainer.js","math_view/MathSystem.js","redux/containers/MathSystemContainer.js","buttons/DownloadButton.js","math_view/components_parts/ModalComponent.js","buttons/HelpGraphButton.js","buttons/ButtonToolbarComponent.js","graph_view/components/TrayWidget.tsx","graph_view/components/TrayItemWidget.tsx","graph_view/components/MainCanvasWidget.tsx","graph_view/nodes/ConstantNames.tsx","graph_view/nodes/functions.ts","graph_view/labels/binary/BinaryLabelModel.tsx","graph_view/nodes/NaryRelationPortModel.ts","graph_view/nodes/constant/ConstantPortModel.ts","graph_view/nodes/constant/ConstantNodeModel.ts","graph_view/nodes/BaseNodeModel.ts","graph_view/nodes/ternary/TernaryNodeModel.ts","graph_view/nodes/quaternary/QuaternaryNodeModel.ts","graph_view/links/binary/BinaryLinkModel.ts","graph_view/nodes/unbinary/UnBinaryPortModel.ts","graph_view/nodes/unbinary/UnBinaryNodeModel.ts","graph_view/nodes/unbinary/UnBinaryPortLabelWidget.tsx","graph_view/nodes/DropDownMenuWidget.tsx","graph_view/labels/binary/BinaryLabelWidget.tsx","graph_view/nodes/unbinary/UnBinaryNodeWidget.tsx","graph_view/nodes/constant/ConstantNodeWidget.tsx","graph_view/nodes/NaryListWidget.tsx","graph_view/nodes/ternary/TernaryNodeWidget.tsx","graph_view/nodes/quaternary/QuaternaryNodeWidget.tsx","graph_view/components/TrayItemWidgetIcon.js","graph_view/components/BodyWidget.tsx","redux/containers/DiagramModelContainer.js","graph_view/DiagramSystem.js","stateToJSON.ts","App.tsx","redux/containers/AppContainer.js","redux/reducers/functions/validation.js","model/term/Term.js","model/term/Term.Variable.js","model/term/Term.Constant.js","model/term/Term.FunctionTerm.js","model/formula/Formula.EqualityAtom.js","model/formula/Formula.Negation.js","model/formula/Formula.Conjunction.js","model/formula/Formula.Disjunction.js","model/formula/Formula.ExistentialQuant.js","model/formula/Formula.UniversalQuant.js","model/formula/Formula.Equivalence.js","redux/reducers/functions/parsers.js","redux/reducers/language.js","redux/actions/action_types.js","redux/reducers/structure.js","redux/selectors/valuationObject.js","redux/reducers/expressions.js","redux/reducers/teacherMode.ts","graph_view/nodes/unbinary/UnBinaryNodeFactory.tsx","graph_view/nodes/constant/ConstantNodeFactory.tsx","graph_view/labels/binary/BinaryLabelFactory.tsx","graph_view/nodes/SimplePortFactory.ts","graph_view/links/binary/BinaryLinkPointWidget.tsx","graph_view/links/binary/BinaryLinkSegmentWidget.tsx","graph_view/links/binary/BinaryLinkWidget.tsx","graph_view/links/binary/BinaryLinkFactory.tsx","graph_view/nodes/quaternary/QuaternaryNodeFactory.tsx","graph_view/nodes/ternary/TernaryNodeFactory.tsx","graph_view/DiagramAplication.ts","redux/reducers/diagram.js","redux/reducers/index.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","setConstantValue","value","constantName","type","setPredicateValueText","predicateName","setPredicateValueTable","checked","setFunctionValueText","functionName","setFunctionValueTable","lockDomain","lockConstantValue","lockPredicateValue","lockFunctionValue","toggleTable","itemType","name","toggleDatabase","importDiagramState","state","focusOnBodyFunc","FUNCTION","PREDICATE","FORMULA","TERM","EXPRESSION_LABEL","HelpButton","subject","children","props","Button","style","padding","variant","title","Help","placement","show","onToggle","label","size","helpPopover","Popover","id","className","width","maxHeight","Content","OverlayTrigger","trigger","overlay","active","onClick","LockButton","lockFn","locked","TableButton","enabled","DatabaseButton","TextInput","onChange","onLock","textData","teacherMode","arity","domain","databaseEnabled","tableEnabled","errorProperty","InputGroup","Prepend","Text","Form","Control","isInvalid","length","e","disabled","Append","Feedback","TextComponent","labelText","onChangeSetFunction","onLockFunction","textInputLabel","idName","Row","Col","lg","Group","Label","target","ComponentLockButton","languageHelp","Language","useState","showHelp","setShowHelp","Card","Header","as","lockLanguageComponent","language","lockedComponent","Body","constants","parsed","join","errorMessage","setConstants","lockConstants","constantComponent","predicates","map","tuple","setPredicates","lockPredicates","predicateComponent","functions","setFunctions","lockFunctions","functionComponent","mapDispatchToProps","LanguageContainer","connect","common","assignmentHelp","VariablesValue","variables","onInputChange","lockInput","mapDispatchOnProps","VariablesValueContainer","structure","Domain","setDomain","CustomSelect","ConstantInterpretation","structureObject","Object","keys","constant","key","item","RelationalTable","inputComponent","findIndex","JSON","stringify","functionValues","params","concat","renderFunctionValueSelect","arity1","arity2","item1","item2","Table","bordered","responsive","parseInt","SelectComponent","handleChange","bind","this","setState","index","selectionElement","i","array","slice","fill","addIntoFunctionTable","React","Component","DatabasePredicate","undefined","assign","Array","predicateArrayElements","newSelectionElement","headElements","x","count","isArray","onePredicateArray","domainElement","predicateValues","changeValue","renderPredicateValueSelect","PredicateInterpretation","lengthOfCol","split","get","iPredicate","has","DatabaseFunction","domainValueArray","values","mainElement","permutateWithRepetitions","permutationOptions","permutationLength","permutationOption","permutations","smallerPermutations","forEach","currentOption","smallerPermutation","push","arrayValues","symbol","FunctionInterpretation","iFunction","structureHelp","Structure","CONSTANT_IN_LANGUAGE","FUNCTION_IN_LANGUAGE","PREDICATE_IN_LANGUAGE","parsedDomain","Set","iConstant","Map","add","c","set","parsedConstants","parsedFunctions","parsedPredicates","nonLogicalSymbols","isConstant","isFunction","isPredicate","isVariable","args","ee","a","expected","hasInSet","elementName","givenSet","splited","isNaN","toString","getLanguageObject","createSelector","getStructureObject","StructureContainer","diagramModel","AddButton","symbolType","onClickAddFunction","addType","toLowerCase","HenkinHintikkaGameButton","gameEnabled","Container","styled","div","attrs","MessageArea","MessageAreaContainer","EVALUATED_PREDICATE_IN","formulaName","EVALUATED_PREDICATE_NOT_IN","EVALUATED_EQUALITY","term1","term2","EVALUATED_INEQUALITY","VAR_IS_ASSIGNED","varName","GameMessageBubble","UserMessage","UserMessageBubble","hover","setHover","onMouseEnter","onMouseLeave","Expression","_structure","_e","_from","_to","_bound","Formula","commitment","PredicateAtom","terms","translatedTerms","term","eval","res","createCopy","from","to","bound","substitute","flatMap","getVariables","Implication","subLeft","subRight","left","right","HenkinHintikkaGame","formula","formulaIndex","goBack","gameHistory","variableIndex","lastItemIndex","lastHistoryItem","gameMessageBubble","itemIndex","message","messageIndex","userMessageBubble","GameContainer","historyItem","gameMessages","userMessages","generateMessage","getChoice","showVariables","entry","gameVariables","showOrHide","messages","setGameCommitment","leftCommitment","rightCommitment","leftStringCommitment","getCommitmentText","rightStringCommitment","currentFormula","getSubFormulas","leftUserMessage","rightUserMessage","setGameNextFormula","toggleVariables","_entry","DropdownButton","alignRight","ButtonGroup","Dropdown","Item","eventKey","setGameDomainChoice","continueGame","endGame","gameCommitment","chooseCommitment","getType","chooseEndGame","subFormulasCommitment","getSubFormulasCommitment","chooseFormula","chooseDomainValue","chooseOk","subFormulas","truth","ENTRY_SENTENCE","initial","result","WIN_1","getWinningEvaluatedFormula","WIN_2","LOSS","getLoosingEvaluatedFormula","COULD_WON","COULD_NOT_WON","FIRST_FORMULA_OPTION","SECOND_FORMULA_OPTION","OPERATOR_ANSWER","nextMove","form","subFormula","variableName","QUANTIFIER_QUESTION","varValue","QUANTIFIER_ANSWER","getEvaluatedPredicateFormula","Math","floor","random","randomNumbers","historyIndex","HenkinHintikkaGameContainer","helpFormula","striped","helpTerm","prepareExpressions","formulas","items","expressionType","answers","Fragment","help","panelTitle","getTermAnswers","Expressions","expression","exprType","newValue","sh","inputLocked","onFocus","clearSelection","removeExpression","lockExpressionValue","xs","for","answerValue","setExpressionAnswer","answerLocked","lockExpressionAnswer","expressionValue","initiateGame","addExpression","answer","expressionIndex","ExpressionContainer","expressions","Pane","minSize","MathSystem","innerWidth","updateDimensions","syncMathState","addEventListener","removeEventListener","isSplitVertically","allowResize","resizerStyle","background","paneStyle","paneMinSize","ExpressionsContainer","MathSystemContainer","DownloadButton","loading","fileData","_onGenerate","_donePreparing","_onDownload","genFile","async","blob","Blob","contents","mime","uri","filename","link","document","createElement","download","body","appendChild","href","click","removeChild","replace","saveAs","URL","createObjectURL","onDownloaded","cls","downloadTitle","loadingTitle","generateTitle","defaultProps","ModalComponent","modalShowState","setModalShowState","setExerciseNameState","exportState","Modal","dialogClassName","onHide","Title","htmlFor","placeholder","Footer","graphHelp","HelpGraphButton","setCollapseHelpGraphButton","collapseHelpGraphButton","ButtonToolbarComponent","clearGraphSelection","diagramToggledState","setDiagramToggledState","teacherModeState","setModelShowState","importState","setTeacherModeState","ButtonToolbar","getElementById","hidden","display","Tray","TrayWidget","BasicTray","ItemWidgetIcon","color","draggable","onDragStart","event","dataTransfer","setData","model","clickFunction","element","reduxProps","p","MainCanvasWidget","ADDPORT","ADDPORTSELECTED","TO","canUseNameForGivenArityAndType","elementArity","languageObject","getState","finalSet","entries","langaugeElementName","languageElementArity","functionIsAlreadyDefinedForGivenFunction","functionParameters","functionValue","functionInterpretation","funcParameters","funcValue","selectOnlyCurrentGraphElement","currentModel","engine","getModel","setSelected","repaintCanvas","parseText","setNodeBadName","parse","trim","includes","Error","canUseNameForNode","oldName","newName","nodeType","diagramState","setNodeBadNameIfStateContainsNodeWithSameName","domainNodes","constantNodes","parseDomain","setDomainBadNameIfRegexViolated","parseConstants","setConstantsBadNameIfRegexViolated","getAvailableLanguageElementForGivenArity","modelSet","languageElementSet","languageElement","elementValue","getMaxLengthForGivenLanguageElementWithArity","maxLength","getWidestElement","isDropDownMenu","inputElementTestLength","predicateArity","functionArity","predicateWidth","getReduxProps","functionWidth","BinaryLabelModel","options","offsetY","editable","changeCounter","registerEvents","registerListener","entityRemoved","removeLabelFromMathView","getParent","getSourcePort","getNode","getTargetPort","getSourceDomainNode","getNodeName","getTargetDomainNode","getPredicates","clear","getFunctions","direction","bool","setLocked","getOptions","addBinaryPredicateToSet","addUnaryFunctionToSet","alreadyDefinedInFromDirection","getNodeParameters","getFunctionValue","alreadyDefinedInToDirection","setLanguageElementDirection","increaseChangeCounter","delete","removeUnaryFunctionFromSet","removeBinaryPredicateFromSet","currentDirection","changeDirection","currDirection","data","LabelModel","NaryRelationPortModel","alignment","PortModelAlignment","LEFT","getMaximumLinks","BinaryLinkModel","port","UnBinaryNodeModel","getName","PortModel","ConstantPortModel","BOTTOM","getParentCanvasModel","_","getLinks","ConstantNodeModel","previousName","mainPort","setUpConstantPort","addPort","getMainPort","remove","domainNodeName","node","setCallReduxFunc","removeNodeFromMathView","ports","setParent","NodeModel","BaseNodeModel","parameterPorts","parameterPortsArray","appendPort","getNumberOfPorts","registerParameterPorts","registerAppendPort","directions","RIGHT","TOP","portValue","getNodeNameCombination","valueNode","numberOfPorts","date","removeNodeFromGraphView","addPredicateToSet","addElementToMathView","addFunctionToSet","removeElementFromMathView","removePredicateFromSet","removeFunctionFromSet","predicate","func","functionsToDelete","setMaximumLinks","TernaryNodeModel","QuaternaryNodeModel","canCallReduxFunc","selectedColor","curvyness","callReduxFunc","removeLinkIfCondition","linkObject","existNodeWithSameCombination","nodeCombination","naryNode","getNodes","targetPortChanged","sourceNode","targetNode","canSelectNode","addLabel","constantNode","unbinaryNode","constantPort","isCallReduxFunc","setConstantValueInMathView","naryPort","previousCombination","setValueToPort","naryNodeCombination","representNodeInMathView","removeValueFromPort","num","points","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","calculateControlOffset","targetPort","getTargetControl","getSVGCurve","labels","labelOb","setLabel","fireEvent","removeLink","LinkModel","UnBinaryPortModel","links","getID","unaryPredicates","addTemplatePorts","addUnaryPredicate","addUnaryPredicateToSet","removeUnaryPredicateFromSet","unaryPredicate","PortLabel","Port","height","DropDownModel","pointerEvents","cursor","DropDownPorts","DropDownTitleName","DropDownContainer","DropDownInputElement","DropDownRowContainer","DropDownLanguageElement","DropDownMenuWidget","textInput","generateAvailableLanguageElement","alreadyDefined","addPredicate","addFunction","generatePredicateComponent","generateFunctionComponent","setStateBadNameForLanguageElement","clearTextInput","badNameForLanguageElement","canAddAsFunction","canAddAsPredicate","inputTitle","predicateButtonTitle","functionButtonTitle","setBadName","elementObject","setLockedParent","setStateBadNameForPredFunc","funcArity","isEditable","elName","setStateInputElementTextLength","setCanUseForGivenType","ref","input","setLockedParentIfNeeded","onBlur","onKeyDown","closeDropDown","addGivenInputElement","widthOfInputElement","border","ElementsNode","Element","Elements","ElementContainer","ElementRowContainer","TitleName","BinaryLabelWidget","sourceNodeName","targetNodeName","generateElementType","changeDirectionOfBinaryRelation","removePredicate","removeFunction","badNameForNewPredicate","inputElementTextLength","setInputElementTextLength","setIsDropDownMenuAccordingBehaviour","isSelected","compareWidth","Node","selected","Ports","PortsContainer","UnBinaryNodeWidget","generatePredicate","removeUnaryPredicate","renameActive","titleChanged","nodeName","badName","setBadNodeNameState","renameDomainNode","renameNode","data-basic-node-name","flexGrow","onDoubleClick","autoFocus","cancelRenameNode","getUnaryPredicates","getAppendPort","modelName","ConstantNodeWidget","renameConstantNode","NaryListWidget","NaryNodeList","NodeWidget","strokeMiterlimit","strokeWidth","stroke","TernaryNodeWidget","top","marginLeft","position","getPortByIndex","marginRight","s","QuaternaryNodeWidget","UnbinaryIcon","ConstantIcon","TernaryIcon","QuaternaryIcon","Layer","ModeElement","getAvailableCount","nodeCount","ternaryNodes","quaternaryNodes","createNode","point","clicked","nodesCount","getData","addDomainNode","addConstantNode","addTernaryNode","addQuaternaryNode","diagramEngine","canvasWidth","getCanvas","clientWidth","canvasHeight","clientHeight","y","getRelativeMousePoint","setPosition","addNode","forceUpdate","BodyWidget","focusOnBodyElement","removeDomainNode","removeConstantNode","removeTernaryNode","removeQuaternaryNode","addUnaryFunction","addBinaryPredicate","addBinaryFunction","addTernaryPredicate","addTernaryFunction","addQuaternaryPredicate","removeUnaryFunction","removeBinaryPredicate","removeBinaryFunction","removeTernaryPredicate","removeTernaryFunction","removeQuaternaryPredicate","setConstantValueFromLink","editableNodes","store","imported","dispatch","syncDiagram","focus","editableNodesFunction","toggleEditableNodes","tabIndex","onKeyPress","tagName","getSelectedEntities","preventDefault","onDrop","onDragOver","nodeObject","constantNodeName","languageElementName","langType","DiagramModelContainer","ownProps","DiagramSystem","styles","reactDiagram","sm","makeCordNodes","nodeState","nodesCoords","mapName","hasOwnProperty","nodeNameInObject","App","modalShow","diagramToggled","exerciseName","json","diagramCordState","stateToJSON","DEFAULT_FILE_NAME","file","files","fr","FileReader","onload","content","readAsText","toggleTeacherMode","AppContainer","validateLanguageConstants","some","filter","validateLanguagePredicates","validateLanguageFunctions","f","Term","Variable","Constant","FunctionTerm","interpretedParams","EqualityAtom","Negation","Conjunction","Disjunction","ExistentialQuant","eCopy","UniversalQuant","Equivalence","parseLanguage","parsePredicates","parseFunctions","parseStructure","wholeState","parseTuples","parseValuation","getLanguage","parseExpression","termFactories","getTermFactories","parseTerm","formulaFactories","predicateAtom","predSymbol","checkPredicateArity","equalityAtom","lhs","rhs","negation","conjunction","disjunction","implication","equivalence","existentialQuant","variable","universalQuant","getFormulaFactories","parseFormulaWithPrecedence","functionApplication","funSymbol","checkFunctionArity","addPredicateLanguageElement","pred","validatePredicates","addFunctionLanguageElement","validateFunctions","validateAndParseConstants","validateConstants","validateAndParsePredicates","validateAndParseFunctions","languageReducer","produce","action","returnParsedConstValues","returnParsedPredValues","returnParsedFuncValues","predicateDefaultInput","buildTupleArray","nodeNames","insertNewInputs","arrayNodeNames","arraysEqual","parsedToValue","checkPredicateValue","checkFunctionValue","removePredicateLanguageElement","sNodeNames","removeFunctionLanguageElement","setConstantsValues","setPredicatesValues","setFunctionsValues","syncLanguageWithStructure","deleteUnusedInputs","setVariables","d","ITEM_NOT_IN_DOMAIN","domainValues","validateStructureConstants","console","error","t","illegalItems","validateStructurePredicates","usedParams","stringParams","FUNCTION_ALREADY_DEFINED","pow","validateStructureFunctions","parsedValues","array1","array2","every","elem","structureReducer","newStateConstantObject","newKey","removePredicateLanguageElementInGivenDirection","removeFunctionLanguageElementInGivenDirection","splice","oldNodeName","newNodeName","changePredicatesValues","getValuationObject","valuations","syncExpressionsValue","evalExpression","addToHistory","nextFormula","gameEntry","getNextStepForGame","variableObject","subFormulasEval","randomFormula","log","setValidVariableIndex","variablesInFormula","expressionsReducer","variablesObject","ans","expressionText","validSyntax","checkExpressionSyntax","lastEntry","game","teacherModeReducer","UnBinaryNodeFactory","AbstractReactFactory","ConstantNodeFactory","BinaryLabelFactory","SimplePortFactory","cb","initialConfig","AbstractModelFactory","PointTop","circle","BinaryLinkPointWidget","cx","cy","r","colorSelected","data-id","data-linkid","getLink","opacity","BinaryLinkSegmentWidget","Bottom","factory","generateLinkSegment","path","forwardRef","Top","strokeLinecap","onSelection","extras","strokeOpacity","onContextMenu","isLocked","preventBinary","BinaryLinkWidget","refPaths","setRenderedLinkPath","selectedElements","graphObject","clearAllWithoutCurrentModel","setRenderedPaths","current","shiftKey","getPoints","getMaxNumberPointsPerLink","PointModel","addPoint","persist","stopPropagation","getActionEventBus","fireAction","extraProps","getFactoryForLink","paths","generateLink","getSVGPath","onMouseDown","addPointToLink","generatePoint","j","LinkWidget","generateLinePath","data-binary-link-test","testName","Keyframes","keyframes","css","Path","BinaryLinkFactory","QuaternaryNodeFactory","TernaryNodeFactory","DiagramApplication","activeModel","createEngine","setModel","getPortFactories","registerFactory","config","getNodeFactories","getLinkFactories","getLabelFactories","getStateMachine","getCurrentState","DefaultDiagramState","dragNewLink","allowLooseLinks","defaultState","DiagramModel","changeEditableState","boolValue","nodeArray","linkArray","labelArray","getLabels","syncLabels","nodeSet","diagramCanvas","addNodeState","createLink","setSourcePort","setTargetPort","addAll","syncConstants","constantObjects","constantState","domainState","removeNodeState","removeWholeNode","nodeProperties","interruptCallingReduxFunc","removeAllLinks","syncLanguageElementType","elementInterpretationMap","portMap","keyWithoutArity","arityWithoutKey","portMapArity","addToPredicatePortMap","addToFunctionPortMap","currentNodeValue","currNodeValueParsed","syncPredicates","currentNodeName","currentNodeObject","setOfUnaryPredicatesForNode","currentNodePredicates","clearPredicates","syncUnaryPredicates","syncBinaryLinkElement","syncNaryLanguageElements","typeElement","nodes","nodesOfType","nodeValue","clearFunctions","nodePortMapCombination","nodePortMapCombinationSet","createLinksForNaryNodes","diagramStateNodesOfType","syncFunctions","addLanguageElementToBinaryLinks","nodeCombinationKey","reversedNodeCombinationKey","addBinaryPredicateToSetWithDirection","addUnaryFunctionToSetWithDirection","linksToRemove","existingLinksCombination","getLabel","labelLanguageSet","getNodeCombinationKey","getReversedNodeCombinationKey","linksToChange","combination","firstComb","secondComb","reversedComb","createBinaryLinks","syncDomain","existingDomainNodes","getPorts","portObject","removePort","removeNode","diagramReducer","clearLabels","deleteAllLabels","naryNodeMap","nodeTypeMap","cord","syncNodesCords","diagramDefaultState","checkImportedState","root","importedState","enableMapSet","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","Main","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ad6c520.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactDiagram\":\"DiagramSystem_reactDiagram__3RoSQ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const setConstants = (value) => ({\n  type: 'SET_CONSTANTS',\n  value\n});\n\nexport const setPredicates = (value) => ({\n  type: 'SET_PREDICATES',\n  value\n});\n\nexport const setFunctions = (value) => ({\n  type: 'SET_FUNCTIONS',\n  value\n});\n\nexport const setDomain = (value) => ({\n  type: 'SET_DOMAIN',\n  value\n});\n\nexport const renameDomainNode = (oldName,newName) => ({\n  type: 'RENAME_DOMAIN_NODE',\n  oldName,\n  newName\n});\n\nexport const renameConstantNode = (oldName,newName) => ({\n  type: 'RENAME_CONSTANT_NODE',\n  oldName,\n  newName\n});\n\nexport const setConstantValueFromLink = (constantNodeName,domainNodeName) => ({\n  type: 'SET_CONSTANT_VALUE_FROM_LINK',\n  constantNodeName,\n  domainNodeName\n});\n\nexport const syncMathState = () => ({\n  type: 'SYNC_MATH_STATE'\n});\n\nexport const syncDiagram = (value,focusOnBodyFunc) => ({\n  type: 'SYNC_DIAGRAM',\n  value,\n  focusOnBodyFunc\n});\n\nexport const removeConstantNode = (nodeName) => ({\n  type: 'REMOVE_CONSTANT_NODE',\n  nodeName\n});\n\nexport const removeDomainNode = (nodeName) => ({\n  type: 'REMOVE_DOMAIN_NODE',\n  nodeName\n});\n\nexport const addConstantNode = (nodeName,nodeObject) => ({\n  type: 'ADD_CONSTANT_NODE',\n  nodeName,\n  nodeObject\n});\n\nexport const addDomainNode = (nodeName,nodeObject) => ({\n  type: 'ADD_DOMAIN_NODE',\n  nodeName,\n  nodeObject\n});\n\nexport const addTernaryNode = (nodeName,nodeObject) => ({\n  type: 'ADD_TERNARY_NODE',\n  nodeName,\n  nodeObject\n});\n\nexport const addQuaternaryNode = (nodeName,nodeObject) => ({\n  type: 'ADD_QUATERNARY_NODE',\n  nodeName,\n  nodeObject\n});\n\nexport const removeTernaryNode = (nodeName) => ({\n  type: 'REMOVE_TERNARY_NODE',\n  nodeName\n});\n\nexport const removeQuaternaryNode = (nodeName) => ({\n  type: 'REMOVE_QUATERNARY_NODE',\n  nodeName\n});\n\nexport const addUnaryPredicate = (predicateName,nodeName) => ({\n  type: 'ADD_UNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const removeUnaryPredicate = (predicateName,nodeName) => ({\n  type: 'REMOVE_UNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const addBinaryPredicate = (predicateName,sourceNodeName,targetNodeName,direction) => ({\n  type: 'ADD_BINARY_PREDICATE',\n  predicateName,\n  sourceNodeName,\n  targetNodeName,\n  direction\n});\n\nexport const addTernaryPredicate = (predicateName,nodeName) => ({\n  type: 'ADD_TERNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const addQuaternaryPredicate = (predicateName,nodeName) => ({\n  type: 'ADD_QUATERNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const addUnaryFunction = (functionName,sourceNodeName,targetNodeName,direction) => ({\n  type: 'ADD_UNARY_FUNCTION',\n  functionName,\n  sourceNodeName,\n  targetNodeName,\n  direction\n});\n\nexport const addBinaryFunction = (functionName,nodeName) => ({\n  type: 'ADD_BINARY_FUNCTION',\n  functionName,\n  nodeName\n});\n\nexport const addTernaryFunction = (functionName,nodeName) => ({\n  type: 'ADD_TERNARY_FUNCTION',\n  functionName,\n  nodeName\n});\n\nexport const removeUnaryFunction = (functionName,sourceNodeName,targetNodeName,direction) => ({\n  type: 'REMOVE_UNARY_FUNCTION',\n  functionName,\n  sourceNodeName,\n  targetNodeName,\n  direction\n});\n\nexport const removeBinaryPredicate = (predicateName,sourceNodeName,targetNodeName,direction) => ({\n  type: 'REMOVE_BINARY_PREDICATE',\n  predicateName,\n  sourceNodeName,\n  targetNodeName,\n  direction\n});\n\nexport const removeBinaryFunction = (functionName,nodeName) => ({\n  type: 'REMOVE_BINARY_FUNCTION',\n  functionName,\n  nodeName\n});\n\nexport const removeTernaryFunction = (functionName,nodeName) => ({\n  type: 'REMOVE_TERNARY_FUNCTION',\n  functionName,\n  nodeName\n});\n\nexport const removeTernaryPredicate = (predicateName,nodeName) => ({\n  type: 'REMOVE_TERNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const removeQuaternaryPredicate = (predicateName,nodeName) => ({\n  type: 'REMOVE_QUATERNARY_PREDICATE',\n  predicateName,\n  nodeName\n});\n\nexport const changeDirectionOfBinaryRelation = (languageElementName,sourceNodeName,targetNodeName,direction,langType) => ({\n  type: 'CHANGE_DIRECTION_OF_BINARY_RELATION',\n  languageElementName,\n  sourceNodeName,\n  targetNodeName,\n  direction,\n  langType\n});\n\nexport const setConstantValue = (value, constantName) => ({\n  type: 'SET_CONSTANT_VALUE',\n  constantName,\n  value,\n});\n\nexport const setPredicateValueText = (value, predicateName) => ({\n  type: 'SET_PREDICATE_VALUE_TEXT',\n  value,\n  predicateName\n});\n\nexport const setPredicateValueTable = (value, predicateName, checked) => ({\n  type: 'SET_PREDICATE_VALUE_TABLE',\n  value,\n  predicateName,\n  checked\n});\n\nexport const setFunctionValueText = (value, functionName) => ({\n  type: 'SET_FUNCTION_VALUE_TEXT',\n  value,\n  functionName\n});\n\nexport const clearGraphSelection = () => ({\n  type: 'CLEAR_GRAPH_SELECTION'\n});\n\nexport const setDiagramModel = (model) => ({\n  type: 'SET_MODEL',\n  model\n});\n\nexport const setFunctionValueTable = (value, functionName) => ({\n  type: 'SET_FUNCTION_VALUE_TABLE',\n  value,\n  functionName\n});\n\nexport const checkExpressionSyntax = (value, index, expressionType) => ({\n  type: 'CHECK_SYNTAX',\n  value,\n  index,\n  expressionType\n});\n\nexport const addExpression = (expressionType) => ({\n  type: 'ADD_EXPRESSION',\n  expressionType\n});\n\nexport const resetDiagramState = () => ({\n  type: 'RESET_DIAGRAM_STATE'\n});\n\nexport const removeExpression = (expressionType, index) => ({\n  type: 'REMOVE_EXPRESSION',\n  expressionType,\n  index\n});\n\nexport const setExpressionAnswer = (expressionType, answer, index) => ({\n  type: 'SET_EXPRESSION_ANSWER',\n  expressionType,\n  answer,\n  index\n});\n\nexport const lockExpressionValue = (expressionType, expressionIndex) => ({\n  type: 'LOCK_EXPRESSION_VALUE',\n  expressionType,\n  expressionIndex\n});\n\nexport const lockExpressionAnswer = (expressionType, expressionIndex) => ({\n  type: 'LOCK_EXPRESSION_ANSWER',\n  expressionType,\n  expressionIndex\n});\n\nexport const lockConstants = () => ({\n  type: 'LOCK_CONSTANTS'\n});\n\nexport const lockPredicates = () => ({\n  type: 'LOCK_PREDICATES'\n});\n\nexport const lockFunctions = () => ({\n  type: 'LOCK_FUNCTIONS'\n});\n\nexport const lockLanguageComponent = () => ({\n  type: 'LOCK_LANGUAGE_COMPONENT'\n});\n\nexport const lockDomain = () => ({\n  type: 'LOCK_DOMAIN'\n});\n\nexport const lockConstantValue = (constantName) => ({\n  type: 'LOCK_CONSTANT_VALUE',\n  constantName\n});\n\nexport const lockPredicateValue = (predicateName) => ({\n  type: 'LOCK_PREDICATE_VALUE',\n  predicateName\n});\n\nexport const lockFunctionValue = (functionName) => ({\n  type: 'LOCK_FUNCTION_VALUE',\n  functionName\n});\n\nexport const lockVariables = () => ({\n  type: 'LOCK_VARIABLES'\n});\n\nexport const toggleTable = (itemType, name) => ({\n  type: 'TOGGLE_EDIT_TABLE',\n  itemType,\n  name\n});\n\nexport const toggleDatabase = (itemType, name) => ({\n  type: 'TOGGLE_EDIT_DATABASE',\n  itemType,\n  name\n});\n\nexport const setVariablesValue = (value) => ({\n  type: 'SET_VARIABLES_VALUE',\n  value\n});\n\nexport const toggleTeacherMode = () => ({\n  type: 'TOGGLE_TEACHER_MODE'\n});\n\nexport const importAppState = (content,diagramState) => ({\n  type: 'IMPORT_APP',\n  content,\n  diagramState\n});\n\nexport const importDiagramState = (state,focusOnBodyFunc) => ({\n  type: 'IMPORT_DIAGRAM_STATE',\n  state,\n  focusOnBodyFunc\n});\nexport const toggleEditableNodes = (value) => ({\n  type: 'TOGGLE_EDITABLE_NODES',\n  value\n});\nexport const initiateGame = (index) => ({\n  type: 'INITIATE_GAME',\n  index\n});\nexport const setGameCommitment = (index, commitment, gameMessages, userMessages) => ({\n  type: 'SET_GAME_COMMITMENT',\n  index,\n  commitment,\n  gameMessages,\n  userMessages\n});\nexport const continueGame = (index, gameMessages, userMessages, randomNumbers) => ({\n  type: 'CONTINUE_GAME',\n  index,\n  gameMessages,\n  userMessages\n});\nexport const setGameDomainChoice = (index, value, gameMessages, userMessages) => ({\n  type: 'SET_GAME_DOMAIN_CHOICE',\n  index,\n  value,\n  gameMessages,\n  userMessages\n});\nexport const endGame = (index) => ({\n  type: 'END_GAME',\n  index\n});\nexport const setGameNextFormula = (index, formula, commitment, gameMessages, userMessages) => ({\n  type: 'SET_GAME_NEXT_FORMULA',\n  index,\n  formula,\n  commitment,\n  gameMessages,\n  userMessages\n});\nexport const goBack = (index, historyIndex) => ({\n  type: 'GO_BACK',\n  index,\n  historyIndex\n});\nexport const getVariables = (index) => ({\n  type: 'GET_VARIABLES',\n  index\n});","export const STUDENT_MODE = 'STUDENT';\n\nexport const CONSTANT = 'CONSTANT';\nexport const FUNCTION = 'FUNCTION';\nexport const PREDICATE = 'PREDICATE';\nexport const DOMAIN = 'DOMAIN';\nexport const VARIABLE = 'VARIABLE';\n\n\n\nexport const FORMULA = 'FORMULA';\nexport const TERM = 'TERM';\n\nexport const EXPRESSION_LABEL = {\n  FORMULA: '𝝋',\n  TERM: '𝝉'\n};\n\nexport const defaultInputData = () => ({value: '', locked: false, errorMessage: '', parsed: []});\nexport const defaultExpressionData = () => ({\n  value: '',\n  expressionValue: null,\n  answerValue: '',\n  errorMessage: '',\n  inputLocked: false,\n  answerLocked: false,\n  parsed: null\n});\n\nexport const DEFAULT_FILE_NAME = 'structure';","import React from 'react';\nimport {Button} from \"react-bootstrap\";\nimport FontAwesome from \"react-fontawesome\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\n\nconst HelpButton = ({subject, children, ...props}) => (\n  <Button style={{padding:\"0.2rem 0.4rem\"}}\n      variant='outline-info'\n      title={`Help${ subject ? ` on ${subject}` : ''}`}\n      {...props}>\n      <FontAwesome name='fas fa-question'/>{children ? <>&nbsp;{children}</> : null}\n  </Button>\n);\n\nexport function Help({ subject, placement = 'auto', show, onToggle, children, label, size = 'sm' }) {\n  const helpPopover = (\n    <Popover id={`help-${subject}`}\n      className='mw-100 overflow-auto shadow-sm'\n      style={{width: '30rem', maxHeight: '90vh'}}>\n        <Popover.Content>\n            {children}\n        </Popover.Content>\n    </Popover>\n  );\n  return (\n    <OverlayTrigger trigger=\"click\"\n        placement={placement}\n        overlay={helpPopover}\n        show={show}\n        onToggle={onToggle}>\n        <HelpButton subject={subject}\n          active={show}\n          onClick={() => onToggle(!show)}\n          size={size}>\n          {label}\n        </HelpButton>\n    </OverlayTrigger>\n  );\n}\n\nexport default Help;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button} from \"react-bootstrap\";\n\nconst LockButton = ({lockFn, locked}) => (\n  <Button variant={'outline-secondary'}\n    active={locked}\n    onClick={() => lockFn()}\n    title={locked ? 'Unlock' : 'Lock'}>\n    <FontAwesome name={locked ? 'unlock' : 'lock'}/>\n  </Button>\n);\n\nexport default LockButton;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button} from \"react-bootstrap\";\n\nconst TableButton = ({onClick,enabled}) => (\n  <Button onClick={() => onClick()} variant={\"outline-secondary\"}\n    active={enabled}\n    title=\"Table view\">\n    <FontAwesome name='fas fa-table'/>\n  </Button>\n);\nexport default TableButton;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button} from \"react-bootstrap\";\n\nconst DatabaseButton = ({onClick,enabled}) => (\n    <Button onClick={() => onClick()} variant={\"outline-secondary\"}\n        active={enabled}\n        title=\"Database table view\">\n        <FontAwesome name='fas fa-server'/>\n    </Button>\n);\n\nexport default DatabaseButton;","import React from 'react';\nimport {InputGroup, Form} from 'react-bootstrap';\nimport LockButton from \"../../buttons/LockButton\";\nimport TableButton from \"../../buttons/TableButton\";\nimport DatabaseButton from \"../../buttons/DatabaseButton\";\n\nconst TextInput = ({onChange, onLock, textData, label, teacherMode, id, toggleTable, toggleDatabase, arity, domain,databaseEnabled,tableEnabled,errorProperty}) => (\n    <InputGroup size='sm' className='has-validation'>\n        <InputGroup.Prepend>\n            <InputGroup.Text>{label}</InputGroup.Text>\n        </InputGroup.Prepend>\n\n            <Form.Control\n                isInvalid={(errorProperty && errorProperty.length > 0)}\n                id={id}\n                type='text'\n                onChange={(e) => onChange(e)}\n                value={textData.value}\n                disabled={textData.locked}\n            />\n        <InputGroup.Append>\n            <InputGroup.Text>&#125;</InputGroup.Text>\n        </InputGroup.Append>\n         {toggleTable ? (\n             (arity === 0 || arity > 2 || domain.size === 0) ? null : (\n                <InputGroup.Append>\n                     <TableButton onClick={() => toggleTable()} enabled={tableEnabled}/>\n                </InputGroup.Append>\n             )\n         ):null}\n\n         {toggleDatabase?(\n             (arity < 1 || domain.size === 0)? null :(\n                <InputGroup.Append>\n                     <DatabaseButton onClick={() => toggleDatabase()} enabled={databaseEnabled}/>\n                </InputGroup.Append>\n             )\n         ) : null}\n\n         {teacherMode ? (\n         <LockButton lockFn={() => onLock()} locked={textData.locked}/>\n         ) : null}\n        <Form.Control.Feedback type={\"invalid\"}>{errorProperty}</Form.Control.Feedback>\n   </InputGroup>\n\n);\n\nexport default TextInput;","import {Col, Form, Row} from \"react-bootstrap\";\nimport TextInput from \"./TextInput\";\nimport React from \"react\";\n\nfunction TextComponent({labelText,onChangeSetFunction,onLockFunction,textData,textInputLabel,idName,errorProperty,teacherMode}){\n    return(\n        <Row>\n            <Col lg={12}>\n                    <Form.Group>\n                        <Form.Label>{labelText}</Form.Label>\n                        <TextInput\n                            errorProperty={errorProperty}\n                            onChange={(e) => onChangeSetFunction(e.target.value)}\n                                   onLock={() => onLockFunction()}\n                                   textData={textData}\n                                   label={textInputLabel}\n                                   teacherMode={teacherMode}\n                                   id={idName}/>\n                    </Form.Group>\n            </Col>\n        </Row>\n    )\n}\n\nexport default TextComponent;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button} from \"react-bootstrap\";\n\nconst ComponentLockButton = ({lockFn, locked, subject = ''}) => (\n    <Button style={{}}\n        variant='secondary' size={\"sm\"}\n        title={(locked ? 'Edit ' : 'Finish editing ') + subject}\n        className='py-0 mr-2'\n        onClick={lockFn}>\n        <FontAwesome name={locked ? 'fas fa-edit' : 'far fa-check'}/>\n        <span>&nbsp;{locked ? 'Edit' : 'Done'}</span>\n    </Button>\n);\n\nexport default ComponentLockButton;","import React, { useState } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Help from \"../../buttons/Help\";\nimport TextComponent from \"../components_parts/TextComponent\";\nimport ComponentLockButton from \"../../buttons/ComponentLockButton\";\nimport {Collapse} from \"react-bootstrap\";\n\nconst languageHelp = (\n    <>\n        <p>A first-order language is defined in this section.</p>\n        <p>The Edit/Done button toggles between editing\n        the language and viewing it in a more compact form.</p>\n        <p className=\"mb-0\">Syntactic requirements:</p>\n        <ul className=\"mb-0\">\n            <li>Symbols in all sets are <strong>comma-separated</strong>.</li>\n            <li>Each predicate and function symbol\n            must be followed by a slash (<code>/</code>) and arity\n            (the number of arguments the symbol takes, a positive integer):{\" \"}\n            <strong><code>symbol/arity</code></strong>.</li>\n        </ul>\n    </>\n);\n\nfunction constantComponent(props) {\n    if(props.language.lockedComponent){\n        return (\n            <p><span>𝓒<sub>𝓛</sub> = &#123;</span> {props.language.constants.parsed.join(', ')} &#125;</p>\n        );\n    } else {\n        return(\n            <TextComponent labelText={\"Individual constant\"}\n                           errorProperty={props.language.constants.errorMessage}\n                           onChangeSetFunction={props.setConstants}\n                           onLockFunction={props.lockConstants}\n                           textData={props.language.constants}\n                           textInputLabel={<span>𝓒<sub>𝓛</sub> = &#123;</span>}\n                           teacherMode={props.teacherMode}\n                           idName={'language-editor-constants'}\n            />\n        );\n    }\n}\n\nfunction predicateComponent(props) {\n    if(props.language.lockedComponent){\n        return (\n            <p><span>𝓟<sub>𝓛</sub> = &#123;</span> {props.language.predicates.parsed.map(tuple => tuple.name + '/' + tuple.arity).join(', ')} &#125;</p>\n        );\n    } else {\n        return(\n            <TextComponent labelText={\"Predicate symbols\"}\n                           errorProperty={props.language.predicates.errorMessage}\n                           onChangeSetFunction={props.setPredicates}\n                           onLockFunction={props.lockPredicates}\n                           textData={props.language.predicates}\n                           textInputLabel={<span>𝓟<sub>𝓛</sub> = &#123;</span>}\n                           teacherMode={props.teacherMode}\n                           idName={'language-editor-predicates'}\n            />\n        );\n    }\n}\n\nfunction functionComponent(props) {\n    if(props.language.lockedComponent){\n        return (\n            <p><span>𝓕<sub>𝓛</sub> = &#123;</span> {props.language.functions.parsed.map(tuple => tuple.name + '/' + tuple.arity).join(', ')} &#125;</p>\n        );\n    } else {\n        return(\n            <TextComponent labelText={\"Function symbols\"}\n                           errorProperty={props.language.functions.errorMessage}\n                           onChangeSetFunction={props.setFunctions}\n                           onLockFunction={props.lockFunctions}\n                           textData={props.language.functions}\n                           textInputLabel={<span>𝓕<sub>𝓛</sub> = &#123;</span>}\n                           teacherMode={props.teacherMode}\n                           idName={'language-editor-functions'}\n            />\n        );\n    }\n}\n\nconst Language = (props) => {\n  const [showHelp, setShowHelp] = useState(false);\n\n  return (\n    <Card className='mb-3'>\n      <Card.Header as=\"h5\" className={\"d-flex justify-content-between\"}>\n          <span>Language 𝓛</span>\n          <div className={\"d-flex justify-content-left\"}>\n            <ComponentLockButton lockFn={() => props.lockLanguageComponent()}\n                locked={props.language.lockedComponent} subject='language'/>\n            <Help subject='language'\n                children={languageHelp}\n                onToggle={setShowHelp}\n                show={showHelp} />\n          </div>\n      </Card.Header>\n      <Card.Body>\n        {constantComponent(props)}\n        {predicateComponent(props)}\n        {functionComponent(props)}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Language;","import {connect} from 'react-redux';\nimport {lockLanguageComponent, setConstants, setFunctions, setPredicates} from \"../actions\";\nimport Language from '../../math_view/components/Language';\nimport {lockConstants, lockFunctions, lockPredicates} from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  language: state.language,\n  teacherMode: state.common.teacherMode\n});\n\nconst mapDispatchToProps = {\n  setConstants: setConstants,\n  setPredicates: setPredicates,\n  setFunctions: setFunctions,\n  lockConstants: lockConstants,\n  lockPredicates: lockPredicates,\n  lockFunctions: lockFunctions,\n  lockLanguageComponent: lockLanguageComponent\n};\n\nconst LanguageContainer = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Language);\n\nexport default LanguageContainer;","import React, { useState } from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport TextInput from \"../components_parts/TextInput\";\nimport Help from \"../../buttons/Help\";\nimport {Collapse} from \"react-bootstrap\";\n\nconst assignmentHelp = (\n    <>\n        <p>An assignment of individual variables\n            (i.e., a partial map from individual variables to the domain 𝐷)\n            is defined in this section.</p>\n        <p>Any alphanumeric symbol that is not an individual constant,\n            predicate, or function symbol is considered a variable.</p>\n        <p className='mb-0'>Elements of the assignment are comma-separated ordered pairs.\n            Each pair can be written as <code>(variable, element)</code>\n            or <code>variable ↦ element</code>.\n            The maps-to symbol <code>↦</code> can also be written as{\" \"}\n            <code>-></code>, <code>|-></code>, <code>\\mapsto</code>,\n            or <code>⟼</code>.</p>\n    </>\n);\n\nconst VariablesValue = (props) => {\n    const [showHelp, setShowHelp] = useState(false);\n    return (\n        <Card className={\"mb-3\"}>\n            <Card.Header as=\"h5\" className={\"d-flex justify-content-between\"}>\n                <span>Variable assignment</span>\n                <Help subject='language'\n                    children={assignmentHelp}\n                    onToggle={setShowHelp}\n                    show={showHelp} />\n            </Card.Header>\n            <Card.Body>\n                <Row>\n                    <Col lg={12}>\n                        <Form.Group>\n                            <Form.Label>Assignment of individual variables</Form.Label>\n                            <TextInput\n                                errorProperty={props.variables.errorMessage}\n                                onChange={(e) => props.onInputChange(e.target.value)}\n                                onLock={() => props.lockInput()}\n                                textData={props.variables}\n                                label={<span>𝑒 = &#123;</span>}\n                                teacherMode={props.teacherMode}\n                                id='editor-variables'/>\n                        </Form.Group>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default VariablesValue;","import {lockVariablesComponent, setVariablesValue} from \"../actions\";\nimport {connect} from 'react-redux';\nimport VariablesValue from \"../../math_view/components/VariablesValue\";\nimport {lockVariables} from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  teacherMode: state.common.teacherMode,\n  variables: state.structure.variables\n});\n\nconst mapDispatchOnProps = {\n  onInputChange: setVariablesValue,\n  lockInput: lockVariables\n};\n\nconst VariablesValueContainer = connect(\n   mapStateToProps,\n   mapDispatchOnProps\n)(VariablesValue);\n\nexport default VariablesValueContainer;","import {Col} from \"react-bootstrap\";\nimport React from \"react\";\nimport TextComponent from \"./TextComponent\";\n\nfunction Domain({structure,setDomain,lockDomain,teacherMode}) {\n    return (\n        <Col>\n        <TextComponent onChangeSetFunction={setDomain}\n                       errorProperty={structure.domain.errorMessage} textInputLabel={<span><var>D</var> = &#123;</span>} onLockFunction={lockDomain} textData={structure.domain} teacherMode={teacherMode} idName={'language-editor-domain'} labelText={\"Domain\"}>\n        </TextComponent>\n        </Col>\n    )\n}\n\nexport default Domain;","import {Col, Form, InputGroup} from \"react-bootstrap\";\nimport LockButton from \"../../buttons/LockButton\";\nimport React from \"react\";\n\n// Temporary fix until react-bootstrap is upgraded to >=2.0.0,\n// which has Form.Select\nfunction CustomSelect({isInvalid, className = '', ...props}) {\n    className = (className === ''\n        ? 'custom-select'\n        : `${className} custom-select`\n    );\n    if (isInvalid) {\n        className = className + ' is-invalid';\n    }\n    return (\n        <select className={className} {...props}/>\n    )\n}\n\nexport function ConstantInterpretation({structure,setConstantValue,structureObject,teacherMode,lockConstantValue}){\n    return(\n    <Col lg={12}>\n        <Form>\n            <Form.Label>Interpretation of individual constants</Form.Label>\n            {Object.keys(structure.constants).map((constant) =>\n                <Form.Group key={constant} >\n                    <InputGroup size='sm' className='has-validation'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id={'constant-' + constant}><var>i</var>({constant}) = </InputGroup.Text>\n                        </InputGroup.Prepend>\n\n                        <CustomSelect value={structure.constants[constant].value}\n                                      id={'constant-' + constant}\n                                      onChange={(e) => setConstantValue(e.target.value, constant)}\n                                      disabled={structure.constants[constant].locked}\n                                      isInvalid={structure.constants[constant].errorMessage.length > 0}>\n                            <option key={''} value={''}>Vyber hodnotu ...</option>\n                            {[...structureObject.domain].map((item) =>\n                                <option key={item} value={item}>{item}</option>\n                            )}\n                        </CustomSelect>\n                        {teacherMode ? (\n                            <InputGroup.Append>\n                                <LockButton lockFn={() => lockConstantValue(constant)}\n                                            locked={structure.constants[constant].locked}/>\n                            </InputGroup.Append>\n                        ) : null}\n                        <Form.Control.Feedback type={\"invalid\"}>{structure.constants[constant].errorMessage}</Form.Control.Feedback>\n                    </InputGroup>\n                </Form.Group>\n            )}\n        </Form>\n    </Col>\n    )\n}\n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport {PREDICATE} from \"../../constants\";\n\nfunction renderFunctionValueSelect(functionName, functionValues, params, domain, onChange, disabled) {\n    let value = functionValues[JSON.stringify(params)];\n    if (!value) {\n        value = '';\n    }\n    return (\n        <select onChange={(e) => onChange(params.concat([e.target.value]), functionName)} value={value}>\n            <option value=''>{''}</option>\n            {domain.map(item =>\n                <option key={item} disabled={disabled} value={item}>{item}</option>\n            )}\n        </select>\n    )\n}\n\nexport function RelationalTable(props) {\n    let domain = [...props.domain];\n\n    let inputComponent = (item) => (\n        <td key={item} className=\"checkComponent\">\n            {props.type === PREDICATE ? (\n                <input type='checkbox'\n                       onChange={(e) => props.onInputChange(item, props.name, e.target.checked)}\n                       checked={props.value.findIndex((e) => JSON.stringify(e) === JSON.stringify(item)) > -1}\n                       disabled={props.disabled}/>\n            ) : (\n                renderFunctionValueSelect(props.name, props.value, item, domain, props.onInputChange, props.disabled)\n            )}\n        </td>\n    );\n\n    let arity1 = (\n        <tr>\n            <td>{''}</td>\n            {domain.map((item) =>\n                inputComponent([item])\n            )}\n        </tr>\n    );\n\n    let arity2 = domain.map((item1) =>\n        <tr key={item1}>\n            <th className=\"interpretationHead\">{item1}</th>\n            {domain.map((item2) =>\n                inputComponent([item1, item2])\n            )}\n        </tr>\n    );\n\n    return (\n        <Table bordered responsive size=\"sm\" className=\"small\">\n            <thead>\n            <tr>\n                <th className=\"interpretationHead\">{props.name}</th>\n                {domain.map(item =>\n                    <th key={item} className=\"interpretationHead\">{item}</th>\n                )}\n            </tr>\n            </thead>\n            <tbody>\n            {parseInt(props.arity) === 1 ? arity1 : arity2}\n            </tbody>\n        </Table>\n    )\n}","import React from 'react';\n\nexport class SelectComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({value: e.target.value});\n        addIntoFunctionTable(this.props.index,e.target.value,this.props.props);\n    }\n\n    render() {\n        return(\n            <td>\n                {<select onChange={(e) => this.handleChange(e)}  value={this.props.props.selectionElement[this.props.index]}>\n                    <option value=''>{''}</option>\n                    {this.props.domain.map(item =>\n                        <option key={item} disabled={this.props.props.disabled} value={item}>{item}</option>\n                    )}\n                </select>}\n            </td>\n        )\n    }\n}\n\nfunction addIntoFunctionTable(index,value,props){\n    props.selectionElement[index]=value;\n\n    for(let i = 0;i<props.selectionElement.length;i++){\n        if(!props.selectionElement[i].length>0){\n            return;\n        }\n    }\n    let array = props.selectionElement.slice();\n    props.onInputChange(array,props.name,true);\n    props.selectionElement.fill(\"\");\n}\n\n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport {SelectComponent} from \"./SelectComponent\";\n\nfunction renderPredicateValueSelect(predicateName, predicateValues, params, domain, onInputChange, disabled,value,index) {\n    return (\n        <select onChange={(e) => changeValue(onInputChange,e.target.value,params,index,predicateName)} value={value}>\n            <option value=''>{''}</option>\n            {domain.map(item =>\n                <option key={item} disabled={disabled} value={item}>{item}</option>\n            )}\n        </select>\n    )\n}\nfunction changeValue(onInputChange,value,params,index,predicateName){\n    if(value===params[index]){\n        return;\n    }\n    onInputChange(params,predicateName,false);\n    if(value!==''){\n        params[index]=value;\n        onInputChange(params,predicateName,true);\n    }\n}\n\nexport function DatabasePredicate(props) {\n    let domain = [...props.domain];\n\n    if(props.selectionElement===undefined){\n        props = Object.assign({selectionElement: Array(parseInt(props.arity))}, props);\n        props.selectionElement.fill(\"\");\n    }\n        let element = (predicateArrayElements) => (\n        <tbody>\n        {predicateArrayElements.map((onePredicateArray,count) =>\n        <tr key={'database-predicate-row'+count}>\n            {onePredicateArray.map((domainElement,index) =>\n                <td key={'database-predicate-column'+index}>\n                    {renderPredicateValueSelect(props.name, props.value, [...onePredicateArray], domain, props.onInputChange, props.disabled,domainElement,index)}\n\n                </td>\n            )}\n        </tr>\n        )}\n        {newSelectionElement()}\n        </tbody>\n    );\n\n    //ak je props.arity string tak to nevytvori pole danej velkost, teda to treba najprv parsnut\n    let newSelectionElement = () => (\n        <tr>\n            {props.selectionElement.map((value,index)=>\n                <SelectComponent key={'select-component'+index} domain={domain} index={index} props={props}/>\n            )}\n        </tr>\n    );\n\n\n    let headElements = () =>(\n        <thead>\n        <tr>\n            {[...Array(parseInt(props.arity))].map((x, count) =>\n                <th key={\"m\" + (count + 1)} className=\"interpretationHead\"><var>{\"m\"}</var><sub>{count + 1}</sub></th>\n\n            )}\n        </tr>\n        </thead>\n        );\n\n    if(Array.isArray(props.value)) {\n        return (\n            <Table bordered responsive size=\"sm\" className=\"small\">\n                {headElements()}\n                {element(props.value)}\n            </Table>\n        );\n   }\n    else{\n        return (\n            <Table bordered responsive>\n                {headElements()}\n                <tbody>\n                {newSelectionElement()}\n                </tbody>\n            </Table>\n        )\n    }\n}","import {Col, Form} from \"react-bootstrap\";\nimport {PREDICATE} from \"../../constants\";\nimport React from \"react\";\nimport {RelationalTable,DatabasePredicate} from './index'\nimport TextInput from \"./TextInput\";\n\nfunction PredicateInterpretation({structure,predicates,setPredicateValueText,lockPredicateValue,toggleTable,toggleDatabase,domain,setPredicateValueTable,structureObject,teacherMode,lengthOfCol}){\n    return(\n        <Col lg={lengthOfCol}>\n            <Form.Label>Interpretation of predicate symbols</Form.Label>\n                {predicates.map((name) =>\n                    <Form.Group key={name}>\n                        <TextInput\n                                   errorProperty={structure.predicates[name].errorMessage}\n                                   onChange={(e) => setPredicateValueText(e.target.value, name)}\n                                   onLock={() => lockPredicateValue(name)}\n                                   textData={structure.predicates[name]}\n                                   label={<span><var>i</var>({name.split('/')[0]}) = &#123;</span>}\n                                   teacherMode={teacherMode}\n                                   id={'predicate-' + name}\n                                   toggleTable={() => toggleTable(PREDICATE, name)}\n                                   toggleDatabase={() => toggleDatabase(PREDICATE, name)}\n                                   databaseEnabled={structure.predicates[name].databaseEnabled}\n                                   tableEnabled={structure.predicates[name].tableEnabled}\n                                   arity={parseInt(name.split('/')[1])}\n                                   domain={domain}/>\n                        {structure.predicates[name].tableEnabled && domain.size > 0 ? (\n                            <RelationalTable name={name} domain={structureObject.domain}\n                                             arity={structureObject.language.predicates.get(name.split('/')[0])}\n                                             value={structureObject.iPredicate.get(name) ? structureObject.iPredicate.get(name) : []}\n                                             onInputChange={setPredicateValueTable}\n                                             type={PREDICATE}\n                                             disabled={structure.predicates[name].locked}/>\n                        ) : null}\n                        {structure.predicates[name].databaseEnabled && domain.size > 0? (\n                            <DatabasePredicate name={name} domain={structureObject.domain}\n                                              arity={structureObject.language.predicates.get(name.split('/')[0])}\n                                              value={structureObject.iPredicate.has(name) ? structureObject.iPredicate.get(name) : {}}\n                                              onInputChange={setPredicateValueTable}\n                                              disabled={structure.predicates[name].locked}\n                                              type={PREDICATE}/>\n                        ) : null}\n                    </Form.Group>\n                )}\n        </Col>\n    )\n}\nexport default PredicateInterpretation;","import React from 'react';\nimport {Table} from 'react-bootstrap';\n\nfunction renderFunctionValueSelect(functionName, functionValues, params, domain, onChange, disabled) {\n    let value = functionValues[JSON.stringify(params)];\n    if (!value) {\n        value = '';\n    }\n    return (\n        <select onChange={(e) => onChange(params.concat([e.target.value]), functionName)} value={value}>\n            <option value=''>{''}</option>\n            {domain.map(item =>\n                <option key={item} disabled={disabled} value={item}>{item}</option>\n            )}\n        </select>\n    )\n}\n\n\nfunction permutateWithRepetitions(permutationOptions,permutationLength) {\n    if (permutationLength === 1) {\n        return permutationOptions.map(permutationOption => [permutationOption]);\n    }\n\n    // Init permutations array.\n    const permutations = [];\n\n    // Get smaller permutations.\n    const smallerPermutations = permutateWithRepetitions(\n        permutationOptions,\n        permutationLength - 1,\n    );\n\n    // Go through all options and join it to the smaller permutations.\n    permutationOptions.forEach((currentOption) => {\n        smallerPermutations.forEach((smallerPermutation) => {\n            permutations.push([currentOption].concat(smallerPermutation));\n        });\n    });\n    return permutations;\n}\n\n\nfunction DatabaseFunction(props) {\n    let domain = [...props.domain];\n    let domainValueArray = Object.values(domain);\n\n    let mainElement = (\n        <tbody>\n        {permutateWithRepetitions(domainValueArray,props.arity).map((arrayValues,count) =>\n            <tr key={\"database-function-row\"+count}>\n                {arrayValues.map((value,index) =>\n                    <td key={\"database-function-row-\"+count+\"-item-\"+index}>\n                        {value}\n                    </td>\n                )}\n                <td>\n                    {renderFunctionValueSelect(props.name, props.value, [...arrayValues], domain, props.onInputChange, props.disabled)}\n                </td>\n            </tr>\n                    )}\n        </tbody>\n        );\n\n    let headElements = (\n        <th>\n            {props.symbol+\"(\"}\n        {[...Array(props.arity-1)].map((x, count) =>\n            <span key={\"database-function-header-parameter-\"+count}><var>{\"m\"}</var><sub>{count+1}</sub>{\", \"}</span>\n         )}\n            <span key={\"database-function-header-parameter-last\"}><var>{\"m\"}</var><sub>{props.arity}</sub></span>\n            {\")\"}\n        </th>\n    );\n\n    return (\n        <Table bordered responsive size=\"sm\" className=\"small\">\n            <thead>\n            <tr>\n                {[...Array(props.arity)].map((x, count) =>\n                    <th key={\"database-function-header\"+count}><var>{\"m\"}</var><sub>{count+1}</sub></th>\n                )}\n                {headElements}\n            </tr>\n            </thead>\n            {mainElement}\n        </Table>\n    );\n}\nexport default DatabaseFunction;","import {Col, Form} from \"react-bootstrap\";\nimport TextInput from \"./TextInput\";\nimport {FUNCTION} from \"../../constants\";\nimport React from \"react\";\nimport DatabaseFunction from \"./DatabaseFunction\";\nimport {RelationalTable} from './index'\n\nfunction FunctionInterpretation({functions,structure,setFunctionValueText,lockFunctionValue,toggleTable,toggleDatabase,teacherMode,domain,structureObject,setFunctionValueTable,lengthOfCol}) {\n    return (\n        <Col lg={lengthOfCol}>\n            <Form.Label>Interpretation of function symbols</Form.Label>\n                {functions.map((name) =>\n                    <Form.Group key={name}>\n                        <TextInput\n                            errorProperty={structure.functions[name].errorMessage}\n                            onChange={(e) => setFunctionValueText(e.target.value, name)}\n                            onLock={() => lockFunctionValue(name)}\n                            textData={structure.functions[name]}\n                            label={<span><var>i</var>({name.split('/')[0]}) = &#123;</span>}\n                            teacherMode={teacherMode}\n                            id={'function-' + name}\n                            toggleTable={() => toggleTable(FUNCTION, name)}\n                            toggleDatabase={() => toggleDatabase(FUNCTION, name)}\n                            databaseEnabled={structure.functions[name].databaseEnabled}\n                            tableEnabled={structure.functions[name].tableEnabled}\n                            arity={parseInt(name.split('/')[1])}\n                            domain={domain}/>\n                        {structure.functions[name].tableEnabled && domain.size > 0 ? (\n                            <RelationalTable name={name} domain={structureObject.domain}\n                                             arity={structureObject.language.functions.get(name.split('/')[0])}\n                                             value={structureObject.iFunction.has(name) ? structureObject.iFunction.get(name) : {}}\n                                             onInputChange={setFunctionValueTable}\n                                             disabled={structure.functions[name].locked}\n                                             type={FUNCTION}/>\n                        ) : null}\n                        {structure.functions[name].databaseEnabled && domain.size > 0 ? (\n                            <DatabaseFunction name={name} domain={structureObject.domain}\n                                              arity={structureObject.language.functions.get(name.split('/')[0])}\n                                              symbol={name.split('/')[0]}\n                                              value={structureObject.iFunction.has(name) ? structureObject.iFunction.get(name) : {}}\n                                              onInputChange={setFunctionValueTable}\n                                              disabled={structure.functions[name].locked}\n                                              type={FUNCTION}/>\n                        ) : null}\n                    </Form.Group>\n                )}\n        </Col>\n    )\n}\nexport default FunctionInterpretation;","import React, { useState } from 'react';\nimport {\n  Row\n} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\n\nimport Domain from \"../components_parts/Domain\";\nimport {ConstantInterpretation} from \"../components_parts\";\nimport PredicateInterpretation from \"../components_parts/PredicateInterpretation\";\nimport FunctionInterpretation from \"../components_parts/FunctionInterpretation\";\nimport Help from \"../../buttons/Help\";\n\nconst structureHelp = (\n    <>\n        <p>\n          A first-order structure for language 𝓛\n          is defined in this section.\n          When the language is modified,\n          inputs for interpretations of symbols are updated accordingly.\n        </p>\n        <p className='mb-0'>Syntactic requirements:</p>\n        <ul className='mb-0'>\n          <li>Elements in all sets (the domain, interpretations of\n            predicates and functions) are comma-separated.</li>\n          <li>Strings of any Unicode characters except spaces, comma,\n            and parentheses can be used as domain elements.</li>\n          <li>An individual constant is interpreted a domain element\n            picked from a menu.</li>\n          <li>A unary predicate symbol is interpreted as\n            a set of domain elements.</li>\n          <li>An <var>n</var>-ary predicate symbol\n            for <var>n</var> &gt; 1 is interpreted as\n            a set of <var>n</var>-tuples of domain elements.\n            Each <var>n</var>-tuple is written as{\" \"}\n            <code>(elem<sub>1</sub>, …, elem<sub><var>n</var></sub>)</code>.</li>\n          <li>An <var>n</var>-ary function symbol is interpreted as\n            a set of (<var>n</var>+1)-tuples of domain elements,\n            each written as{\" \"}\n            <code>(arg<sub>1</sub>, …, arg<sub><var>n</var></sub>, value)</code>.</li>\n        </ul>\n    </>\n);\n\nfunction Structure({structure,setDomain,lockDomain,teacherMode,setConstantValue,structureObject,lockConstantValue,setPredicateValueText,lockPredicateValue,toggleTable,toggleDatabase,domain,setPredicateValueTable,setFunctionValueText,lockFunctionValue,setFunctionValueTable}) {\n  let constants = Object.keys(structure.constants);\n  let predicates = Object.keys(structure.predicates);\n  let functions = Object.keys(structure.functions);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  return (\n     <Card className={\"mb-3\"}>\n       <Card.Header as={\"h5\"} className={\"d-flex justify-content-between\"}>\n           <span>Structure 𝓜 = (<var>D</var>, <var>i</var>)</span>\n           <Help subject='language'\n                children={structureHelp}\n                onToggle={setShowHelp}\n                show={showHelp} />\n       </Card.Header>\n\n       <Card.Body>\n          <Row>\n              <Domain structure={structure} setDomain={setDomain} lockDomain={lockDomain} teacherMode={teacherMode} lengthOfCol={12}/>\n          </Row>\n         {constants.length === 0 ? null : (\n            <Row>\n                <ConstantInterpretation structure={structure} teacherMode={teacherMode} constants={constants} lockConstantValue={lockConstantValue} setConstantValue={setConstantValue} structureObject={structureObject} lengthOfCol={12}/>\n            </Row>\n         )}\n         {predicates.length === 0 ? null : (\n            <Row>\n                <PredicateInterpretation structureObject={structureObject} structure={structure} toggleDatabase={toggleDatabase} teacherMode={teacherMode} domain={domain} lockPredicateValue={lockPredicateValue} predicates={predicates} setPredicateValueTable={setPredicateValueTable} setPredicateValueText={setPredicateValueText} toggleTable={toggleTable} lengthOfCol={12}/>\n            </Row>\n         )}\n         {functions.length === 0 ? null : (\n            <Row>\n                <FunctionInterpretation toggleTable={toggleTable} toggleDatabase={toggleDatabase} domain={domain} teacherMode={teacherMode} structure={structure} structureObject={structureObject} functions={functions} lockFunctionValue={lockFunctionValue} setFunctionValueTable={setFunctionValueTable} setFunctionValueText={setFunctionValueText} lengthOfCol={12}/>\n            </Row>\n         )}\n       </Card.Body>\n     </Card>\n  )\n}\n\nexport default Structure;","export const CONSTANT_IN_LANGUAGE =\n    'Language 𝓛 already contains the constant';\nexport const FUNCTION_IN_LANGUAGE =\n    'Language 𝓛 already contains the function symbol';\nexport const PREDICATE_IN_LANGUAGE =\n    'Language 𝓛 already contains the predicate symbol';\n\nexport const ITEM_IN_LANGUAGE = (item) => `Language 𝓛 already contains the symbol ${item}`;\n\nexport const EMPTY_CONSTANT_VALUE =\n    'An interpretation of this constant must be defined';\nexport const EMPTY_DOMAIN =\n    'Domain cannot be empty';\nexport const ITEM_NOT_IN_DOMAIN = (item) =>\n    `${item} is not an element of the domain`;\n\nexport const FUNCTION_NOT_FULL_DEFINED =\n    'Function is not total (i.e., defined for all domain elements or tuples)';\nexport const FUNCTION_ALREADY_DEFINED = (params) =>\n    `Multiple function values are assigned to ${params}`;\n\nexport const addTypeDescription = (symbolType) => symbolType.toLowerCase()\n","import {EMPTY_CONSTANT_VALUE} from \"../constants/messages\";\n\n/**\n * Represent components_parts\n * @author Milan Cifra\n * @class\n */\nclass Structure {\n\n  /**\n   *\n   * @param {Language} language\n   */\n\n  constructor(language, parsedDomain, constants,\n              predicates, functions) {\n    this.language = language;\n    this.domain = new Set();\n    this.iConstant = new Map();\n    this.iPredicate = new Map();\n    this.iFunction = new Map();\n    parsedDomain.forEach(i => {\n      this.domain.add(i);\n    });\n    this.language.constants.forEach(c => {\n      this.iConstant.set(c, constants[c].value);\n    });\n\n    this.language.functions.forEach((arity, name) => {\n      let functionName = name + \"/\" + arity;\n      this.iFunction.set(functionName, {});\n      if(functions[functionName] === undefined){\n        return;\n      }\n      functions[functionName].parsed.forEach(tuple => {\n        let params = tuple.slice(0, tuple.length - 1);\n        let value = tuple[tuple.length - 1];\n        this.iFunction.get(functionName)[JSON.stringify(params)] = value;\n      });\n    });\n\n    this.language.predicates.forEach((arity, name) => {\n      let predicateName = name + \"/\" + arity;\n      this.iPredicate.set(predicateName, []);\n      if(predicates[predicateName] === undefined){\n        return;\n      }\n      predicates[predicateName].parsed.forEach(tuple => {\n        this.iPredicate.get(predicateName).push(tuple);\n      });\n    });\n  }\n}\n\nexport default Structure;","import {CONSTANT_IN_LANGUAGE, FUNCTION_IN_LANGUAGE, PREDICATE_IN_LANGUAGE} from \"../constants/messages\";\n\n/**\n * Represent language of logic\n * @author Milan Cifra\n * @class\n */\nclass Language {\n    constructor(parsedConstants = [],\n                parsedFunctions = [],\n                parsedPredicates = []) {\n        this.constants = new Set(parsedConstants);\n        this.functions = new Map(parsedFunctions.map(({name, arity}) => [name, parseInt(arity)]));\n        this.predicates = new Map(parsedPredicates.map(({name, arity}) => [name, parseInt(arity)]));\n    }\n\n    /**\n     *\n     * These functions are temporarly here until the grammar changes\n     *\n     *\n     */\n\n    getLanguage(){\n        let nonLogicalSymbols = new Set([...this.constants, ...this.functions.keys(), ...this.predicates.keys()]);\n        return({\n            isConstant: (symbol) =>\n                this.constants.has(symbol),\n            isFunction: (symbol) =>\n                this.functions.has(symbol),\n            isPredicate: (symbol) =>\n                this.predicates.has(symbol),\n            isVariable: (symbol) =>\n                !nonLogicalSymbols.has(symbol),\n        })\n    }\n\n    checkFunctionArity(symbol, args, ee){\n        const a = this.functions.get(symbol);\n        if (args.length !== a) {\n            ee.expected(`${a} argument${(a == 1 ? '' : 's')} to ${symbol}`);\n        }\n    }\n\n    checkPredicateArity(symbol, args, ee){\n        const a = this.predicates.get(symbol);\n        if (args.length !== a) {\n            ee.expected(`${a} argument${(a == 1 ? '' : 's')} to ${symbol}`);\n        }\n    }\n\n    hasConstant(constantName) {\n        return this.constants.has(constantName);\n    }\n\n    hasPredicate(predicateName) {\n        return this.hasInSet(predicateName,this.predicates);\n    }\n\n    hasFunction(functionName) {\n        return this.hasInSet(functionName,this.functions);\n    }\n\n    hasInSet(elementName,givenSet){\n        let splited = elementName.split('/');\n        if (splited.length !== 2) {\n            return givenSet.has(splited[0]);\n        }\n        if (isNaN(parseInt(splited[1]))) {\n            return false;\n        }\n        return givenSet.has(splited[0]) && givenSet.get(splited[0]).toString() === splited[1].toString();\n    }\n\n    /**\n     * Return arity of the predicate\n     * @param {string} predicateName\n     * @return {int} arity of the predicate\n     */\n    getPredicate(predicateName) {\n        return parseInt(this.predicates.get(predicateName));\n    }\n\n}\n\nexport default Language;","import { createSelector } from 'reselect'\nimport Language from \"../../model/Language\";\n\nconst getConstants = state => state.language.constants.parsed\nconst getFunctions = state => state.language.functions.parsed\nconst getPredicates = state => state.language.predicates.parsed\n\nexport const getLanguageObject = createSelector(\n    [getConstants, getFunctions, getPredicates],\n    (constants, functions, predicates) => {\n        return new Language(constants, functions, predicates);\n    }\n)\n\n","import { createSelector } from 'reselect'\nimport Structure from \"../../model/Structure\";\nimport {getLanguageObject} from \"./languageObject\";\n\nconst getConstants = state => state.structure.constants\nconst getFunctions = state => state.structure.functions\nconst getPredicates = state => state.structure.predicates\nconst getParsedDomain = state => state.structure.domain.parsed\n\nexport const getStructureObject = createSelector(\n    [getLanguageObject, getConstants, getFunctions, getPredicates, getParsedDomain],\n    (language, constants, functions, predicates, parsedDomain) => {\n       return new Structure(language, parsedDomain, constants, predicates, functions);\n    }\n)\n\n","import {connect} from 'react-redux';\nimport {\n  setConstantValue,\n  setDomain,\n  setFunctionValueTable,\n  setFunctionValueText,\n  setPredicateValueTable,\n  setPredicateValueText, toggleDatabase,\n  toggleTable\n} from \"../actions\";\nimport Structure from '../../math_view/components/Structure';\nimport {lockConstantValue, lockDomain, lockFunctionValue, lockPredicateValue} from \"../actions\";\nimport {getStructureObject} from \"../selectors/structureObject\";\n\nconst mapStateToProps = (state) => ({\n  language: state.language,\n  structure: state.structure,\n  structureObject: getStructureObject(state),\n  teacherMode: state.common.teacherMode,\n  domain: getStructureObject(state).domain,\n  diagramModel:state.diagramModel\n});\n\nconst mapDispatchToProps = {\n  setDomain: setDomain,\n  setConstantValue: setConstantValue,\n  setPredicateValueText: setPredicateValueText,\n  setPredicateValueTable: setPredicateValueTable,\n  setFunctionValueText: setFunctionValueText,\n  setFunctionValueTable: setFunctionValueTable,\n  toggleTable: toggleTable,\n  toggleDatabase:toggleDatabase,\n  lockDomain: lockDomain,\n  lockConstantValue: lockConstantValue,\n  lockPredicateValue: lockPredicateValue,\n  lockFunctionValue: lockFunctionValue\n};\n\nconst StructureContainer = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Structure);\n\nexport default StructureContainer;","import React from 'react';\nimport {Button} from \"react-bootstrap\";\nimport FontAwesome from \"react-fontawesome\";\nimport { addTypeDescription } from \"../constants/messages\"\n\nconst AddButton = ({onClickAddFunction,addType}) => (\n    <Button variant={\"success\"}\n        title={`Add a new ${addTypeDescription(addType)}`}\n        onClick={() => onClickAddFunction(addType)}><FontAwesome\n        name='plus'/>\n        &nbsp;Add\n    </Button>\n);\n\nexport default AddButton;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button} from \"react-bootstrap\";\n\nconst HenkinHintikkaGameButton = ({onClick, gameEnabled, disabled}) => (\n    <Button size=\"sm\" onClick={() => onClick()}\n        variant={\"outline-secondary\"}\n        active={gameEnabled}\n        disabled={disabled}\n        title={`${ gameEnabled ? 'End' : 'Start' } Henkin-Hintikka game`}>\n        <FontAwesome name='fas fa-gamepad'/>\n    </Button>\n);\nexport default HenkinHintikkaGameButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div.attrs({\n  className: `d-flex flex-column\n              position-relative\n              w-100\n              m-0 p-3\n              border`\n  })`\n  max-height: 95vh;\n  height: 500px;\n`;\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MessageArea = styled.div`\n  height: 85%;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column-reverse;\n  margin-bottom: 2%;\n  overflow: auto;\n`;\n\nconst MessageAreaContainer = props => (\n    <MessageArea>\n        <div className={\"d-inline-flex flex-column\"}>\n            {props.children}\n        </div>\n    </MessageArea>)\n\nexport default MessageAreaContainer;","import React from \"react\";\nexport const FIRST_QUESTION = (formula) =>\n    `What is your initial assumption about the truth/satisfaction\n    of the formula ${formula} by the valuation 𝑒 in the structure ℳ?`;\nexport const ENTRY_SENTENCE = (formula, truth) =>\n    `You assume that the formula ${formula} is ${truth}.`;\nexport const EVALUATED_PREDICATE_IN = (tuple, formulaName) =>\n    `${tuple} ∈ i(${formulaName})`;\nexport const EVALUATED_PREDICATE_NOT_IN = (tuple, formulaName) =>\n    `${tuple} ∉ i(${formulaName})`;\nexport const EVALUATED_EQUALITY = (term1, term2) =>\n    `${term1} = ${term2}`;\nexport const EVALUATED_INEQUALITY = (term1, term2) =>\n    `${term1} ≠ ${term2}`;\n\nexport const WIN_1 = (formula, commitment, result) =>\n    [\n        <strong key={0}>You win!</strong>,\n        ` 🎉 The formula ${formula} is indeed ${commitment}, since ${result}.`\n    ];\nexport const WIN_2 = (formula, commitment) =>\n    `Your initial assumption that the formula ${formula} is ${commitment}\n    was correct.`\n\nexport const LOSS = (formula, commitment, result) =>\n    [\n        <strong key={0}>You loose!</strong>,\n        ` 😞 The formula ${formula} is ${commitment}, since ${result}.`\n    ];\nexport const COULD_WON = (formula, commitment) =>\n    [\n        <strong key={0}>You could have won, though.</strong>,\n        ` 🤔 Your initial assumption\n        that the formula ${formula} is ${commitment} was correct.\n        Find incorrect intermediate answers and correct them!`\n    ];\nexport const COULD_NOT_WON = (formula, commitment) =>\n    `Your initial assumption that the formula ${formula} is ${commitment}\n    was incorrect.`;\n\n\nexport const OPERATOR_QUESTION = () =>\n    `Which of the following is the case?`;\nexport const FIRST_FORMULA_OPTION = (formula, commitment) =>\n    `1. The subformula ${formula} is ${commitment}.`;\nexport const SECOND_FORMULA_OPTION = (formula, commitment) =>\n    `2. The subformula ${formula} is ${commitment}.`;\n\nexport const OPERATOR_ANSWER = (formula, commitment) =>\n    `Then ${formula} is ${commitment}.`;\n\nexport const QUANTIFIER_QUESTION = (varName, formula, commitment) =>\n    `Which domain element should be assigned to the variable ${varName}\n    in order to make formula ${formula} ${commitment}?`;\n\nexport const QUANTIFIER_ANSWER = (commitment, formula, varName, varValue) =>\n    `Then the formula ${formula} is also ${commitment},\n    when we assign the element ${varValue} to the variable ${varName}.`;\n\nexport const BTN_CHANGE = \"Change\";\n\nexport const BTN_SHOW = \"Show\";\nexport const BTN_HIDE = \"Hide\";\nexport const BTN_CONT_CURRENT_ASGNMT = \" current assignment\";\n\nexport const BTN_TRUE = 'True';\nexport const BTN_FALSE = 'False';\n\nexport const MID_IS = ' is ';\nexport const COMMITMENT_TRUE = 'true';\nexport const COMMITMENT_FALSE = 'false';\n\nexport const SELECT_DOMAIN_ELEM = 'Select a domain element';\nexport const VAR_IS_ASSIGNED = (varName, value) =>\n    `Assign the domain element ${value} to the variable ${varName}`;\n\nexport const BTN_CONTINUE = 'Continue';\nexport const BTN_FINISH_GAME = 'Finish game';\n","import React, {useState} from \"react\";\nimport styled from 'styled-components';\nimport {Button} from \"react-bootstrap\";\nimport {BTN_CHANGE} from \"../constants/gameMessages\";\n\nconst commonClasses = 'd-inline-block mb-2 p-2'\n\nexport const GameMessageBubble = styled.div\n  .attrs({className: `${commonClasses} text-body`})`\n  font-size: 0.875rem;\n  background: #eee;\n  border-radius: 0 1rem 1rem 1rem;\n`;\n\nconst UserMessage = styled.div\n  .attrs({className: `${commonClasses} text-white bg-primary`})`\n  font-size: 0.875rem;\n  border-radius: 1rem 0 1rem 1rem;\n`;\n\nexport const UserMessageBubble = ({onClick, children}) => {\n  const [hover, setHover] = useState(false);\n\n  return (\n    <div className='d-flex flex-row-reverse w-100'\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}>\n      <UserMessage>\n          {children}\n      </UserMessage>\n      {hover\n        ? <Button onClick={() => onClick()}\n            size=\"sm\"\n            className='text-primary bg-transparent border-0 p-2 mb-2'>\n            <strong>{BTN_CHANGE}</strong>\n          </Button>\n        : null}\n    </div>\n  );\n}\n","/**\n * Represent expression in logic\n * @author Milan Cifra\n * @class\n * @abstract\n */\nclass Expression {\n\n  /*constructor() {\n\n  }*/\n\n  toString() {\n\n  }\n\n  eval(_structure, _e) {\n    return null;\n  }\n\n  substitute(_from, _to, _bound) {\n    //nothing\n  }\n\n  getVariables(){\n    return [];\n  }\n}\n\nexport default Expression;","import Expression from \"../Expression\";\n\n/**\n * Represent simple formula\n * @author Milan Cifra\n * @class\n * @abstract\n * @extends Expression\n */\nclass Formula extends Expression {\n\n  /*constructor() {\n    super();\n  }*/\n\n  toString() {\n    return '';\n  }\n\n  createCopy() {\n    return new Formula();\n  }\n\n  getType(commitment) {\n    return '';\n  }\n\n  getSubFormulas() {\n    return [];\n  }\n\n  substitute(_from, _to, _bound) {\n    //nothing\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [];\n  };\n\n  getVariables(){\n    return [];\n  }\n}\n\n\n\nexport default Formula;","import Formula from \"./Formula\";\nimport {ATOM} from \"../../constants/gameConstants\";\n\n/**\n * Represent predicate symbol\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass PredicateAtom extends Formula {\n\n  /**\n   *\n   * @param {string} name\n   * @param {Term[]} terms\n   */\n  constructor(name, terms = []) {\n    super();\n    this.name = name;\n    this.terms = terms;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    let translatedTerms = [];\n    this.terms.forEach(term => {\n      translatedTerms.push(term.eval(structure, e));\n    });\n    let arity = structure.language.predicates.get(this.name);\n    if (structure.iPredicate.get(this.name + '/' + arity) === undefined) {\n      throw `The interpretation of the predicate symbol ${this.name} is not defined`;\n    }\n    let value = structure.iPredicate.get(this.name + '/' + arity);\n    return value.findIndex(e => JSON.stringify(e) === JSON.stringify(translatedTerms)) > -1;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    let res = this.name + '(';\n    for (let i = 0; i < this.terms.length; i++) {\n      if (i > 0) {\n        res += ', ';\n      }\n      res += this.terms[i].toString();\n    }\n    res += ')';\n    return res;\n  }\n\n  createCopy(){\n    return new PredicateAtom(this.name, this.terms.map( (term) => term.createCopy() ));\n  }\n\n  getType(commitment){\n    return ATOM;\n  }\n\n  getSubFormulas(){\n    return [];\n  }\n\n  substitute(from, to, bound){\n    return new PredicateAtom(this.name, this.terms.map( (term) => term.substitute(from, to, bound) ));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [];\n  }\n\n  getVariables(){\n    return this.terms.flatMap(term => term.getVariables());\n  }\n}\n\nexport default PredicateAtom;","export const PLAYER_QUANTIFIER = 'PLAYER_QUANTIFIER';\nexport const GAME_QUANTIFIER = 'GAME_QUANTIFIER';\nexport const PLAYER_OPERATOR = 'PLAYER_OPERATOR';\nexport const GAME_OPERATOR = 'GAME_OPERATOR';\nexport const NEGATION = 'NEGATION';\nexport const ATOM = 'ATOM';\n\nexport const defaultHintikkaGameData = () => ({\n    gameHistory: new Array(),\n    showVariables: false,\n    gameEnabled: false,\n    variableIndex: 1\n});\n\nexport const gameEntry = (gameCommitment, gameVariables, currentFormula, nextMove, gameMessages, userMessages) => ({\n    gameCommitment: gameCommitment,\n    currentFormula: currentFormula,\n    nextMove: nextMove,\n    gameVariables: gameVariables,\n    gameMessages: gameMessages,\n    userMessages: userMessages\n})","import Formula from \"./Formula\";\nimport {GAME_OPERATOR, PLAYER_OPERATOR} from \"../../constants/gameConstants\";\n\n/**\n * Represent implication\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass Implication extends Formula {\n\n  /**\n   *\n   * @param {Formula} subLeft\n   * @param {Formula} subRight\n   */\n  constructor(subLeft, subRight) {\n    super();\n    this.subLeft = subLeft;\n    this.subRight = subRight;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    const left = this.subLeft.eval(structure, e);\n    const right = this.subRight.eval(structure, e);\n    return !left || right ;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.subLeft.toString()} → ${this.subRight.toString()})`;\n  }\n\n  createCopy(){\n    let subLeft = this.subLeft.createCopy();\n    let subRight = this.subRight.createCopy();\n    return new Implication(subLeft, subRight);\n  }\n\n  getType(commitment){\n    return commitment ? PLAYER_OPERATOR : GAME_OPERATOR;\n  }\n\n  getSubFormulas(){\n    return [this.subLeft, this.subRight];\n  }\n\n  substitute(from, to, bound){\n    return new Implication(this.subLeft.substitute(from, to, bound), this.subRight.substitute(from, to, bound));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [!commitment, commitment];\n  }\n\n  getVariables(){\n    return this.subLeft.getVariables().concat(this.subRight.getVariables());\n  }\n}\n\nexport default Implication;","import React, { Fragment } from \"react\";\nimport GameContainer from \"./GameContainer\";\nimport MessageAreaContainer from \"./MessageAreaContainer\";\nimport {Form, Button, DropdownButton, ButtonGroup, Dropdown} from \"react-bootstrap\";\nimport {\n    ATOM,\n    GAME_OPERATOR,\n    GAME_QUANTIFIER,\n    PLAYER_OPERATOR,\n    PLAYER_QUANTIFIER\n} from \"../constants/gameConstants\";\nimport {\n    BTN_CONTINUE,\n    BTN_CONT_CURRENT_ASGNMT,\n    BTN_FALSE,\n    BTN_FINISH_GAME,\n    BTN_HIDE,\n    BTN_SHOW,\n    BTN_TRUE,\n    COMMITMENT_FALSE,\n    COMMITMENT_TRUE,\n    COULD_NOT_WON,\n    COULD_WON,\n    ENTRY_SENTENCE,\n    EVALUATED_EQUALITY,\n    EVALUATED_INEQUALITY,\n    EVALUATED_PREDICATE_IN,\n    EVALUATED_PREDICATE_NOT_IN,\n    FIRST_FORMULA_OPTION,\n    FIRST_QUESTION, LOSS,\n    MID_IS,\n    OPERATOR_ANSWER, OPERATOR_QUESTION,\n    QUANTIFIER_ANSWER,\n    QUANTIFIER_QUESTION,\n    SECOND_FORMULA_OPTION,\n    SELECT_DOMAIN_ELEM,\n    VAR_IS_ASSIGNED,\n    WIN_1, WIN_2\n} from \"../constants/gameMessages\";\nimport {GameMessageBubble, UserMessageBubble} from \"./MessageBubbles\";\nimport PredicateAtom from \"../model/formula/Formula.PredicateAtom\";\nimport Implication from \"../model/formula/Formula.Implication\";\n\nexport class HenkinHintikkaGame extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        const { formula, index: formulaIndex, goBack } = this.props;\n        const { gameHistory, variableIndex } = formula;\n        const lastItemIndex = gameHistory.length - 1;\n        const lastHistoryItem = gameHistory[lastItemIndex];\n        const gameMessageBubble = (itemIndex) => (message, messageIndex) =>\n            <GameMessageBubble key={`${itemIndex}gmb${messageIndex}`}>\n                {message}\n            </GameMessageBubble>;\n        const userMessageBubble = (itemIndex) => (message, messageIndex) =>\n            <UserMessageBubble key={`${itemIndex}umb${messageIndex}`}\n                onClick={() => goBack(formulaIndex, itemIndex)}>\n                {message}\n            </UserMessageBubble>;\n        const historicMessages = (historyItem, itemIndex) =>\n            [\n                historyItem.gameMessages.map(gameMessageBubble(itemIndex)),\n                historyItem.userMessages.map(userMessageBubble(itemIndex))\n            ]\n        return(\n            <GameContainer className='rounded'>\n                <MessageAreaContainer>\n                    {gameHistory.flatMap(historicMessages)}\n                    {this.generateMessage(lastHistoryItem, variableIndex)\n                        .map(gameMessageBubble(lastItemIndex))}\n                </MessageAreaContainer>\n                <Form.Group>\n                    {this.getChoice(lastHistoryItem, variableIndex)}\n                </Form.Group>\n                {this.showVariables(lastHistoryItem)}\n            </GameContainer>\n        );\n    }\n\n    showVariables(entry){\n        if(this.props.formula.showVariables) {\n            if(entry.gameVariables.size == 0){\n                return (\n                    <p>𝑒 = &#123;&#160;&#125;</p>\n                );\n            } else {\n                return (\n                    <p>𝑒 = &#123; {Array.from(entry.gameVariables).map(([key, value]) => key + ' ↦ ' + value).join(', ')} &#125;</p>\n                );\n            }\n        } else {\n            return null;\n        }\n    }\n\n    toggleVariables(){\n        const showOrHide = this.props.formula.showVariables\n            ? BTN_HIDE : BTN_SHOW;\n        return(\n            <Button size='sm' variant=\"outline-secondary\"\n                className={\"rounded mr-3\"}\n                onClick={() => this.props.getVariables(this.props.index)}>\n                {showOrHide}{BTN_CONT_CURRENT_ASGNMT}\n            </Button>\n        );\n    }\n\n    chooseCommitment(messages) {\n        return (\n            <div className={\"d-flex justify-content-center\"}>\n                <Button size='sm' variant=\"outline-primary\"\n                    className={\"rounded mr-3\"}\n                    onClick={() => this.props.setGameCommitment(this.props.index, true, messages, [BTN_TRUE])}>\n                    {BTN_TRUE}\n                </Button>\n                <Button size='sm' variant=\"outline-primary\"\n                    className={\"rounded mr-3\"}\n                    onClick={() => this.props.setGameCommitment(this.props.index, false, messages, [BTN_FALSE])}>\n                    {BTN_FALSE}\n                </Button>\n            </div>\n        );\n    }\n\n    chooseFormula(entry, leftCommitment, rightCommitment, messages) {\n        let leftStringCommitment = this.getCommitmentText(leftCommitment);\n        let rightStringCommitment = this.getCommitmentText(rightCommitment);\n        const [subLeft, subRight] = entry.currentFormula.getSubFormulas();\n        let leftUserMessage = [subLeft.toString() + MID_IS + leftStringCommitment];\n        let rightUserMessage = [subRight.toString() + MID_IS + rightStringCommitment];\n        return (\n            <div className={\"d-flex justify-content-center\"}>\n                <Button size='sm' variant=\"outline-primary\" className={\"rounded mr-3\"} onClick={() => this.props.setGameNextFormula(this.props.index, subLeft, leftCommitment, messages, leftUserMessage)}>\n                    {leftUserMessage}\n                </Button>\n                <Button size='sm' variant=\"outline-primary\" className={\"rounded mr-3\"} onClick={() => this.props.setGameNextFormula(this.props.index, subRight, rightCommitment, messages, rightUserMessage)}>\n                    {rightUserMessage}\n                </Button>\n                {this.toggleVariables()}\n            </div>\n        );\n    }\n\n    chooseDomainValue(_entry, messages, variableIndex){\n        let varName = 'n' + variableIndex;\n        return (\n            <div className={\"d-flex justify-content-center\"}>\n                <DropdownButton size='sm' variant=\"outline-primary\"\n                    className={\"rounded mr-3\"} alignRight\n                    as={ButtonGroup}\n                    title={SELECT_DOMAIN_ELEM}>\n                    {this.props.domain.map((value, index) =>\n                        <Dropdown.Item size='sm'\n                            key={index} eventKey={index}\n                            onClick={() => this.props.setGameDomainChoice(\n                                this.props.index, value, messages,\n                                [VAR_IS_ASSIGNED(varName, value)])}>\n                            {value}\n                        </Dropdown.Item>\n                    )}\n                </DropdownButton>\n                {this.toggleVariables()}\n            </div>\n        );\n    }\n\n    chooseOk(messages){\n        return (\n            <div className={\"d-flex justify-content-center\"}>\n                <Button size='sm' variant=\"outline-primary\"\n                    className={\"rounded mr-3\"}\n                    onClick={() => this.props.continueGame(this.props.index, \n                        messages, [BTN_CONTINUE])}>\n                    {BTN_CONTINUE}\n                </Button>\n                {this.toggleVariables()}\n            </div>\n        );\n    }\n\n    chooseEndGame(){\n        return (\n            <div className={\"d-flex justify-content-center\"}>\n                <Button size='sm' variant=\"outline-primary\"\n                    className={\"rounded mr-3\"}\n                    onClick={() => this.props.endGame(this.props.index)}>\n                    {BTN_FINISH_GAME}\n                </Button>\n                {this.toggleVariables()}\n            </div>\n        );\n    }\n\n    getChoice(entry, variableIndex){\n        const messages = this.generateMessage(entry, variableIndex);\n        if(entry.gameCommitment === null){\n            return this.chooseCommitment(messages);\n        } else {\n            switch(entry.currentFormula.getType(entry.gameCommitment)){\n                case ATOM:\n                    return this.chooseEndGame();\n                case PLAYER_OPERATOR:\n                    const subFormulasCommitment = entry.currentFormula.getSubFormulasCommitment(entry.gameCommitment);\n                    return this.chooseFormula(entry, subFormulasCommitment[0], subFormulasCommitment[1], messages);\n                case PLAYER_QUANTIFIER:\n                    return this.chooseDomainValue(entry, messages, variableIndex);\n                case GAME_OPERATOR:\n                case GAME_QUANTIFIER:\n                    return this.chooseOk(messages);\n            }\n        }\n    }\n\n    generateMessage(entry, variableIndex){\n        let varName = 'n' + variableIndex;\n        let messages = [];\n        if(entry.gameCommitment === null){\n            messages.push(FIRST_QUESTION(entry.currentFormula))\n            return messages;\n        } else {\n            const structure = this.props.structureObject;\n            const subFormulas = entry.currentFormula.getSubFormulas();\n            const subFormulasCommitment = entry.currentFormula.getSubFormulasCommitment(entry.gameCommitment);\n            messages.push(ENTRY_SENTENCE(entry.currentFormula.toString(), this.getCommitmentText(entry.gameCommitment)));\n            switch(entry.currentFormula.getType(entry.gameCommitment)){\n                case ATOM:\n                    const initial = this.props.formula.gameHistory[1];\n                    if(entry.gameCommitment === entry.currentFormula.eval(structure, entry.gameVariables)){\n                        messages.push(WIN_1(entry.currentFormula, this.getCommitmentText(entry.gameCommitment),\n                            this.getWinningEvaluatedFormula(entry.currentFormula, structure, entry.gameVariables, entry.gameCommitment)));\n                        messages.push(WIN_2(initial.currentFormula,this.getCommitmentText(initial.gameCommitment)));\n                    } else {\n                        messages.push(LOSS(entry.currentFormula,this.getCommitmentText(!entry.gameCommitment),\n                            this.getLoosingEvaluatedFormula(entry.currentFormula, structure, entry.gameVariables, entry.gameCommitment)));\n                        if(initial.currentFormula.eval(structure, initial.gameVariables) === initial.gameCommitment){\n                            messages.push(COULD_WON(initial.currentFormula, this.getCommitmentText(initial.gameCommitment)));\n                        } else {\n                            messages.push(COULD_NOT_WON(initial.currentFormula, this.getCommitmentText(initial.gameCommitment)));\n                        }\n                    }\n                    return messages;\n\n                case PLAYER_OPERATOR:\n                    messages.push(OPERATOR_QUESTION());\n                    messages.push(FIRST_FORMULA_OPTION(subFormulas[0], this.getCommitmentText(subFormulasCommitment[0])));\n                    messages.push(SECOND_FORMULA_OPTION(subFormulas[1], this.getCommitmentText(subFormulasCommitment[1])));\n                    return messages;\n\n                case GAME_OPERATOR:\n                    messages.push(OPERATOR_ANSWER(entry.nextMove.formula, this.getCommitmentText(entry.nextMove.commitment)));\n                    return messages;\n\n                case PLAYER_QUANTIFIER:\n                    const form = entry.currentFormula.subFormula.substitute(entry.currentFormula.variableName, varName);\n                    messages.push(QUANTIFIER_QUESTION(varName, form, this.getCommitmentText(entry.gameCommitment)));\n                    return messages;\n\n                case GAME_QUANTIFIER:\n                    messages.push(QUANTIFIER_ANSWER(\n                        this.getCommitmentText(entry.nextMove.commitment),\n                        entry.nextMove.formula,\n                        entry.nextMove.variables[0],\n                        entry.nextMove.variables[1]\n                    ));\n                    return messages;\n            }\n        }\n    }\n\n    getWinningEvaluatedFormula(currentFormula, structure, variables, gameCommitment){\n        if(currentFormula instanceof PredicateAtom){\n            if(gameCommitment) {\n                return EVALUATED_PREDICATE_IN(this.getEvaluatedPredicateFormula(currentFormula, structure, variables), currentFormula.name);\n            } else {\n                return EVALUATED_PREDICATE_NOT_IN(this.getEvaluatedPredicateFormula(currentFormula, structure, variables), currentFormula.name);\n            }\n        } else {\n            if(gameCommitment) {\n                return EVALUATED_EQUALITY(currentFormula.subLeft.eval(structure, variables), currentFormula.subRight.eval(structure, variables));\n            } else {\n                return EVALUATED_INEQUALITY(currentFormula.subLeft.eval(structure, variables), currentFormula.subRight.eval(structure, variables));\n            }\n        }\n    }\n\n    getLoosingEvaluatedFormula(currentFormula, structure, variables, gameCommitment){\n        if(currentFormula instanceof PredicateAtom){\n            if(gameCommitment) {\n                return EVALUATED_PREDICATE_NOT_IN(this.getEvaluatedPredicateFormula(currentFormula, structure, variables), currentFormula.name);\n            } else {\n                return EVALUATED_PREDICATE_IN(this.getEvaluatedPredicateFormula(currentFormula, structure, variables), currentFormula.name);\n            }\n        } else {\n            if(gameCommitment) {\n                return EVALUATED_INEQUALITY(currentFormula.subLeft.eval(structure, variables), currentFormula.subRight.eval(structure, variables));\n            } else {\n                return EVALUATED_EQUALITY(currentFormula.subLeft.eval(structure, variables), currentFormula.subRight.eval(structure, variables));\n            }\n        }\n    }\n\n    getEvaluatedPredicateFormula(currentFormula, structure, variables){\n        const res = currentFormula.terms\n            .map(term => term.eval(structure, variables))\n            .join(', ');\n        if (currentFormula.terms.length > 1) {\n            return `(${res})`;\n        }\n        return res;\n    }\n\n    getCommitmentText(commitment){\n        return commitment ? COMMITMENT_TRUE : COMMITMENT_FALSE;\n    }\n\n    getRandom(size){\n        return Math.floor(Math.random() * size);\n    }\n}","import {HenkinHintikkaGame} from '../../expressions_view/HenkinHintikkaGame'\nimport {connect} from \"react-redux\";\nimport {\n    continueGame,\n    endGame,\n    getVariables,\n    goBack,\n    setGameCommitment,\n    setGameDomainChoice,\n    setGameNextFormula\n} from \"../actions\";\nimport {getStructureObject} from \"../selectors/structureObject\";\n\nconst mapStateToProps = (state,props) => ({\n    structureObject: getStructureObject(state)\n});\n\nconst mapDispatchToProps = {\n    setGameCommitment: setGameCommitment,\n    setGameDomainChoice: setGameDomainChoice,\n    continueGame: continueGame,\n    endGame: endGame,\n    setGameNextFormula: setGameNextFormula,\n    goBack: goBack,\n    getVariables: getVariables\n};\n\nconst HenkinHintikkaGameContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HenkinHintikkaGame);\n\nexport default HenkinHintikkaGameContainer;","import React, { useState } from 'react';\nimport {\n    Button, Col,\n    Form,\n    InputGroup,\n    Table,\n} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport {EXPRESSION_LABEL, FORMULA, TERM, UNSELECTED} from \"../constants\";\nimport FontAwesome from 'react-fontawesome';\nimport LockButton from '../buttons/LockButton';\nimport Help from \"../buttons/Help\";\nimport AddButton from \"../buttons/AddButton\";\nimport HenkinHintikkaGameButton from \"../buttons/HenkinHintikkaGameButton\";\nimport HenkinHintikkaGameContainer from \"../redux/containers/HenkinHintikkaGameContainer\";\n\nconst helpFormula = (\n  <>\n      <p>The truth of closed first-order formulas in the structure 𝓜\n        and the satisfaction of open first-order formulas\n        by the valuation of variables 𝑒 in 𝓜\n        can be examined in this section.</p>\n      <p>The desired/expected truth or satisfaction can be selected\n        from the ⊨/⊭ menu below a formula.\n        Structure Explorer checks the correctness of your selection.</p>\n      <p className='mb-0'>Syntactic requirements:</p>\n      <ul className='mb-0'>\n        <li>All non-logical symbols used in formulas\n          must come from the language 𝓛\n          and must be used according to their type and arity.\n          All other alphanumerical symbols are treated as variables.</li>\n        <li>Formulas must be properly parenthesized.</li>\n        <li>The following notation of logical symbols is accepted:\n          <Table size='sm' striped className=\"my-2 border-bottom\">\n            <thead>\n              <tr><th>Symbol</th><th>Notation</th></tr>\n            </thead>\n            <tbody>\n              <tr><td>Equality</td><td> =, ≐</td></tr>\n              <tr><td>Non-equality</td><td> !=, {'<>'}, /=, ≠</td></tr>\n              <tr><td>Negation</td><td> \\neg, \\lnot, -, !, ~, ¬</td></tr>\n              <tr><td>Conjunction</td><td> \\wedge, \\land, &&, &, /\\, ∧</td></tr>\n              <tr><td>Disjunction</td><td> \\vee, \\lor, ||, |, \\/, ∨</td></tr>\n              <tr><td>Implication</td><td> \\to, \\limpl, {'->'}, →</td></tr>\n              <tr><td>Equivalence</td><td> \\lequiv, \\leftrightarrow, {'<->'}, ↔︎</td></tr>\n              <tr><td>Existential quantifier</td><td> \\exists, \\e, \\E, ∃</td></tr>\n              <tr><td>General quantifier</td><td> \\forall, \\a, \\A, ∀</td></tr>\n            </tbody>\n          </Table>\n        </li>\n        <li>The priority of logical symbols:\n          <ol className=\"my-0\">\n            <li>≐, ≠ (highest priority)</li>\n            <li>¬, ∀, ∃</li>\n            <li>∧ (left-associative, i.e., A ∧ B ∧ C ≡ ((A ∧ B) ∧ C))</li>\n            <li>∨ (left-associative)</li>\n            <li>→ (right-associative, i.e., A → B → C ≡ (A → (B → C)))</li>\n            <li>↔︎ (non-associative, lowest priority)</li>\n          </ol>\n        </li>\n      </ul>\n  </>\n);\n\nconst helpTerm = (\n  <>\n    <p>Denotations of first-order terms in the structure 𝓜\n      for the valuation of variables 𝑒\n      can be examined in this section.</p>\n    <p>The desired/expected denotation can be selected\n      from the menu below the term.\n      Structure Explorer checks the correctness of your selection.</p>\n    <p className='mb-0'>Syntactic requirements:</p>\n    <ul className='mb-0'>\n      <li>All individual constants and function symbols used in the terms\n        must come from the language 𝓛\n        and must be used according to their type and arity.\n        All other alphanumerical symbols are treated as variables.</li>\n      <li>Terms must be properly parenthesized.</li>\n    </ul>\n  </>\n);\n\nconst getFormulaAnswers = () => (\n   <React.Fragment>\n     <option key={'unselected'} value={''}>⊨/⊭?</option>\n     <option key={'true'} value={'true'}>⊨</option>\n     <option key={'false'} value={'false'}>⊭</option>\n   </React.Fragment>\n);\n\nconst getTermAnswers = (domain) => (\n   <React.Fragment>\n     <option value={''}>Select a domain element…</option>\n     {domain.map(item =>\n        <option key={item} value={item}>{item}</option>\n     )}\n   </React.Fragment>\n);\n\nfunction prepareExpressions(formulas, terms) {\n  let f = {\n    items: formulas,\n    expressionType: FORMULA,\n    answers: () => getFormulaAnswers(),\n    help: helpFormula,\n    panelTitle: 'Truth of formulas in 𝓜'\n  };\n  let t = {\n    items: terms,\n    expressionType: TERM,\n    answers: (domain) => getTermAnswers(domain),\n    help: helpTerm,\n    panelTitle: 'Denotation of terms in 𝓜'\n  };\n  return [f, t];\n}\n\nconst Expressions = (props) => {\n  const [showHelp, setShowHelp] = useState({ [FORMULA]: false, [TERM]: false });\n  const onToggle = (exprType) => (newValue) =>\n    setShowHelp((sh) => ({...sh, [exprType]: newValue}));\n  return (\n    <React.Fragment>\n      {prepareExpressions(props.formulas, props.terms).map(expression =>\n        <Card className='mb-3' key={expression.expressionType}>\n          <Card.Header as='h5' className='d-flex justify-content-between'>\n            <span>{expression.panelTitle}</span>\n            <Help subject={expression.expressionType.toLowerCase()}\n              show={showHelp[expression.expressionType]}\n              onToggle={onToggle([expression.expressionType])}>\n                {expression.help}\n            </Help>\n          </Card.Header>\n          <Card.Body>\n            {expression.items.map((item, index) =>\n              <Form key={\"expression-form-\" + index}>\n                <Form.Group>\n                  <InputGroup size='sm' className='mb-1 has-validation'>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text id={expression.expressionType.toLowerCase() + '-' + index}>{EXPRESSION_LABEL[expression.expressionType]}<sub>{index + 1}</sub></InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type='text' value={item.value}\n                      onChange={(e) => props.onInputChange(e.target.value, index, expression.expressionType)}\n                      id={expression.expressionType.toLowerCase() + '-' + index}\n                      disabled={item.inputLocked}\n                      isInvalid={item.errorMessage.length > 0}\n                      onFocus={() => {\n                        props.diagramModel.clearSelection();\n                      }}\n                    />\n                    <InputGroup.Append>\n                      <Button variant={\"outline-danger\"} onClick={() => props.removeExpression(expression.expressionType, index)}>\n                        <FontAwesome name='fas fa-trash' />\n                      </Button>\n                      {props.teacherMode ? (\n                        <LockButton\n                          lockFn={() => props.lockExpressionValue(expression.expressionType, index)}\n                          locked={item.inputLocked} />\n                      ) : null}\n                    </InputGroup.Append>\n                    <Form.Control.Feedback type={\"invalid\"}>{item.errorMessage}</Form.Control.Feedback>\n                  </InputGroup>\n                  <Form.Row className='align-items-center'>\n                    <Col xs=\"auto\" className='mb-1'>\n                      <InputGroup size='sm'>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text as='label' for={expression.expressionType.toLowerCase() + '-answer-' + index}>\n                            { expression.expressionType === TERM\n                                ? <>{EXPRESSION_LABEL[expression.expressionType]}<sub>{index + 1}</sub><sup>𝓜</sup>[𝑒] =</>\n                                : '𝓜' }\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control as=\"select\" value={item.answerValue}\n                          onChange={(e) => props.setExpressionAnswer(expression.expressionType, e.target.value, index)}\n                          id={expression.expressionType.toLowerCase() + '-answer-' + index}\n                          disabled={item.answerLocked}\n                          className=\"custom-select\">\n                          {expression.answers(props.domain)}\n                        </Form.Control>\n\n                        {expression.expressionType === TERM\n                          ? null\n                          : (\n                            <InputGroup.Append>\n                              <InputGroup.Text id={expression.expressionType.toLowerCase() + '-answer-' + index}>𝝋<sub>{index + 1}</sub>[𝑒]</InputGroup.Text>\n                            </InputGroup.Append>\n                            )}\n                        {props.teacherMode ? (\n                          <InputGroup.Append>\n                            <LockButton\n                              lockFn={() => props.lockExpressionAnswer(expression.expressionType, index)}\n                              locked={item.answerLocked} />\n                          </InputGroup.Append>\n                        ) : null}\n                      </InputGroup>\n                    </Col>\n\n                    <Col className=\"pr-0 text-nowrap mb-1\">\n                      {item.answerValue !== '' ?\n                        (item.answerValue === item.expressionValue ?\n                          <strong className=\"text-success pr-0\"><FontAwesome\n                            name='check' /><span className='d-none d-sm-inline'>&nbsp;Correct</span></strong> :\n                          <strong className=\"text-danger\"><FontAwesome\n                            name='times' /><span className='d-none d-sm-inline'>&nbsp;Incorrect</span></strong>\n                        ) : null}\n                    </Col>\n\n                    <Col className=\"pr-0 mb-1\">\n                      {expression.expressionType === FORMULA ?\n                        <HenkinHintikkaGameButton\n                          onClick={() => props.initiateGame(index)}\n                          gameEnabled={item.gameEnabled}\n                          disabled={item.errorMessage.length > 0 ||\n                            item.value === ''}\n                        /> : null}\n                    </Col>\n                  </Form.Row>\n                  {(item.gameEnabled && item.errorMessage.length === 0)\n                    ? <HenkinHintikkaGameContainer index={index}\n                          formula={item}\n                          domain={props.domain} />\n                    : null}\n                </Form.Group>\n              </Form>\n            )}\n            <AddButton onClickAddFunction={props.addExpression} addType={expression.expressionType} />\n          </Card.Body>\n        </Card>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Expressions;","import {connect} from 'react-redux';\nimport Expressions from \"../../expressions_view/Expressions\";\nimport {\n  addExpression,\n  checkExpressionSyntax,\n  lockExpressionAnswer,\n  lockExpressionValue,\n  removeExpression,\n  setExpressionAnswer,\n  initiateGame\n} from \"../actions\";\nimport {getStructureObject} from \"../selectors/structureObject\";\n\nconst mapStateToProps = (state,props) => ({\n  formulas: state.expressions.formulas,\n  terms: state.expressions.terms,\n  domain: [...getStructureObject(state).domain],\n  teacherMode: state.common.teacherMode,\n  diagramModel:props.diagramModel\n});\n\nconst mapDispatchToProps = {\n  onInputChange: checkExpressionSyntax,\n  addExpression: addExpression,\n  removeExpression: removeExpression,\n  setExpressionAnswer: setExpressionAnswer,\n  lockExpressionValue: lockExpressionValue,\n  lockExpressionAnswer: lockExpressionAnswer,\n  initiateGame: initiateGame\n};\n\nconst ExpressionContainer = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Expressions);\n\nexport default ExpressionContainer;","import {Col, Row} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport LanguageContainer from \"../redux/containers/LanguageContainer\";\nimport VariablesValueContainer from \"../redux/containers/VariablesValueContainer\";\nimport StructureContainer from \"../redux/containers/StructureContainer\";\nimport ExpressionsContainer from \"../redux/containers/ExpressionsContainer\";\nimport SplitPane from 'react-split-pane';\n\nconst Pane = ({minSize, ...props}) =>\n    <div {...props}/>;\n\nexport class MathSystem extends React.Component {\n\n    state = { width: window.innerWidth };\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.syncMathState();\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth});\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    isSplitVertically() {\n        return this.state.width > 991.9;\n    }\n\n    paneMinSize() {\n        return this.isSplitVertically() ? '240px' : '80px';\n    }\n\n    render(){\n        return(\n            <SplitPane\n                split={this.isSplitVertically() ? 'vertical' : 'horizontal'}\n                allowResize={true}\n                className=\"split-pane\"\n                resizerStyle={{background: 'white'}}\n                paneStyle={{background: 'white'}}>\n                <Pane minSize={this.paneMinSize()}\n                    className=\"overflow-auto vh-pane-left\">\n                    <LanguageContainer/>\n                    <StructureContainer/>\n                    <VariablesValueContainer/>\n                </Pane>\n                <Pane minSize={this.paneMinSize()}\n                    className=\"overflow-auto vh-pane-right\">\n                    <ExpressionsContainer diagramModel={this.props.diagramModel}/>\n                </Pane>\n            </SplitPane>\n        )\n    }\n}\n","import {connect} from \"react-redux\";\nimport {MathSystem} from \"../../math_view/MathSystem\";\nimport {syncMathState} from \"../actions\";\n\nconst mapStateToProps = () => ({\n});\n\nconst mapDispatchOnProps = {\n    syncMathState:syncMathState\n};\n\nconst MathSystemContainer = connect(\n    mapStateToProps,\n    mapDispatchOnProps\n)(MathSystem);\n\nexport default MathSystemContainer;","// from https://github.com/notablemind/downloadbutton/issues/4\n\nimport React from 'react';\nimport FontAwesome from \"react-fontawesome\";\n\nfunction saveAs(uri, filename) {\n  var link = document.createElement('a');\n  if (typeof link.download === 'string') {\n    document.body.appendChild(link); //Firefox requires the link to be in the body\n    link.download = filename;\n    link.href = uri;\n    link.click();\n    document.body.removeChild(link); //remove the link when done\n  } else {\n    window.location.replace(uri);\n  }\n}\n\nclass DownloadButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      fileData: null,\n    };\n    this._onGenerate = this._onGenerate.bind(this);\n    this._donePreparing = this._donePreparing.bind(this);\n    this._onDownload = this._onDownload.bind(this);\n  }\n\n  _onGenerate() {\n    this.setState({loading: true, fileData: null});\n    this.props.genFile(this._donePreparing);\n  }\n\n  _donePreparing(fileData) {\n    this.setState({\n      loading: false,\n      fileData: fileData,\n    });\n  }\n\n  _onDownload() {\n    var fileData = (this.props.fileData || (this.props.async ? this.state.fileData : this.props.genFile()));\n    if (!fileData) {\n      return false;\n    }\n    var blob = new Blob([fileData.contents], {type: fileData.mime});\n    var url = URL.createObjectURL(blob);\n    saveAs(url, fileData.filename);\n    this.props.onDownloaded && this.props.onDownloaded();\n  }\n\n  render() {\n    // need one or the other\n    if (!this.props.genFile && !this.props.fileData) {\n      return (<em>Invalid configuration for download button</em>);\n    }\n    var style = this.props.style;\n    var cls = 'DownloadButton ' + (this.props.className || '');\n    if (this.props.fileData || !this.props.async || this.state.fileData) {\n      var title = this.props.downloadTitle;\n      if ('function' === typeof title) {\n        title = title(this.props.fileData || this.state.fileData)\n      }\n      return (\n         <button style={style}  title={this.props.title} onClick={this._onDownload} className={cls}>\n           <FontAwesome name='fas fa-save'/>\n           &nbsp;Export\n         </button>\n      );\n    }\n    if (this.state.loading) {\n      return (<button style={style} className={cls + ' DownloadButton-loading'}>\n        {this.props.loadingTitle}\n      </button>);\n    }\n    return (<button style={style} onClick={this._onGenerate} className={cls + ' DownloadButton-generate'}>\n      {this.props.generateTitle}\n    </button>);\n  }\n}\n\n// DownloadButton.propTypes = {\n//     fileData: React.PropTypes.object,\n//     genFile: React.PropTypes.func,\n//     async: React.PropTypes.bool,\n//     generateTitle: React.PropTypes.string,\n//     downloadTitle: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.func]),\n//     loadingTitle: React.PropTypes.string,\n//     onDownloaded: React.PropTypes.func,\n// }\n\nDownloadButton.defaultProps = {\n  async: false,\n  downloadTitle: 'Download',\n  generateTitle: 'Generate file',\n  loadingTitle: 'Loading...',\n};\n\nexport default DownloadButton;","import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport DownloadButton from \"../../buttons/DownloadButton\";\nimport {DEFAULT_FILE_NAME} from \"../../constants\";\nimport FontAwesome from \"react-fontawesome\";\n\nconst ModalComponent = ({modalShowState,setModalShowState,setExerciseNameState,exportState}) => (\n    <Modal dialogClassName={\"no-border-radius\"} show={modalShowState} onHide={() => setModalShowState(false)}>\n        <Modal.Header>\n            <Modal.Title>Export exercise</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div className='form-inline'>\n                <div className='form-group'>\n                    <label htmlFor=\"exercise-name\">Exercise name: </label>\n                    <input type=\"text\" className=\"form-control\" id=\"exercise-name\"\n                           placeholder={DEFAULT_FILE_NAME}\n                           onChange={(e) => setExerciseNameState(e.target.value)}/>\n                </div>\n            </div>\n        </Modal.Body>\n        <Modal.Footer>\n            <DownloadButton genFile={exportState} title={\"Save\"}\n                            className='btn btn-success'>\n            </DownloadButton>\n\n            <Button variant={\"secondary\"} title='Cancel' onClick={() => setModalShowState(false)}>\n                <FontAwesome name='fas fa-window-close'/>\n                &nbsp;Cancel\n            </Button>\n\n        </Modal.Footer>\n    </Modal>\n);\n\nexport default ModalComponent;","import React, {useState} from 'react';\nimport Help from \"./Help\";\n\nconst graphHelp = (\n    <>\n        <p>Vrcholy sa do grafu umiestňujú tahaním alebo klikaním na ikonu z panelu. Pri ťahaní je\n            možné\n            určiť presnú polohu vrcholu, pri kliknutí bude mať vrchol náhodnú pozíciu.\n            V grafe je možné umiestniť 4 typy vrcholov.\n            Prvý typ vrcholu predstavuje prvok domény.\n            Druhý predstavuje konštantu.\n            Tretí predstavuje ternárny (3) vzťah.\n            Štvrtý predstavuje quaternárny (4) vzťah.</p>\n\n        <p>\n            Graf sa ovláda dvomi režimami. Pohybovací režim (<code>P</code>) dovoľuje presúvať alebo\n            mazať jednotlivé vrcholy. Pre ostatné akcie ako sú pridávanie predikátov a funkcií,\n            zmena\n            mien vrcholov alebo na vytváranie hrán slúži Editovací režim (<code>E</code>).\n            Medzi týmito režimami sa dá meniť stlačením príslušných tlačidiel alebo stlačením\n            kláves <code>P</code> a <code>E</code>. Okrem toho je možné využiť klávesu<code>;</code>,ktorou\n            je možné prepínať medzi jednotlivými režimami. Nadídením myšou nad prvky grafu sa vám zobrazí\n            nápoveda k ním (resp. hláška prečo nejde daná akcia vykonať).</p>\n\n        <p>\n            Dvojklikom na názov vrcholu sa prepne názov na input okno. Do tohto okna je možné zadať\n            nový názov.\n            Nový názov musí splňať podmienky, teda nesmie obsahovať zakázané znaky. V prípade\n            použitia zakázaných vzťahov sa input okno rozsvieti na červeno.\n            Medzery v input okne sú ignorované a berie sa slovo beznich. Názov sa akceptuje vybratím\n            iného prvky grafu alebo kliknutím do plátna. Okrem toho je možné meno akceptovať aj\n            tlačidlom <code>ENTER</code>.\n            V prípade ak používateľ chce zrušiť premenovanie a vrátiť pôvodné meno tak na to slúži\n            tlačidlo <code>ESC</code>. To isté sa stane aj ked sa používateľ pokúsi uložiť zlé meno\n            - vráti sa pôvodné meno.\n        </p>\n\n        <p>\n            Konštanta smie mať maximálne jeden uzol. Ak používateľ sa pokúsi pripojiť novým uzlom\n            iný vrchol predstavujúci prvok domény tak sa pôvodný uzol zmaže. Uzol konštanty je možné\n            pripojiť iba do vrcholu, ktorý predstavuje prvok domény.\n        </p>\n        <p>\n            Miesto, kde sa nachádza názov vrcholu slúži na vytváranie a tahanie uzlov.\n            Binárne vzťahy medzi dvomi vrcholmi sa vytvárajú ťahaním uzlu z jedného vrcholu do\n            druhého.\n            Binárný vzťah do seba samého je možné vytvoriť ťahaním uzlu z názvu vrcholu do tlačidla\n            na\n            otváranie/zatváranie rozbaľovacej ponuky.\n        </p>\n\n        <p>Graf nedovoluje pridať funkciu do vrcholu ak by mal nastať stav, že funkcia by bola\n            viackrát definovaná pre rovnaké parametre. V takom prípade buď nejde vôbec danú funkciu\n            pridať a tlačidlo na pridanie je vypnuté alebo ak ide o binárny vzťah tak v ňom môže\n            nastať\n            stav, že zaradenej funkcií v zozname nejde zmeniť smer\n            (resp. je možné vyberať iba z obmedzeného počtu smerov). Štandardne sa v binárnom vzťahu\n            pri\n            pridaní predikátu alebo funkcie pridá tento prvok v oboch smeroch. Ak v rámci funkcie\n            nie je\n            možné pridať obidva smery, tak sa pridá ten, ktorý je dostupný. Pre ternárne a väčšie\n            vrcholy platí, že nejde vytvoriť dva takéto vrcholy, ktoré by mali rovnakú kombináciu\n            parametrov. V takom prípade ak sa používateľ pokúsi spojiť posledný uzol, tak tento uzol\n            bude zmazaný.\n            Následne pokiaľ máme ternárny a väčší vrchol (vrchol predstavujúci väčší vzťah) a sú v\n            ňom zadefinované nejaké funkcie, ale nie sú spojené všetky miesta, kde smerujú uzly, tak\n            v takom prípade ak by mal pri spojení všetkých uzľov vzniknúť problém, že funkcie je\n            definovaná viackrát pre dané\n            parametre, tak sa funkcia vymaže zo zoznamu tohto vrcholu.\n        </p>\n    </>\n);\n\nconst HelpGraphButton = ({setCollapseHelpGraphButton,collapseHelpGraphButton}) => {\n    const [showHelp, setShowHelp] = useState(false);\n    return (\n        <Help subject='language'\n            label={'Graph help'}\n            children={graphHelp}\n            onToggle={setShowHelp}\n            show={showHelp}\n            size='md' />\n    )\n};\n\nexport default HelpGraphButton;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {Button, ButtonGroup, ButtonToolbar} from 'react-bootstrap';\nimport ModalComponent from '../math_view/components_parts/ModalComponent';\nimport HelpGraphButton from \"./HelpGraphButton\";\n\nconst ButtonToolbarComponent = ({clearGraphSelection,exportState,setExerciseNameState,modalShowState,diagramToggledState,teacherModeState,setDiagramToggledState, setModelShowState, importState, setTeacherModeState}) => (\n    <ButtonToolbar>\n        <ButtonGroup className='mr-2'>\n        <Button variant='outline-primary' title='Switch to set view' className={diagramToggledState?'':' active'} onClick={() => {\n            setDiagramToggledState(false);\n        }}>\n            <strong>&#123;&nbsp;&#125;</strong>\n            <span className='d-none d-sm-inline'>&nbsp;Sets</span>\n        </Button>\n\n        <Button variant='outline-primary' title='Switch to graph view' className={diagramToggledState?' active':''} onClick={() => setDiagramToggledState(true)}>\n            <FontAwesome name='fas fa-project-diagram'/>\n            <span className='d-none d-sm-inline'>&nbsp;Graph</span>\n        </Button>\n        </ButtonGroup>\n\n        <ButtonGroup className='mr-2'>\n        <Button size=\"md\" variant='secondary' title='Export this exercise' onClick={() => {setModelShowState(true);clearGraphSelection();}}>\n            <FontAwesome name='fas fa-file-export'/>\n            <span className='d-none d-sm-inline'>&nbsp;Export</span>\n        </Button>\n\n        <Button variant='secondary' title='Import an exercise'\n                onClick={() => document.getElementById('uploadInput').click()}>\n            <FontAwesome name='fas fa-file-import'/>\n            <input id='uploadInput' type='file' name='jsonFile'\n                   onChange={(e) => {\n                       importState(e);\n                   }}\n                   hidden={true}\n                   style={{display: 'none'}}/>\n            <span className='d-none d-sm-inline'>&nbsp;Import</span>\n        </Button>\n        </ButtonGroup>\n\n        {diagramToggledState ?\n            <ButtonGroup className='mr-2'>\n                <HelpGraphButton/>\n            </ButtonGroup>: null\n        }\n\n        <ModalComponent exportState={exportState} modalShowState={modalShowState} setExerciseNameState={setExerciseNameState} setModalShowState={setModelShowState}/>\n\n        {/*<ButtonGroup>\n        <Button variant={'outline-success'} size='lg' title='Teacher mode' className={(teacherModeState?'active':'')} onClick={() => setTeacherModeState()}>\n            <FontAwesome name='fas fa-user-edit'/>\n            <span className='d-none d-sm-inline'>&nbsp;Teacher mode</span>\n        </Button>\n        </ButtonGroup>*/}\n    </ButtonToolbar>\n);\n\nexport default ButtonToolbarComponent;","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport const Tray = styled.div`\nbackground: white !important;\n`;\n\nexport class TrayWidget extends React.Component {\n\trender() {\n\t\treturn <Tray>{this.props.children}</Tray>;\n\t}\n}\n","import * as React from 'react';\nimport styled from \"@emotion/styled\";\n\nexport interface TrayItemWidgetProps {\n\tmodel: any;\n\tcolor?: string | undefined;\n\tname: string;\n\telement:any;\n\tclickFunction:any;\n\treduxProps:any;\n\ttitle:string;\n}\n\nexport const BasicTray = styled.div`\n\t\tcursor: pointer;\n\t\twidth:65%;\n\t\tmargin: auto;\n\t\tmargin-top:0.8em;\n\t\tmargin-bottom:0.8em;\n\t`;\n\nexport class ItemWidgetIcon extends React.Component<TrayItemWidgetProps> {\n\tconstructor(props:any){\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<BasicTray\n\t\t\t\ttitle={this.props.title}\n\t\t\t\tcolor={this.props.color}\n\t\t\t\tdraggable={true}\n\t\t\t\tonDragStart={event => {\n\t\t\t\t\tevent.dataTransfer.setData('storm-graph_view-node', JSON.stringify(this.props.model));\n\t\t\t\t}}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tthis.props.clickFunction(this.props.element,JSON.stringify(this.props.model),this.props.reduxProps);\n\t\t\t\t}}\n\t\t\t\tclassName=\"tray-item\">\n\t\t\t\t{this.props.children}\n\t\t\t</BasicTray>\n\t\t);\n\t}\n}\n\n\n\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface MainCanvasWidgetProps {\n\tcolor?: string;\n\tbackground?: string;\n}\n\n\texport const Container = styled.div<{ color: string; background: string }>`\n\t\theight: 100%;\n\t\tbackground-color:white !important;\n\t\tbackground-size: 50px 50px;\n\t\tdisplay: flex;\n\t\t/*border: 1px solid black;*/\n\n\t\t> * {\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t}\n\t\tbackground-image: linear-gradient(\n\t\t\t\t0deg,\n\t\t\t\ttransparent 24%,\n\t\t\t\t${p => p.color} 25%,\n\t\t\t\t${p => p.color} 26%,\n\t\t\t\ttransparent 27%,\n\t\t\t\ttransparent 74%,\n\t\t\t\t${p => p.color} 75%,\n\t\t\t\t${p => p.color} 76%,\n\t\t\t\ttransparent 77%,\n\t\t\t\ttransparent\n\t\t\t),\n\t\t\tlinear-gradient(\n\t\t\t\t90deg,\n\t\t\t\ttransparent 24%,\n\t\t\t\t${p => p.color} 25%,\n\t\t\t\t${p => p.color} 26%,\n\t\t\t\ttransparent 27%,\n\t\t\t\ttransparent 74%,\n\t\t\t\t${p => p.color} 75%,\n\t\t\t\t${p => p.color} 76%,\n\t\t\t\ttransparent 77%,\n\t\t\t\ttransparent\n\t\t\t);\n\t`;\n\nexport class MainCanvasWidget extends React.Component<MainCanvasWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<Container\n\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\n\t\t\t\tcolor={this.props.color || 'rgba(0,0,0, 0.15)'}>\n\t\t\t\t{this.props.children}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n","import FontAwesome from \"react-fontawesome\";\nimport React from \"react\";\n\nexport const ADDPORT:any = <FontAwesome name='fas fa-plus'/>;\nexport const ADDPORTSELECTED:any =  <FontAwesome name='fas fa-times'/>;\nexport const INPORT:string = \"IN\";\nexport const OUTPORT:string = \"OUT\";\nexport const CONSTPORT:string = \"*\";\nexport const UNBINARY:string = \"unbinary\";\nexport const CONSTANT:string = \"constant\";\nexport const MAINPORT:string = \"MAINPORT\";\nexport const ADDPRED:string = \"P\";\nexport const ADDFUNC:string = \"F\";\nexport const BOTH:string = \"B\";\nexport const FROM:string = \"F\";\nexport const TO:string = \"T\";\nexport const PREDICATE:string =\"P\";\nexport const FUNCTION:string = \"F\";\nexport const BASIC_CURVYNESS:number = 85;\nexport const UNBINARYNODE:string = \"N\";\nexport const CONSTANTNODE:string = \"C\";\nexport const TERNARYNODE:string = \"T\";\nexport const QUATERNARYNODE:string = \"Q\";\nexport const TERNARY = \"T\";\nexport const QUATERNARY = \"Q\";","import {FUNCTION, PREDICATE, UNBINARY} from \"./ConstantNames\";\nimport {DiagramEngine } from \"@projectstorm/react-diagrams\";\nimport {getLanguageObject} from \"../../redux/selectors/languageObject\";\nimport {getStructureObject} from \"../../redux/selectors/structureObject\";\nimport {parseConstants, parseDomain} from '@fmfi-uk-1-ain-412/js-fol-parser';\n\nexport function canUseNameForGivenArityAndType(elementName:string,elementArity:string,reduxProps:any,type:string):boolean{\n    let languageObject = getLanguageObject(reduxProps[\"store\"].getState());\n\n    if(languageObject.constants && languageObject.constants.has(elementName)){\n        return false;\n    }\n\n    let givenSet = type === PREDICATE ? languageObject.functions : languageObject.predicates;\n    if(givenSet && givenSet.has(elementName)){\n        return false;\n    }\n\n    let finalSet = type === PREDICATE ? languageObject.predicates : languageObject.functions;\n\n    if(finalSet){\n        for(let [langaugeElementName,languageElementArity] of finalSet.entries()){\n            if(langaugeElementName === elementName){\n                return languageElementArity.toString() === elementArity;\n            }\n        }\n    }\n    return true;\n}\n\nexport function functionIsAlreadyDefinedForGivenFunction(functionParameters:[string],functionValue:string,functionName:string,reduxProps:any):boolean{\n    let functionInterpretation = getStructureObject(reduxProps[\"store\"].getState()).iFunction;\n\n    if(functionInterpretation.has(functionName)){\n        for(let [funcParameters,funcValue] of Object.entries(functionInterpretation.get(functionName))){\n            if(funcParameters === JSON.stringify(functionParameters)){\n                return funcValue!==functionValue;\n            }\n        }\n    }\n    return false;\n}\n\nexport function selectOnlyCurrentGraphElement(currentModel:any,engine:DiagramEngine){\n    engine.getModel().clearSelection();\n    currentModel.setSelected(true);\n    engine.repaintCanvas();\n}\n\nexport function clearAllWithoutCurrentModel(currentModel:any,engine:DiagramEngine){\n    let selectedElements = engine.getModel().getSelectedEntities();\n    for(let graphObject of selectedElements){\n        if(graphObject!==currentModel){\n            graphObject.setSelected(false);\n        }\n    }\n    engine.repaintCanvas();\n}\n\nfunction setNodeBadNameIfStateContainsNodeWithSameName(state:Map<string,any>,newName:string,setNodeBadName:any){\n    if(state.has(newName)){\n        setNodeBadName(true);\n        return true;\n    }\n    else{\n        setNodeBadName(false);\n        return false;\n    }\n}\n\nfunction parseText(name:string, setNodeBadName:any, parse:any){\n    try {\n        if (name.trim() == '' || name.includes(',')) {\n            throw Error('no or multiple identifiers')\n        }\n        parse(name);\n        setNodeBadName(false);\n        return false;\n    }\n    catch (e) {\n        setNodeBadName(true);\n        return true;\n    }\n}\n\nexport function setPredFuncBadNameIfRegexViolated(name:string, setBadName:any){\n   return parseText(name, setBadName, parseConstants);\n}\n\nfunction setDomainBadNameIfRegexViolated(newName:string, setNodeBadName:any){\n    parseText(newName, setNodeBadName, parseDomain)\n}\n\nfunction setConstantsBadNameIfRegexViolated(newName:string, setNodeBadName:any){\n    parseText(newName, setNodeBadName, parseConstants);\n}\n\nexport function canUseNameForNode(oldName:string,newName:string,setNodeBadName:any,reduxProps:any,nodeType:string){\n    let diagramState = reduxProps[\"store\"].getState().diagramState;\n\n    if(oldName === newName){\n        setNodeBadName(false);\n        return;\n    }\n\n    if(newName.length === 0 ){\n        setNodeBadName(true);\n        return;\n    }\n\n    if(setNodeBadNameIfStateContainsNodeWithSameName(nodeType === UNBINARY?diagramState.domainNodes:diagramState.constantNodes,newName,setNodeBadName)){\n        return;\n    }\n    nodeType === UNBINARY?setDomainBadNameIfRegexViolated(newName,setNodeBadName):setConstantsBadNameIfRegexViolated(newName, setNodeBadName);\n}\n\nexport function getAvailableLanguageElementForGivenArity(arity:string,reduxProps:any,modelSet:Set<string>,type:string):Set<string> {\n    let languageElementSet: Set<string> = new Set();\n    let languageObject = getLanguageObject(reduxProps[\"store\"].getState());\n    let languageElement = type === PREDICATE ? languageObject.predicates : languageObject.functions;\n\n    for(let [elementValue,elementArity] of languageElement.entries()){\n        if(elementArity.toString() === arity && !modelSet.has(elementValue)){\n            languageElementSet.add(elementValue);\n        }\n    }\n    return languageElementSet;\n}\n\n\nexport function getMaxLengthForGivenLanguageElementWithArity(arity:string,type:string,reduxProps:any):number{\n    let maxLength = 0;\n    let languageObject = getLanguageObject(reduxProps[\"store\"].getState());\n    let languageElement = type === PREDICATE ? languageObject.predicates : languageObject.functions;\n\n    for(let [elementValue,elementArity] of languageElement.entries()){\n        if(elementArity.toString() === arity && maxLength<elementValue.length){\n            maxLength = elementValue.length;\n        }\n    }\n    return maxLength;\n}\n\nexport function getWidestElement(isDropDownMenu:boolean,inputElementTestLength:number,model:any,width:number,predicateArity:string,functionArity:string) {\n    if(isDropDownMenu){\n        let predicateWidth = getMaxLengthForGivenLanguageElementWithArity(predicateArity,PREDICATE,model.getReduxProps());\n        let functionWidth = 0;\n\n        if(functionArity !== \"0\"){\n            functionWidth = getMaxLengthForGivenLanguageElementWithArity(functionArity,FUNCTION,model.getReduxProps());\n        }\n\n        if(width<predicateWidth){\n            width = predicateWidth;\n        }\n        if(width<functionWidth){\n            width = functionWidth;\n        }\n        if(inputElementTestLength>width){\n            width = inputElementTestLength;\n        }\n    }\n    return width;\n}\n","import { LabelModel} from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\nimport {BaseModelListener} from '@projectstorm/react-canvas-core';\nimport { LabelModelOptions, LabelModelGenerics } from '@projectstorm/react-diagrams';\nimport {BOTH, FROM, PREDICATE, TO} from \"../../nodes/ConstantNames\";\nimport {functionIsAlreadyDefinedForGivenFunction} from \"../../nodes/functions\";\n\nexport interface BinaryLabelModelOptions extends LabelModelOptions {\n\tlabel?: string;\n\tpredicates?: Set<string>;\n\treduxProps?: any;\n\tname?:string;\n}\n\nexport interface NodeModelListener extends BaseModelListener {\n\n}\n\nexport interface BinaryLabelModelGenerics extends LabelModelGenerics {\n\tLISTENER: NodeModelListener;\n\tOPTIONS: BinaryLabelModelOptions;\n}\n\nexport class BinaryLabelModel extends LabelModel<BinaryLabelModelGenerics> {\n\tpredicates: Map<string,string>;\n\tfunctions: Map<string,string>;\n\teditable: boolean;\n\tchangeCounter: number;\n\n\tconstructor(options: BinaryLabelModelOptions = {},reduxProps?:any,name?:string) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\toffsetY: 0,\n\t\t\ttype: 'binary',\n\t\t\treduxProps: reduxProps,\n\t\t\tname:name,\n\t\t});\n\n\t\tthis.predicates = new Map();\n\t\tthis.functions = new Map();\n\t\tthis.editable = true;\n\t\tthis.changeCounter = 0;\n\t\tthis.registerEvents();\n\t}\n\n\tregisterEvents() {\n\t\tlet label = this;\n\t\tthis.registerListener({\n\t\t\tentityRemoved(): void {\n\t\t\t\tlabel.removeLabelFromMathView();\n\t\t\t}\n\t\t})\n\t}\n\n\tgetSourceDomainNode(){\n\t\treturn this.getParent().getSourcePort().getNode();\n\t}\n\n\tgetTargetDomainNode(){\n\t\treturn this.getParent().getTargetPort().getNode();\n\t}\n\n\tgetNodeCombinationKey(){\n\t\t// @ts-ignore\n\t\treturn [this.getSourceDomainNode().getNodeName(),this.getTargetDomainNode().getNodeName()].join(\",\");\n\t}\n\n\tgetReversedNodeCombinationKey(){\n\t\t// @ts-ignore\n\t\treturn [this.getTargetDomainNode().getNodeName(),this.getSourceDomainNode().getNodeName()].join(\",\");\n\t}\n\n\tclearPredicates(){\n\t\tthis.getPredicates().clear();\n\t}\n\n\tclearFunctions(){\n\t\tthis.getFunctions().clear();\n\t}\n\n\tremoveLabelFromMathView(){\n\t\tfor(let [predicateName,direction] of this.predicates.entries()){\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"removeBinaryPredicate\"](predicateName, this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),direction);\n\t\t}\n\t\tfor(let [functionName,direction] of this.functions.entries()){\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"removeUnaryFunction\"](functionName, this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),direction);\n\t\t}\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.options.label = label;\n\t}\n\n\tgetName():string{\n\t\treturn this.options.name;\n\t}\n\n\tgetPredicates():Map<string,string>{\n\t\treturn this.predicates;\n\t}\n\n\tgetFunctions():Map<string,string>{\n\t\treturn this.functions;\n\t}\n\n\tsetLockedParent(bool:boolean){\n\t\tthis.getParent().setLocked(bool);\n\t}\n\n\tgetReduxProps(){\n\t\treturn this.getOptions().reduxProps;\n\t}\n\n\taddPredicate(name:string){\n\t\tname = name.replace(/\\s/g, \"\");\n\t\tif (!this.predicates.has(name)) {\n\t\t\tthis.addBinaryPredicateToSet(name);\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"addBinaryPredicate\"](name, this.getParent().getSourcePort().getNode().getNodeName(), this.getParent().getTargetPort().getNode().getNodeName(), this.predicates.get(name));\n\t\t}\n\t}\n\n\taddFunction(name:string){\n\t\tname = name.replace(/\\s/g, \"\");\n\t\tif (!this.functions.has(name)) {\n\t\t\tthis.addUnaryFunctionToSet(name);\n\t\t\tlet alreadyDefinedInFromDirection = functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(FROM),this.getFunctionValue(FROM),name+\"/1\",this.getReduxProps());\n\t\t\tlet alreadyDefinedInToDirection = functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(TO),this.getFunctionValue(TO),name+\"/1\",this.getReduxProps());\n\n\t\t\tif(alreadyDefinedInFromDirection){\n\t\t\t\tthis.setLanguageElementDirection(name,TO,this.functions);\n\t\t\t}\n\t\t\telse if(alreadyDefinedInToDirection){\n\t\t\t\tthis.setLanguageElementDirection(name,FROM,this.functions);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"addUnaryFunction\"](name,this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),this.functions.get(name));\n\t\t}\n\t}\n\n\taddBinaryPredicateToSet(name: string){\n\t\tthis.predicates.set(name,FROM);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\taddUnaryFunctionToSet(name: string){\n\t\tthis.functions.set(name,FROM);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\taddUnaryFunctionToSetWithDirection(name: string,direction: string){\n\t\tthis.functions.set(name,direction);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\taddBinaryPredicateToSetWithDirection(name: string,direction: string){\n\t\tthis.predicates.set(name,direction);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\tincreaseChangeCounter(){\n\t\tthis.changeCounter+=1;\n\t}\n\n\tisEditable(){\n\t\treturn this.editable;\n\t}\n\n\tremoveBinaryPredicateFromSet(name: string){\n\t\tthis.predicates.delete(name);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\tremoveUnaryFunctionFromSet(name: string){\n\t\tthis.functions.delete(name);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\tremoveFunction(name:string){\n\t\tif(this.functions.has(name)){\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"removeUnaryFunction\"](name,this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),this.functions.get(name));\n\t\t\tthis.removeUnaryFunctionFromSet(name);\n\t\t}\n\t}\n\n\tremovePredicate(name:string){\n\t\tif(this.predicates.has(name)){\n\t\t\t// @ts-ignore\n\t\t\tthis.getReduxProps()[\"removeBinaryPredicate\"](name,this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),this.predicates.get(name));\n\t\t\tthis.removeBinaryPredicateFromSet(name);\n\t\t}\n\t}\n\n\tchangeDirection(name:string,currentDirection:string,givenSet:Map<string,string>){\n\t\tif(currentDirection === BOTH){\n\t\t\tgivenSet.set(name,FROM);\n\t\t}\n\t\telse if(currentDirection === FROM){\n\t\t\tgivenSet.set(name,TO);\n\t\t}\n\t\telse{\n\t\t\tgivenSet.set(name,BOTH);\n\t\t}\n\t}\n\n\tsetLanguageElementDirection(name:string,direction:string,givenSet:Map<string,string>){\n\t\tgivenSet.set(name,direction);\n\t}\n\n\tgetNodeParameters(direction:string):[string]{\n\t\tif(direction === FROM){\n\t\t\t// @ts-ignore\n\t\t\treturn [this.getSourceDomainNode().getNodeName()];\n\t\t}\n\t\telse if(direction === TO){\n\t\t\t// @ts-ignore\n\t\t\treturn [this.getTargetDomainNode().getNodeName()];\n\t\t}\n\t\telse{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetFunctionValue(direction:string):string{\n\t\tif(direction === FROM){\n\t\t\t// @ts-ignore\n\t\t\treturn this.getTargetDomainNode().getNodeName();\n\n\t\t}\n\t\telse if(direction === TO){\n\t\t\t// @ts-ignore\n\t\t\treturn this.getSourceDomainNode().getNodeName();\n\t\t}\n\t\telse{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t//going from b -> f -> t\n\t//b - both\n\t//f - from => means it goes from this node to another (so this node is first parameter)\n\t//t - to => means it goes to this node from another (so this node is second parameter)\n\tchangeDirectionOfBinaryRelation(name:string,currentDirection:string,type:string){\n\t\tlet givenSet = type === PREDICATE?this.getPredicates():this.getFunctions();\n\n\t\tif(type === PREDICATE){\n\t\t\tthis.changeDirection(name,currentDirection,givenSet);\n\t\t}\n\t\telse{\n\t\t\tlet currDirection:string = currentDirection;\n\t\t\twhile(true){\n\t\t\t\tthis.changeDirection(name,currDirection,givenSet);\n\t\t\t\tcurrDirection = givenSet.get(name);\n\t\t\t\tif(currDirection === currentDirection){\n\t\t\t\t\tthis.setLanguageElementDirection(name,currentDirection,givenSet);\n\t\t\t\t\t//hint ze nejde zmenit direction\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet alreadyDefinedForDirection;\n\t\t\t\tif(currDirection!==BOTH){\n\t\t\t\t\talreadyDefinedForDirection = functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(currDirection),this.getFunctionValue(currDirection),name+\"/1\",this.getReduxProps());\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\talreadyDefinedForDirection = functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(FROM),this.getFunctionValue(FROM),name+\"/1\",this.getReduxProps()) || functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(TO),this.getFunctionValue(TO),name+\"/1\",this.getReduxProps());\n\t\t\t\t}\n\t\t\t\tif(!alreadyDefinedForDirection){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.increaseChangeCounter();\n\t\t// @ts-ignore\n\t\tthis.getReduxProps()[\"changeDirectionOfBinaryRelation\"](name,this.getParent().getSourcePort().getNode().getNodeName(),this.getParent().getTargetPort().getNode().getNodeName(),givenSet.get(name),type);\n\t}\n\n\tchangeEditableState(value:boolean){\n\t\tthis.editable = value;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.label = event.data.label;\n\t\tthis.editable = event.data.editable;\n\t\tthis.changeCounter = event.data.changeCounter;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tlabel: this.options.label,\n\t\t\teditable: this.editable,\n\t\t\tchangeCounter: this.changeCounter\n\t\t};\n\t}\n}\n","import {BinaryLinkModel} from \"../links/binary/BinaryLinkModel\";\nimport {ADDPORT} from \"./ConstantNames\";\nimport {UnBinaryNodeModel} from \"./unbinary/UnBinaryNodeModel\";\nimport { PortModelAlignment, PortModel, LinkModel } from \"@projectstorm/react-diagrams\";\n\nexport class NaryRelationPortModel extends PortModel {\n    constructor(name:string =\"default\",alignment: PortModelAlignment = PortModelAlignment.LEFT) {\n        super({\n            type: 'nary',\n            name: name,\n            alignment: alignment\n        });\n    }\n\n    createLinkModel(): LinkModel {\n        if (this.getMaximumLinks() === 0) {\n            return null;\n        }\n        return new BinaryLinkModel();\n    }\n\n    canLinkToPort(port: PortModel): boolean {\n        return port.getNode() instanceof UnBinaryNodeModel && port.getName() !== ADDPORT;\n    }\n}","import {LinkModel, PortModelAlignment, PortModel} from '@projectstorm/react-diagrams';\nimport _ from \"lodash\";\nimport {ADDPORT} from \"../ConstantNames\";\nimport {BinaryLinkModel} from \"../../links/binary/BinaryLinkModel\";\nimport {NaryRelationPortModel} from \"../NaryRelationPortModel\";\n\nexport class ConstantPortModel extends PortModel {\n\tconstructor(name: string) {\n\t\tsuper({\n\t\t\ttype: 'constant',\n\t\t\tname: name,\n\t\t\talignment: PortModelAlignment.BOTTOM\n\t\t});\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tif (this.getMaximumLinks() === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.getParentCanvasModel().clearSelection();\n\t\treturn new BinaryLinkModel();\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif(this.getParent() === port.getParent()){\n\t\t\treturn false;\n\t\t}\n\n\t\tif(port.getParent().getOptions().type==='constant') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif(port instanceof NaryRelationPortModel){\n\t\t\treturn false;\n\t\t}\n\n\t\tif(port.getName() === ADDPORT){\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let link of _.values(this.getLinks())) {\n\t\t\tif(link.getSourcePort() === this && link.getTargetPort() === port){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n","import {NodeModel, NodeModelGenerics} from '@projectstorm/react-diagrams';\nimport {ConstantPortModel} from './ConstantPortModel';\nimport { BasePositionModelOptions } from '@projectstorm/react-canvas-core';\nimport _ from 'lodash';\nimport {CONSTPORT} from \"../ConstantNames\";\nimport {BinaryLinkModel} from \"../../links/binary/BinaryLinkModel\";\n\nexport interface ConstantNodeModelGenerics {\n\tPORT: ConstantPortModel;\n\tOPTIONS: ConstantNodeModelOptions;\n}\n\nexport interface ConstantNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n\treduxProps?:any;\n}\n\nexport class ConstantNodeModel extends NodeModel<NodeModelGenerics & ConstantNodeModelGenerics> {\n\tmainPort:ConstantPortModel;\n\teditable:boolean;\n\n\tconstructor(name: string, color: string,reduxProps:any);\n\tconstructor(options?: ConstantNodeModelOptions);\n\tconstructor(options: any = {}, color?: string, reduxProps?:any) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tpreviousName:options,\n\t\t\t\tcolor: color,\n\t\t\t\treduxProps:reduxProps\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'constant',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(92,192,125)',\n\t\t\t...options\n\t\t});\n\n\t\tthis.mainPort = this.setUpConstantPort();\n\t\tthis.editable = reduxProps[\"editable\"];\n\t\tthis.registerEvents();\n\t}\n\n\tsetUpConstantPort(){\n\t\tlet port: ConstantPortModel = new ConstantPortModel(CONSTPORT);\n\t\tthis.addPort(port);\n\t\treturn port;\n\t}\n\n\tremoveAllLinks(){\n\t\tfor (let link of _.values(this.getMainPort().getLinks())) {\n\t\t\tlink.remove();\n\t\t}\n\t}\n\n\tgetReduxProps(){\n\t\treturn this.options.reduxProps;\n\t}\n\n\tisEditable():boolean{\n\t\treturn this.editable;\n\t}\n\n\tchangeEditableState(value:boolean){\n\t\tthis.editable = value;\n\t}\n\n\tsetConstantValueInMathView(domainNodeName:string){\n\t\tthis.options.reduxProps[\"setConstantValueFromLink\"](this.getNodeName(),domainNodeName);\n\t}\n\n\tremoveNodeFromMathView(){\n\t\tthis.options.reduxProps[\"removeConstantNode\"](this.getNodeName());\n\t}\n\n\n\tregisterEvents(){\n\t\tlet node = this;\n\t\tthis.registerListener({\n\t\t\tentityRemoved(event: any): void {\n\t\t\t\tfor (let link of _.values(node.getMainPort().getLinks())) {\n\t\t\t\t\tif(link instanceof BinaryLinkModel){\n\t\t\t\t\t\tlink.setCallReduxFunc(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.removeNodeFromMathView();\n\t\t\t}\n\t\t})\n\t}\n\n\tgetMainPort(): ConstantPortModel {\n\t\treturn this.mainPort;\n\t}\n\n\tgetNodeName(){\n\t\treturn this.options.name;\n\t}\n\n\trenameNode(name:string){\n\t\tthis.options.name = name;\n\t}\n\n\tremovePort(port: ConstantPortModel): void {\n\t\tfor (let link of _.values(port.getLinks())) {\n\t\t\tlink.remove();\n\t\t}\n\t\t//clear the parent node reference\n\t\tif (this.ports[port.getName()]) {\n\t\t\tthis.ports[port.getName()].setParent(null);\n\t\t\tdelete this.ports[port.getName()];\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\teditable: this.editable\n\t\t};\n\t}\n\n\tdeserialize(event: any) {\n\t\tsuper.deserialize(event);\n\t\tthis.editable = event.data.editable;\n\t}\n}\n","import {BasePositionModelOptions} from \"@projectstorm/react-canvas-core\";\nimport {NodeModel, NodeModelGenerics, PortModelAlignment} from \"@projectstorm/react-diagrams\";\nimport {UnBinaryPortModel} from \"./unbinary/UnBinaryPortModel\";\nimport _ from \"lodash\";\nimport {NaryRelationPortModel} from \"./NaryRelationPortModel\";\nimport {UnBinaryNodeModel} from \"./unbinary/UnBinaryNodeModel\";\nimport {ADDPORT, FUNCTION, PREDICATE} from \"./ConstantNames\";\nimport {functionIsAlreadyDefinedForGivenFunction} from \"./functions\";\n\nexport interface BaseNodeModelGenerics {\n    PORT: NaryRelationPortModel;\n    OPTIONS: BaseNodeModelOptions;\n}\n\nexport interface BaseNodeModelOptions extends BasePositionModelOptions {\n    name?: string;\n    color?: string;\n    numberOfPorts: number;\n    reduxProps:any;\n}\n\nexport class BaseNodeModel extends NodeModel<NodeModelGenerics & BaseNodeModelGenerics> {\n    changeCounter: number;\n    editable:boolean;\n    predicates: Set<string>;\n    functions: Set<string>;\n    parameterPorts: Map<NaryRelationPortModel,UnBinaryNodeModel>;\n    parameterPortsArray: Array<NaryRelationPortModel>;\n    appendPort: NaryRelationPortModel;\n\n    constructor(options?: BaseNodeModelOptions);\n    constructor(options: any = {}) {\n        super({\n            ...options\n        });\n\n        this.changeCounter = 0;\n        this.predicates = new Set();\n        this.functions = new Set();\n        this.parameterPorts = new Map<NaryRelationPortModel,UnBinaryNodeModel>();\n        this.parameterPortsArray = new Array<NaryRelationPortModel>(this.getNumberOfPorts());\n        this.editable = this.getReduxProps()[\"editable\"];\n        this.registerEvents();\n        this.registerParameterPorts();\n        this.registerAppendPort();\n    }\n\n    registerParameterPorts(){\n        let directions = [PortModelAlignment.LEFT,PortModelAlignment.RIGHT,PortModelAlignment.TOP,PortModelAlignment.BOTTOM];\n        for(let i = 0;i<this.getNumberOfPorts();i++){\n            let port = this.addPort(new NaryRelationPortModel(\"port\"+i,directions[i]));\n            this.parameterPorts.set(port,null);\n            this.parameterPortsArray[i] = port;\n        }\n    }\n\n    getNodeNameCombination(){\n        let value:any = [];\n        for(let i = 0; i<this.parameterPortsArray.length;i++){\n            let portValue:UnBinaryNodeModel = this.parameterPorts.get(this.parameterPortsArray[i]);\n            if(!portValue){\n                return null;\n            }\n            value.push(portValue.getNodeName());\n        }\n        return value;\n    }\n\n    getNodeParameters(){\n        let value:any = [];\n        for(let i = 0; i<this.parameterPortsArray.length;i++){\n            let portValue:UnBinaryNodeModel = this.parameterPorts.get(this.parameterPortsArray[i]);\n            if(!portValue){\n                return null;\n            }\n            if(i!==this.parameterPortsArray.length-1){\n                value.push(portValue.getNodeName());\n            }\n        }\n        return value;\n    }\n\n    getFunctionValue():string{\n        if(this.getNodeNameCombination()){\n            return this.parameterPorts.get(this.parameterPortsArray[this.parameterPortsArray.length-1]).getNodeName();\n        }\n        return null;\n    }\n\n    getValueOfPort(port:NaryRelationPortModel){\n        if(this.parameterPorts.has(port)){\n            return this.parameterPorts.get(port);\n        }\n        return null;\n    }\n\n    getValueNameOfPort(port:NaryRelationPortModel){\n        if(this.parameterPorts.has(port)){\n            return this.parameterPorts.get(port).getNodeName();\n        }\n        return null;\n    }\n\n    removeValueFromPort(port:NaryRelationPortModel){\n        this.parameterPorts.set(port,null);\n    }\n\n    setValueToPort(port:NaryRelationPortModel,valueNode:UnBinaryNodeModel){\n        this.parameterPorts.set(port,valueNode);\n    }\n\n    increaseChangeCounter(){\n        this.changeCounter+=1;\n    }\n\n    getNumberOfPorts(){\n        return this.getOptions().numberOfPorts;\n    }\n\n    clearPredicates() {\n        this.predicates = new Set();\n        this.increaseChangeCounter();\n    }\n\n    clearFunctions() {\n        this.functions = new Set();\n        this.increaseChangeCounter();\n    }\n\n    getPredicates() {\n        return this.predicates;\n    }\n\n    getFunctions(){\n        return this.functions;\n    }\n\n    removePort(port: UnBinaryPortModel): void {\n        for (let link of _.values(port.getLinks())) {\n            link.remove();\n        }\n        //clear the parent node reference\n        if (this.ports[port.getName()]) {\n            this.ports[port.getName()].setParent(null);\n            delete this.ports[port.getName()];\n        }\n    }\n\n    serialize() {\n        return {\n            ...super.serialize(),\n            changeCounter: this.changeCounter,\n            editable: this.editable\n        };\n    }\n\n    getPortByIndex(index:number){\n        if(index<0 || index>= this.getNumberOfPorts()){\n            return null;\n        }\n        return this.parameterPortsArray[index];\n    }\n\n    deserialize(event: any) {\n        super.deserialize(event);\n        this.changeCounter = event.date.changeCounter;\n        this.editable = event.data.editable;\n    }\n\n    registerEvents() {\n        let node = this;\n        this.registerListener({\n            entityRemoved(): void {\n                node.removeNodeFromMathView();\n                node.removeNodeFromGraphView();\n            }\n        })\n    }\n\n    removeNodeFromGraphView(){\n        throw new Error(\"This method should be implemented in child\");\n    }\n\n    changeEditableState(value:boolean){\n        this.editable = value;\n    }\n\n    getNodeName() {\n        return this.getOptions().name;\n    }\n\n    getAppendPort(){\n        return this.appendPort;\n    }\n\n    renameNode(name: string) {\n        this.getOptions().name = name;\n    }\n\n    isEditable():boolean{\n        return this.editable;\n    }\n\n    addPredicateToSet(name: string){\n        this.predicates.add(name);\n        this.increaseChangeCounter();\n    }\n\n    addFunctionToSet(name: string){\n        this.functions.add(name);\n        this.increaseChangeCounter();\n    }\n\n    removePredicateFromSet(name: string){\n        this.predicates.delete(name);\n        this.increaseChangeCounter();\n    }\n\n    removeFunctionFromSet(name: string){\n        this.functions.delete(name);\n        this.increaseChangeCounter();\n    }\n\n    addPredicate(name:string){\n        name = name.replace(/\\s/g, \"\");\n        if (!this.predicates.has(name)) {\n            this.addPredicateToSet(name);\n            this.addElementToMathView(name,PREDICATE);\n        }\n    }\n\n    addFunction(name: string) {\n        name = name.replace(/\\s/g, \"\");\n        if (!this.functions.has(name)) {\n            this.addFunctionToSet(name);\n            this.addElementToMathView(name,FUNCTION);\n        }\n    }\n\n    removePredicate(name:string){\n        if(this.predicates.has(name)){\n            this.removeElementFromMathView(name,PREDICATE);\n        }\n        this.removePredicateFromSet(name);\n    }\n\n    removeFunction(name:string){\n        if(this.functions.has(name)){\n            this.removeElementFromMathView(name,FUNCTION);\n        }\n        this.removeFunctionFromSet(name);\n    }\n\n    removeNodeFromMathView(){\n        for(let predicate of this.getPredicates()){\n            this.removeElementFromMathView(predicate,PREDICATE);\n        }\n        for(let func of this.getFunctions()){\n            this.removeElementFromMathView(func,FUNCTION);\n        }\n    }\n\n    representNodeInMathView(){\n        for(let predicate of this.getPredicates()){\n            this.addElementToMathView(predicate,PREDICATE);\n        }\n        let functionsToDelete:Set<string> = new Set();\n        for(let func of this.getFunctions()){\n            if(!functionIsAlreadyDefinedForGivenFunction(this.getNodeParameters(),this.getFunctionValue(),func+\"/\"+(this.getNumberOfPorts()-1).toString(),this.getReduxProps())){\n                this.addElementToMathView(func,FUNCTION);\n            }\n            else{\n                functionsToDelete.add(func);\n            }\n        }\n        for(let func of functionsToDelete){\n            this.removeFunctionFromSet(func);\n        }\n    }\n\n    addElementToMathView(name:string,type:string){\n        throw new Error(\"This method should be implemented in child\");\n    }\n\n    removeElementFromMathView(name:string,type:string){\n        throw new Error(\"This method should be implemented in child\");\n    }\n\n    getReduxProps(){\n        return this.getOptions().reduxProps;\n    }\n\n    registerAppendPort() {\n        let port = new NaryRelationPortModel(ADDPORT);\n        port.setMaximumLinks(0);\n        this.addPort(port);\n        this.appendPort = port;\n    }\n}","import {BaseNodeModel, BaseNodeModelOptions} from \"../BaseNodeModel\";\nimport {PREDICATE} from \"../ConstantNames\";\n\nexport class TernaryNodeModel extends BaseNodeModel {\n\n\tconstructor(options?: BaseNodeModelOptions);\n\tconstructor(options: any = {}) {\n\t\tsuper({\n\t\t\ttype: 'ternary',\n\t\t\t...options\n\t\t});\n\t}\n\n\tremoveElementFromMathView(name: string, type: string) {\n\t\tlet removeElementFunction = type === PREDICATE?this.getReduxProps()[\"removeTernaryPredicate\"]:this.getReduxProps()[\"removeBinaryFunction\"];\n\t\tremoveElementFunction(name,this.getNodeNameCombination());\n\t}\n\n\taddElementToMathView(name:string,type:string){\n\t\tlet addElementFunction = type === PREDICATE?this.getReduxProps()[\"addTernaryPredicate\"]:this.getReduxProps()[\"addBinaryFunction\"];\n\t\taddElementFunction(name,this.getNodeNameCombination());\n\t}\n\n\tremoveNodeFromGraphView(){\n\t\tthis.getReduxProps()[\"removeTernaryNode\"](this.getNodeName());\n\t}\n}\n","import {BaseNodeModel, BaseNodeModelOptions} from \"../BaseNodeModel\";\nimport {PREDICATE} from \"../ConstantNames\";\n\nexport class QuaternaryNodeModel extends BaseNodeModel {\n\n\tconstructor(options?: BaseNodeModelOptions);\n\tconstructor(options: any = {}) {\n\t\tsuper({\n\t\t\ttype: 'quaternary',\n\t\t\t...options\n\t\t});\n\t}\n\n\tremoveElementFromMathView(name: string, type: string) {\n\t\tlet removeElementFunction = type === PREDICATE?this.getReduxProps()[\"removeQuaternaryPredicate\"]:this.getReduxProps()[\"removeTernaryFunction\"];\n\t\tremoveElementFunction(name,this.getNodeNameCombination());\n\t}\n\n\taddElementToMathView(name:string,type:string){\n\t\tlet addElementFunction = type === PREDICATE?this.getReduxProps()[\"addQuaternaryPredicate\"]:this.getReduxProps()[\"addTernaryFunction\"];\n\t\taddElementFunction(name,this.getNodeNameCombination());\n\t}\n\n\tremoveNodeFromGraphView(){\n\t\tthis.getReduxProps()[\"removeQuaternaryNode\"](this.getNodeName());\n\t}\n}\n","import {\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\nimport {BinaryLabelModel} from \"../../labels/binary/BinaryLabelModel\";\nimport {UnBinaryNodeModel} from \"../../nodes/unbinary/UnBinaryNodeModel\";\nimport {ConstantNodeModel} from \"../../nodes/constant/ConstantNodeModel\";\nimport {ConstantPortModel} from \"../../nodes/constant/ConstantPortModel\";\nimport {BASIC_CURVYNESS} from \"../../nodes/ConstantNames\";\nimport {BaseNodeModel} from \"../../nodes/BaseNodeModel\";\nimport {TernaryNodeModel} from \"../../nodes/ternary/TernaryNodeModel\";\nimport {QuaternaryNodeModel} from \"../../nodes/quaternary/QuaternaryNodeModel\";\nimport {NaryRelationPortModel} from \"../../nodes/NaryRelationPortModel\";\nimport { DiagramModel } from '@projectstorm/react-diagrams';\n\nexport interface BinaryLinkModelListener extends LinkModelListener {\n\t// @ts-ignore\n\tcolorChanged?(event: BaseEntityEvent<BinaryLinkModel> & { color: null | string }): void;\n\n\t// @ts-ignore\n\twidthChanged?(event: BaseEntityEvent<BinaryLinkModel> & { width: 0 | number }): void;\n\n\t// @ts-ignore\n\tentityRemoved?(event: BaseEntityEvent<BinaryLinkModel>): void;\n}\n\nexport interface BinaryLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface BinaryLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: BinaryLinkModelListener;\n\tOPTIONS: BinaryLinkModelOptions;\n}\n\nexport class BinaryLinkModel extends LinkModel<BinaryLinkModelGenerics> {\n\tlabel:BinaryLabelModel;\n\tcallReduxFunc:boolean;\n\tchangeCounter: number;\n\n\tconstructor(options: BinaryLinkModelOptions = {},canCallReduxFunc:boolean = true) {\n\t\tsuper({\n\t\t\ttype: 'binary',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 0,\n\t\t\t...options\n\t\t});\n\n\t\tthis.changeCounter = 0;\n\t\tthis.callReduxFunc = canCallReduxFunc;\n\t\tlet link:BinaryLinkModel = this;\n\t\tlet removeLinkIfCondition = (port:PortModel,link:LinkModel) =>{\n\t\t\tlet numberOfLinks: number = Object.keys(port.getLinks()).length;\n\t\t\tif (numberOfLinks > 1) {\n\t\t\t\tfor (let linkObject of Object.values(port.getLinks())) {\n\t\t\t\t\tif (linkObject !== link) {\n\t\t\t\t\t\tlinkObject.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet existNodeWithSameCombination = (nodeCombination:[string],diagramModel:DiagramModel,naryNode:BaseNodeModel) => {\n\t\t\tfor(let node of Object.values(diagramModel.getNodes())){\n\t\t\t\tif((node instanceof TernaryNodeModel || node instanceof QuaternaryNodeModel) && naryNode !== node){\n\t\t\t\t\tif(JSON.stringify(node.getNodeNameCombination()) === JSON.stringify(nodeCombination)){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\n\t\t};\n\t\t// @ts-ignore\n\t\tthis.registerListener({\n\t\t\ttargetPortChanged(event: BaseEntityEvent<LinkModel> & { port: PortModel | null }): void {\n\t\t\t\tif (link.getTargetPort() === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet sourceNode = link.getSourcePort().getNode();\n\t\t\t\tlet targetNode = link.getTargetPort().getNode();\n\n\t\t\t\tif (sourceNode instanceof UnBinaryNodeModel && targetNode instanceof UnBinaryNodeModel) {\n\t\t\t\t\tif(sourceNode === targetNode) {\n\t\t\t\t\t\tlink.getOptions().curvyness = BASIC_CURVYNESS;\n\t\t\t\t\t\tsourceNode.canSelectNode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\tlink.label = new BinaryLabelModel({},sourceNode.getOptions().reduxProps,sourceNode.getNodeName()+\" - \"+targetNode.getNodeName());\n\t\t\t\t\tlink.addLabel(link.label);\n\t\t\t\t\treturn;\n\n\t\t\t\t} else if ((sourceNode instanceof UnBinaryNodeModel && targetNode instanceof ConstantNodeModel) || (targetNode instanceof UnBinaryNodeModel && sourceNode instanceof ConstantNodeModel)) {\n\t\t\t\t\tlet constantNode: ConstantNodeModel = sourceNode instanceof ConstantNodeModel ? sourceNode : targetNode instanceof ConstantNodeModel ? targetNode : null;\n\t\t\t\t\tlet unbinaryNode: UnBinaryNodeModel = sourceNode instanceof UnBinaryNodeModel ? sourceNode : targetNode instanceof UnBinaryNodeModel ? targetNode : null;\n\n\t\t\t\t\tlet constantPort: ConstantPortModel = constantNode.getMainPort();\n\n\t\t\t\t\tif (constantPort === null || constantPort === undefined) {\n\t\t\t\t\t\tthrow new Error(\"Constant port can not be null, probably problem in initialization\");\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveLinkIfCondition(constantPort,link);\n\n\t\t\t\t\t//When link is created through Redux Action, another Action would be called and error would be thrown, so if it is created with some Redux Action we will not allow this Action to be dispatched\n\t\t\t\t\tif(link.isCallReduxFunc()){\n\t\t\t\t\t\tconstantNode.setConstantValueInMathView(unbinaryNode.getNodeName());\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tlink.setCallReduxFunc(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse if((sourceNode instanceof UnBinaryNodeModel && (targetNode instanceof TernaryNodeModel || targetNode instanceof QuaternaryNodeModel)) || ((sourceNode instanceof TernaryNodeModel || sourceNode instanceof QuaternaryNodeModel) && targetNode instanceof UnBinaryNodeModel)){\n\t\t\t\t\tlet unbinaryNode: UnBinaryNodeModel = sourceNode instanceof UnBinaryNodeModel ? sourceNode : targetNode instanceof UnBinaryNodeModel ? targetNode : null;\n\t\t\t\t\tlet naryNode:BaseNodeModel = (sourceNode instanceof TernaryNodeModel || sourceNode instanceof QuaternaryNodeModel)?sourceNode:(targetNode instanceof TernaryNodeModel || targetNode instanceof QuaternaryNodeModel)?targetNode:null;\n\t\t\t\t\tlet naryPort: NaryRelationPortModel = link.getSourcePort() instanceof NaryRelationPortModel?link.getSourcePort():link.getTargetPort() instanceof NaryRelationPortModel?link.getTargetPort():null;\n\t\t\t\t\tlet previousCombination:any = naryNode.getNodeNameCombination();\n\n\t\t\t\t\tif(naryNode && previousCombination){\n\t\t\t\t\t\tnaryNode.removeNodeFromMathView();\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveLinkIfCondition(naryPort,link);\n\t\t\t\t\tnaryNode.setValueToPort(naryPort,unbinaryNode);\n\t\t\t\t\tlet naryNodeCombination = naryNode.getNodeNameCombination();\n\t\t\t\t\tif(naryNodeCombination){\n\t\t\t\t\t\tif(existNodeWithSameCombination(naryNodeCombination,link.getSourcePort().getNode().getParent(),naryNode)){\n\t\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tnaryNode.representNodeInMathView();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tentityRemoved(event:any): void {\n\t\t\t\tif(!link.isCallReduxFunc() || !link.getTargetPort()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet sourceNode = link.getSourcePort().getNode();\n\t\t\t\tlet targetNode = link.getTargetPort().getNode();\n\n\t\t\t\tlet constantNode: ConstantNodeModel = sourceNode  instanceof ConstantNodeModel ? sourceNode : targetNode instanceof ConstantNodeModel ? targetNode : null;\n\t\t\t\tlet naryNode:BaseNodeModel = (sourceNode instanceof TernaryNodeModel || sourceNode instanceof QuaternaryNodeModel)?sourceNode:(targetNode instanceof TernaryNodeModel || targetNode instanceof QuaternaryNodeModel)?targetNode:null;\n\n\n\t\t\t\tif(constantNode){\n\t\t\t\t\tconstantNode.setConstantValueInMathView(\"\");\n\t\t\t\t}\n\t\t\t\telse if(naryNode){\n\t\t\t\t\tlet naryPort:NaryRelationPortModel = targetNode === naryNode?link.getTargetPort():link.getSourcePort();\n\t\t\t\t\tif(naryNode.getNodeNameCombination()){\n\t\t\t\t\t\tnaryNode.removeNodeFromMathView();\n\t\t\t\t\t\tnaryNode.removeValueFromPort(naryPort);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(link.label){\n\t\t\t\t\t\tlink.label.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tsetCurvyness(num:number){\n\t\tthis.getOptions().curvyness = num;\n\t}\n\n\tincreaseChangeCounter(){\n\t\tthis.changeCounter+=1;\n\t}\n\n\tsetCallReduxFunc(value:boolean){\n\t\tthis.callReduxFunc = value;\n\t}\n\n\tisCallReduxFunc(){\n\t\treturn this.callReduxFunc;\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetLabel(){\n\t\treturn this.label;\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(\n\t\t\t\tthis.getFirstPoint()\n\t\t\t\t\t.getPosition()\n\t\t\t\t\t.clone()\n\t\t\t);\n\t\t\tcurve.setTargetControl(\n\t\t\t\tthis.getLastPoint()\n\t\t\t\t\t.getPosition()\n\t\t\t\t\t.clone()\n\t\t\t);\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tclearLabels() {\n\t\tif (this.label) {\n\t\t\tlet label = new BinaryLabelModel({},this.label.getReduxProps());\n\n\t\t\tlabel.changeCounter = this.label.changeCounter;\n\t\t\tlabel.predicates = this.label.predicates;\n\t\t\tlabel.editable = this.label.editable;\n\n\t\t\tthis.label.setParent(null);\n\t\t\tdelete this.label;\n\n\t\t\tthis.labels = [];\n\n\t\t\tthis.label = label;\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor,\n\t\t\tchangeCounter: this.changeCounter\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t\tthis.changeCounter = event.data.changeCounter;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\t\treturn super.addLabel(label);\n\t\t\t}\n\t\tlet labelOb = new BinaryLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width += width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n\n\tremove() {\n\t\tif (this.sourcePort) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n}\n","import {LinkModel, PortModelAlignment, PortModel} from '@projectstorm/react-diagrams';\nimport _ from \"lodash\";\nimport {BinaryLinkModel} from \"../../links/binary/BinaryLinkModel\";\nimport {ADDPORT} from \"../ConstantNames\";\n\nexport class UnBinaryPortModel extends PortModel {\n\tconstructor(name: string) {\n\t\tsuper({\n\t\t\ttype: 'unbinary',\n\t\t\tname: name,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t}\n\n\tsetPortAlignment(alignment:PortModelAlignment){\n\t\tthis.getOptions().alignment = alignment;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tif(this.getMaximumLinks()=== 0){\n\t\t\treturn null;\n\t\t}\n\t\treturn new BinaryLinkModel();\n\t}\n\n\tremoveBadLink(){\n\t\tfor (let link of _.values(this.getLinks())) {\n\t\t\tif (link.getSourcePort() !== null && link.getTargetPort() === null) {\n\t\t\t\tlink.remove();\n\t\t\t}\n\t\t}\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tfor (let link of _.values(this.getLinks())) {\n\t\t\tif ((link.getSourcePort() === this && link.getTargetPort() === port) || (link.getSourcePort() === port && link.getTargetPort() === this)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.getParent().canSelectNode = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (this.getParent() === port.getParent()) {\n\t\t\treturn this !== port;\n\t\t}\n\n\t\tif(port.getName() === ADDPORT){\n\t\t\treturn false;\n\t\t}\n\n\t\tif(port.getParent().getOptions().type==='constant') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\taddLink(link: LinkModel) {\n\t\tthis.links[link.getID()] = link;\n\t}\n\n}\n","import {NodeModel, NodeModelGenerics} from '@projectstorm/react-diagrams';\nimport {UnBinaryPortModel} from './UnBinaryPortModel';\nimport {BasePositionModelOptions} from '@projectstorm/react-canvas-core';\nimport _ from 'lodash';\nimport {ADDPORT, MAINPORT} from \"../ConstantNames\";\n\nexport interface UnBinaryNodeModelGenerics {\n\tPORT: UnBinaryPortModel;\n\tOPTIONS: UnBinaryNodeModelOptions;\n}\n\nexport interface UnBinaryNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n\treduxProps:any;\n\tdomainNodeName:any;\n}\n\nexport class UnBinaryNodeModel extends NodeModel<NodeModelGenerics & UnBinaryNodeModelGenerics> {\n\tchangeCounter: number;\n\tunaryPredicates: Set<string>;\n\tappendPort: UnBinaryPortModel;\n\tmainPort: UnBinaryPortModel;\n\teditable:boolean;\n\tcanSelectNode:boolean;\n\n\tconstructor(name: string, color: string, reduxProps: any);\n\tconstructor(options?: UnBinaryNodeModelOptions);\n\tconstructor(options: any = {}, color?: string, reduxProps?: any) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color,\n\t\t\t\treduxProps: reduxProps,\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'unbinary',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(92,192,125)',\n\t\t\t...options\n\t\t});\n\t\tthis.addTemplatePorts();\n\t\tthis.registerEvents();\n\t\tthis.changeCounter = 0;\n\t\tthis.unaryPredicates = new Set();\n\t\tthis.canSelectNode = true;\n\t\tthis.editable = reduxProps[\"editable\"];\n\t}\n\n\taddPredicate(name:string){\n\t\tthis.addUnaryPredicate(name);\n\t}\n\n\tgetReduxProps(){\n\t\treturn this.getOptions().reduxProps;\n\t}\n\n\tgetPredicates(){\n\t\treturn this.unaryPredicates;\n\t}\n\n\tgetMainPort():UnBinaryPortModel{\n\t\treturn this.mainPort;\n\t}\n\n\tisEditable():boolean{\n\t\treturn this.editable;\n\t}\n\n\tchangeEditableState(value:boolean){\n\t\tthis.editable = value;\n\t}\n\n\taddTemplatePorts() {\n\t\tlet port:UnBinaryPortModel = new UnBinaryPortModel(ADDPORT);\n\t\tthis.appendPort = port;\n\t\tport.setMaximumLinks(0);\n\t\tthis.addPort(port);\n\n\t\tport = new UnBinaryPortModel(MAINPORT);\n\t\t//port.setPortAlignment(PortModelAlignment.TOP);\n\t\tthis.mainPort = port;\n\t\tthis.addPort(port);\n\t}\n\n\tregisterEvents() {\n\t\tlet node = this;\n\t\tthis.registerListener({\n\t\t\tentityRemoved(): void {\n\t\t\t\tnode.removeNodeFromMathView();\n\t\t\t}\n\t\t})\n\t}\n\n\tclearPredicates() {\n\t\tthis.unaryPredicates = new Set();\n\t\tthis.increaseChangeCounter();\n\t}\n\n\tgetUnaryPredicates() {\n\t\treturn this.unaryPredicates;\n\t}\n\n\tincreaseChangeCounter(){\n\t\tthis.changeCounter+=1;\n\t}\n\n\taddUnaryPredicateToSet(name: string){\n\t\tthis.unaryPredicates.add(name);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\taddUnaryPredicate(name: string) {\n\t\tname = name.replace(/\\s/g, \"\");\n\t\tif (!this.unaryPredicates.has(name)) {\n\t\t\tthis.getReduxProps()[\"addUnaryPredicate\"](name, this.getNodeName());\n\t\t\tthis.addUnaryPredicateToSet(name);\n\t\t}\n\t}\n\n\tremoveUnaryPredicate(name: string) {\n\t\tif (this.unaryPredicates.has(name)) {\n\t\t\tthis.removeUnaryPredicateFromSet(name);\n\t\t\tthis.getReduxProps()[\"removeUnaryPredicate\"](name, this.getNodeName());\n\t\t}\n\t}\n\n\tremoveNodeFromMathView(){\n\t\tfor(let unaryPredicate of this.unaryPredicates){\n\t\t\tthis.getReduxProps()[\"removeUnaryPredicate\"](unaryPredicate, this.getNodeName());\n\t\t}\n\t\tthis.getReduxProps()[\"removeDomainNode\"](this.getNodeName());\n\t}\n\n\tremoveUnaryPredicateFromSet(name: string){\n\t\tthis.unaryPredicates.delete(name);\n\t\tthis.increaseChangeCounter();\n\t}\n\n\tgetNodeName() {\n\t\treturn this.getOptions().name;\n\t}\n\n\tgetAppendPort() {\n\t\treturn this.appendPort;\n\t}\n\n\trenameNode(name: string) {\n\t\tthis.getOptions().name = name;\n\t}\n\n\tremovePort(port: UnBinaryPortModel): void {\n\t\tfor (let link of _.values(port.getLinks())) {\n\t\t\tlink.remove();\n\t\t}\n\t\t//clear the parent node reference\n\t\tif (this.ports[port.getName()]) {\n\t\t\tthis.ports[port.getName()].setParent(null);\n\t\t\tdelete this.ports[port.getName()];\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tchangeCounter: this.changeCounter,\n\t\t\tappendPort: this.appendPort,\n\t\t\teditable: this.editable\n\t\t};\n\t}\n\n\tdeserialize(event: any) {\n\t\tsuper.deserialize(event);\n\t\tthis.changeCounter = event.date.changeCounter;\n\t\tthis.appendPort = event.data.appendPort;\n\t\tthis.editable = event.data.editable;\n\t}\n}","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\nimport { DefaultPortModel } from '@projectstorm/react-diagrams';\n\nexport interface DefaultPortLabelProps {\n    port: DefaultPortModel;\n    engine: DiagramEngine;\n    width: number;\n}\n\nexport const PortLabel = styled.div`\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t\twidth:100%;\n`;\n\nexport const Label = styled.div`\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n`;\n\nexport const Port = styled.div<{ width: number; height: number }>`\n        font-size: 11px;\n        flex:auto;\n\t\theight: ${p => p.height}px;\n\t\tbackground: rgba(white, 0.1);\n\t\ttext-align:center;\n\t\t\n\t\t&:hover {\n\t\t\tbackground: rgba(256, 256, 256, 0.6);\n\t\t}\n\t\tcursor:pointer;\n\t`;\n\nexport class UnBinaryPortLabelWidget extends React.Component<DefaultPortLabelProps> {\n    render() {\n        const port = (\n            <PortWidget engine={this.props.engine} port={this.props.port}>\n                <Port width={this.props.width} height={20} />\n            </PortWidget>\n        );\n        const label = <Label>{this.props.port.getOptions().label}</Label>;\n\n        return (\n            <PortLabel>\n                {port}\n           </PortLabel>\n        );\n    }\n}\n","import styled from \"@emotion/styled\";\nimport _ from 'lodash';\nimport * as React from 'react';\nimport FontAwesome from \"react-fontawesome\";\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\nimport {ADDFUNC, ADDPRED, FROM, FUNCTION, PREDICATE, TO} from \"./ConstantNames\";\nimport {\n    canUseNameForGivenArityAndType, functionIsAlreadyDefinedForGivenFunction,\n    getAvailableLanguageElementForGivenArity,\n    setPredFuncBadNameIfRegexViolated\n} from \"./functions\";\nimport {BinaryLabelModel} from \"../labels/binary/BinaryLabelModel\";\nimport { Button } from \"react-bootstrap\";\n\nexport const DropDownModel = styled.div<{pointerEvents: string, cursor:string}>`\n\t\twidth: 100%;\n\t\tpointer-events: ${p => p.pointerEvents};\n\t\tcursor: ${p => p.cursor};\n\t\tbackground-color: green;\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tfont-weight: bold;\n\t\tcolor: black;\n\t\toverflow: visible;\n\t\tfont-size: 13px;\n\t\tborder: solid 2px black;\n\t`;\n\nexport const DropDownPorts = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(256, 256, 256, 0.9), rgba(256, 256, 256, 0.9));\n\t`;\n\nexport const DropDownTitleName = styled.div`\n\t\twidth: 100%;\n\t\tflex-grow: 1;\n\t\tpadding: 3px 3px;\n\t\tfont-size:11px;\n\t\ttext-align:center;\n\t\tcursor: context-menu;\n\t`;\n\nexport const DropDownContainer = styled.div`\n\t\twidth: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex: 1 0 0;\n\t`;\n\nexport const DropDownInputElement = styled.div`\n\t\twidth: 100%;\n\t\tflex-grow: 1;\n\t\tpadding: 3px 3px;\n\t`;\n\nexport const DropDownRowContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex: 1 0 0;\n\t`;\n\nexport const DropDownLanguageElement = styled.div`\n\t\tmin-width: 2em;\n\t\twidth: 100%;\n\t\theight: 20px;\n\t\tbackground: rgba(white, 0.1);\n\t\tcolor: black;\n\t\ttext-align:center;\n\t`;\n\n\nexport interface DropDownMenuWidgetProps {\n    model: any;\n    engine: DiagramEngine;\n    setStateInputElementTextLength:any;\n    widthOfInputElement:number;\n    modelName?:string;\n    arity:string;\n    closeDropDown:any;\n}\n\ninterface DropDownMenuWidgetState {\n    badNameForLanguageElement:boolean;\n    canAddAsPredicate:boolean;\n    canAddAsFunction:boolean;\n    inputTitle:string,\n    predicateButtonTitle:string,\n    functionButtonTitle:string,\n}\n\nexport class DropDownMenuWidget extends React.Component<DropDownMenuWidgetProps,DropDownMenuWidgetState> {\n    textInput:HTMLInputElement;\n\n    constructor(props:DropDownMenuWidgetProps) {\n        super(props);\n        this.generatePredicateComponent = this.generatePredicateComponent.bind(this);\n        this.generateFunctionComponent = this.generateFunctionComponent.bind(this);\n        this.setStateBadNameForLanguageElement = this.setStateBadNameForLanguageElement.bind(this);\n        this.clearTextInput = this.clearTextInput.bind(this);\n\n        this.state = {\n            badNameForLanguageElement:true,\n            canAddAsFunction:true,\n            canAddAsPredicate:true,\n            inputTitle:\"Zadaj názov pre predikát alebo funkciu\",\n            predicateButtonTitle:\"Pridaj nový predikát\",\n            functionButtonTitle:\"Pridaj novú funkciu\",\n        }\n    }\n\n    setStateBadNameForPredFunc(elementName:string){\n        if(setPredFuncBadNameIfRegexViolated(elementName,this.setStateBadNameForLanguageElement)){\n            this.setState({inputTitle:\"Zadaný názov nie je v správnom tvare\"});\n            return true;\n        }\n        this.setState({inputTitle:\"Zadaj názov pre predikát alebo funkciu\"});\n        return false;\n    }\n\n    generatePredicateComponent(elementObject:string){\n        return this.generateAvailableLanguageElement(elementObject,PREDICATE);\n    }\n\n\n    setStateBadNameForLanguageElement(bool:boolean){\n        this.setState({badNameForLanguageElement: bool});\n    }\n\n    generateFunctionComponent(elementObject:string){\n        return this.generateAvailableLanguageElement(elementObject,FUNCTION);\n    }\n\n    generateAvailableLanguageElement = (languageElement: string,type:string) => {\n        let alreadyDefined:boolean;\n        if(type === FUNCTION){\n            if(this.props.arity!==\"2\"){\n                alreadyDefined = functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(),this.props.model.getFunctionValue(),languageElement+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps());\n            }\n            else{\n                alreadyDefined = functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(FROM),this.props.model.getFunctionValue(FROM),languageElement+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps()) && functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(TO),this.props.model.getFunctionValue(TO),languageElement+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps());\n            }\n        }\n\n\n        return (\n            <DropDownRowContainer key={languageElement} >\n                <DropDownLanguageElement>\n                    {languageElement}\n                </DropDownLanguageElement>\n                <Button className={'btn-graph'} variant={type===PREDICATE?\"outline-success\":!alreadyDefined?\"outline-success\":\"outline-danger\"} disabled={type===FUNCTION && alreadyDefined} title={(type===FUNCTION && alreadyDefined)?\"Funkcia nemôže byť viackrát definovaná pre rovnaký(é) parameter(tre)\":(\"Pridaj \"+(type===PREDICATE?\"predikát\":\"funkciu\"))} onClick={() =>{\n                    if(type === PREDICATE){\n                        this.props.model.addPredicate(languageElement)\n                    }\n                    else{\n                        if(!alreadyDefined){\n                            this.props.model.addFunction(languageElement)\n                        }\n                    }\n                    this.props.engine.repaintCanvas();\n                }}><FontAwesome name={\"fas fa-plus\"}/></Button>\n            </DropDownRowContainer>\n        )\n    };\n\n    setLockedParentIfNeeded(bool:boolean){\n        if(this.props.model instanceof BinaryLabelModel){\n            this.props.model.setLockedParent(bool);\n        }\n    }\n\n    componentDidMount(): void {\n        //will re-render link so the position will be correct\n        if(this.props.model instanceof BinaryLabelModel){\n            // @ts-ignore\n            this.props.model.getParent().increaseChangeCounter();\n            this.props.engine.repaintCanvas();\n        }\n    }\n\n    componentWillUnmount(): void {\n        this.props.model.getReduxProps()[\"focusOnBodyElement\"]();\n    }\n\n    setCanUseForGivenType(type:string,elementName:string){\n        if(canUseNameForGivenArityAndType(elementName, type === PREDICATE ? this.props.arity : ((parseInt(this.props.arity) - 1).toString()), this.props.model.getReduxProps(), type)){\n            if(type === PREDICATE){\n                this.setState({canAddAsPredicate:true,predicateButtonTitle:\"Pridaj nový predikát\"});\n            }\n            else{\n                this.setState({canAddAsFunction:true,functionButtonTitle:\"Pridaj novú funkciu\"});\n                if(this.props.arity!==\"2\"){\n                    if(functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(),this.props.model.getFunctionValue(),this.textInput.value+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps())){\n                        this.setState({canAddAsFunction:false,functionButtonTitle:\"Funkcia nemôže byť viackrát definovaná pre rovnaký(é) parameter(tre)\"});\n                    }\n                }\n                else{\n                    if(functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(FROM),this.props.model.getFunctionValue(FROM),this.textInput.value+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps()) && functionIsAlreadyDefinedForGivenFunction(this.props.model.getNodeParameters(TO),this.props.model.getFunctionValue(TO),this.textInput.value+\"/\"+(parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps())){\n                        this.setState({canAddAsFunction:false,functionButtonTitle:\"Funkcia nemôže byť viackrát definovaná pre rovnaký(é) parameter(tre)\"});\n                    }\n                }\n            }\n        }\n        else{\n            if(type === PREDICATE){\n                this.setState({canAddAsPredicate:false,predicateButtonTitle:\"Predikát nejde pridať, predikát alebo funkcia s daným menom už existuje pre iný typ alebo pre inú aritu\"});\n            }\n            else{\n                this.setState({canAddAsFunction:false,functionButtonTitle:\"Funkciu nejde pridať, predikát alebo funkcia s daným menom už existuje pre iný typ alebo pre inú aritu\"});\n            }\n            return;\n        }\n    }\n\n    clearTextInput(){\n        this.textInput.value = \"\";\n        this.setState({badNameForLanguageElement:true,canAddAsFunction:true,canAddAsPredicate:true});\n        this.props.engine.repaintCanvas();\n    }\n\n    addGivenInputElement(type:string) {\n        if(!this.setStateBadNameForPredFunc(this.textInput.value.replace(/\\s/g, \"\")) && canUseNameForGivenArityAndType(this.textInput.value, type === PREDICATE ? this.props.arity : ((parseInt(this.props.arity) - 1).toString()), this.props.model.getReduxProps(), type)){\n            if (type === PREDICATE) {\n                this.props.model.addPredicate(this.textInput.value);\n            } else {\n                if(!this.state.canAddAsFunction){\n                    return;\n                }\n                this.props.model.addFunction(this.textInput.value);\n            }\n            this.clearTextInput();\n        }\n    }\n\n    render() {\n        let funcArity:number = parseInt(this.props.arity)-1;\n\n        return (\n            <DropDownModel pointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n                           cursor={this.props.model.isEditable() ? \"pointer\" : \"move\"}>\n                <DropDownPorts>\n                    <DropDownContainer>\n                        <DropDownTitleName title={\"Zoznam použiteľných predikátov pre aritu \"+this.props.arity}>\n                            Pred\n                        </DropDownTitleName>\n                        {_.map(Array.from(getAvailableLanguageElementForGivenArity(this.props.arity,this.props.model.getReduxProps(),this.props.model.getPredicates(),PREDICATE)), this.generatePredicateComponent)}\n                        {funcArity !== 0?\n                            <DropDownTitleName title={\"Zoznam použiteľných funkcií pre aritu \"+funcArity}>\n                                Func\n                            </DropDownTitleName>:null\n                        }\n                        {funcArity !== 0?_.map(Array.from(getAvailableLanguageElementForGivenArity((parseInt(this.props.arity)-1).toString(),this.props.model.getReduxProps(),this.props.model.getFunctions(),FUNCTION)), this.generateFunctionComponent):null}\n                        <DropDownInputElement>\n                            <DropDownRowContainer key={\"lastPredicateOption\"}>\n                                <input title={this.state.inputTitle} onChange={(e) => {\n                                    let elName:string = e.target.value.replace(/\\s/g, \"\");\n                                    this.props.setStateInputElementTextLength(e.target.value.length);\n                                    this.setStateBadNameForPredFunc(elName);\n                                    this.setCanUseForGivenType(PREDICATE,elName);\n                                    if(this.props.arity!==\"1\"){\n                                        this.setCanUseForGivenType(FUNCTION,elName);\n                                    }\n                                }}\n                                       ref={(input) => this.textInput = input}\n                                       onFocus={() => {\n                                           this.props.model.setLocked(true);\n                                           this.setLockedParentIfNeeded(true);\n                                       }}\n                                       onBlur={() => {\n                                           this.props.model.setLocked(false);\n                                           this.setLockedParentIfNeeded(false);\n                                       }}\n                                       onKeyDown={(e) => {\n                                           if (e.key === \"Escape\") {\n                                               this.props.closeDropDown();\n                                           }\n                                           else if (e.key === \"Enter\" && funcArity === 0) {\n                                               this.addGivenInputElement(PREDICATE);\n                                           }\n                                       }}\n                                       placeholder={funcArity!==0?\"Add pred/func\":\"Add predicate\"} style={{\n                                    width: (this.props.widthOfInputElement===1?2:this.props.widthOfInputElement) + \"ch\",\n                                    height: 20 + \"px\",\n                                    border: this.state.badNameForLanguageElement ? \"1px solid red\" : \"1px solid black\"\n                                }}>\n                                </input>\n                                <Button className={'btn-graph'} variant={this.state.canAddAsPredicate?\"outline-success\":\"outline-danger\"} disabled={!this.state.canAddAsPredicate} title={this.state.predicateButtonTitle} onClick={() => {\n                                    this.addGivenInputElement(PREDICATE);\n                                }}>{ADDPRED}</Button>\n                                {\n                                    funcArity!==0?\n                                        <Button className={'btn-graph'} variant={this.state.canAddAsFunction?\"outline-success\":\"outline-danger\"} disabled={!this.state.canAddAsFunction} title={this.state.functionButtonTitle} onClick={() => {\n                                            this.addGivenInputElement(FUNCTION);\n                                        }}>{ADDFUNC}</Button>\n                                        :null\n                                }\n                            </DropDownRowContainer>\n                        </DropDownInputElement>\n                    </DropDownContainer>\n                </DropDownPorts>\n            </DropDownModel>\n        )\n    }\n}\n","import _ from \"lodash\";\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport FontAwesome from \"react-fontawesome\";\nimport { BinaryLabelModel } from './BinaryLabelModel';\nimport {DiagramEngine} from '@projectstorm/react-diagrams';\nimport {ADDPORT, ADDPORTSELECTED, BOTH, FROM, FUNCTION, PREDICATE} from \"../../nodes/ConstantNames\";\nimport {DropDownMenuWidget} from \"../../nodes/DropDownMenuWidget\";\nimport {Port} from \"../../nodes/unbinary/UnBinaryPortLabelWidget\";\nimport {getWidestElement} from \"../../nodes/functions\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface BinaryLabelWidgetProps {\n\tmodel: BinaryLabelModel;\n\tengine: DiagramEngine;\n\tname?:string;\n\tsize?: number;\n}\n\nexport const ElementsNode = styled.div<{pointerEvents: string, cursor:string}>`\n\t\tpointer-events: ${p => p.pointerEvents};\n\t\tcursor: ${p => p.cursor};\n\t\twidth:100%;\n\t\theight:100%;\n\t\tbackground-color: yellow;\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: black;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 12px;\n\t\tfont-weight: bold;\n\t`;\n\nexport const Element = styled.div`\n\t\tmin-width: 2em;\n\t\twidth: 100%;\n\t\theight: 20px;\n\t\tbackground: rgba(white, 0.1);\n\t\tcolor: black;\n\t\ttext-align:center;\n\t`;\n\nexport const Elements = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(256, 256, 256, 0.4), rgba(256, 256, 256, 0.5));\n\t`;\n\nexport const ElementContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-grow:1;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n\nexport const ElementRowContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex: 1 0 0;\n\t`;\n\nexport const Title = styled.div`\n\t\twidth: 100%;\n\t\tbackground: rgba(256, 256, 256, 0.15);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t\ttext-align:center;\n\t\tcursor: default;\n\t`;\n\nexport const TitleName = styled.div`\n\t\twidth: 100%;\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n\ninterface BinaryNodeWidgetState {\n\trenameActive?:boolean;\n\ttitleChanged?:boolean;\n\tisDropDownMenu:boolean;\n\tbadNameForNewPredicate: boolean;\n\tinputElementTextLength: number;\n}\n\nexport class BinaryLabelWidget extends React.Component<BinaryLabelWidgetProps,BinaryNodeWidgetState> {\n\tsourceNodeName:string;\n\ttargetNodeName:string;\n\n\tconstructor(props: BinaryLabelWidgetProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisDropDownMenu: false,\n\t\t\tbadNameForNewPredicate: false,\n\t\t\tinputElementTextLength: 0\n\t\t};\n\t\tthis.setInputElementTextLength = this.setInputElementTextLength.bind(this);\n\t\tthis.closeDropDown = this.closeDropDown.bind(this);\n\t\tthis.generateElementType = this.generateElementType.bind(this);\n\t\tthis.generatePredicateComponent = this.generatePredicateComponent.bind(this);\n\t\tthis.generateFunctionComponent = this.generateFunctionComponent.bind(this);\n\t}\n\n\tgenerateElementType = (elementObject: string,type: string) => {\n\t\treturn (\n\t\t\t\t<ElementRowContainer key={elementObject[0]} >\n\t\t\t\t\t{this.sourceNodeName !== this.targetNodeName?\n\t\t\t\t\t<Button className={'btn-graph'} variant={\"outline-warning\"} onClick={() =>{\n\t\t\t\t\t\tthis.props.model.changeDirectionOfBinaryRelation(elementObject[0], elementObject[1],type);\n\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t}}><FontAwesome title={\"Smer \"+(type===PREDICATE?\"predikátu\":\"funkcie\")} name={elementObject[1]===BOTH?'fas fa-arrows-alt-h':(elementObject[1]===FROM?\"fas fa-long-arrow-alt-right\":\"fas fa-long-arrow-alt-left\")}/></Button>:null}\n\t\t\t\t<Element title={type===PREDICATE?\"Predikát\":\"Funkcia\"}>\n\t\t\t\t\t{elementObject[0]}\n\t\t\t\t</Element>\n\t\t\t\t\t<Button className={'btn-graph'} variant={\"outline-warning\"} title={\"Zmazať \"+(type===PREDICATE?\"daný predikát\":\"danú funkciu\")+\" z vrcholu\"} onClick={() =>{\n\t\t\t\t\t\ttype===PREDICATE?this.props.model.removePredicate(elementObject[0]):this.props.model.removeFunction(elementObject[0]);\n\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t}}><FontAwesome name={\"fas fa-trash\"}/></Button>\n\t\t\t\t</ElementRowContainer>\n\t\t\t)\n\t\t};\n\n\tgeneratePredicateComponent(elementObject:string){\n\t\t\treturn this.generateElementType(elementObject,PREDICATE);\n\t}\n\n\tgenerateFunctionComponent(elementObject:string){\n\t\treturn this.generateElementType(elementObject,FUNCTION);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.setIsDropDownMenuAccordingBehaviour();\n\t}\n\n\tsetIsDropDownMenuAccordingBehaviour(){\n\t\tif(!this.props.model.getParent().isSelected() && this.state.isDropDownMenu){\n\t\t\tthis.setState({isDropDownMenu:false});\n\t\t\tthis.props.model.setLockedParent(false);\n\t\t\tthis.props.model.setLocked(false);\n\t\t}\n\t}\n\n\tgetWidestElement():number{\n\t\tlet width:number = this.sourceNodeName.length+this.targetNodeName.length;\n\t\tlet compareWidth:number = getWidestElement(this.state.isDropDownMenu,this.state.inputElementTextLength,this.props.model,width,\"2\",\"1\");\n\n\t\tif(compareWidth>width){\n\t\t\treturn compareWidth;\n\t\t}\n\n\t\treturn width;\n\t}\n\n\tsetInputElementTextLength(length: number){\n\t\tthis.setState({inputElementTextLength:length});\n\t}\n\n\tcloseDropDown(){\n\t\tthis.setState({isDropDownMenu:false});\n\t\tthis.props.model.setLocked(false);\n\t\tthis.props.engine.getModel().clearSelection();\n\t\tthis.props.engine.repaintCanvas();\n\t}\n\n\trender() {\n\t\t// @ts-ignore\n\t\tthis.sourceNodeName = this.props.model.getParent().getSourcePort().getNode().getNodeName();\n\t\t// @ts-ignore\n\t\tthis.targetNodeName = this.props.model.getParent().getTargetPort().getNode().getNodeName();\n\n\t\tlet width = this.getWidestElement();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ElementsNode pointerEvents={this.props.model.editable ? \"all\" : \"none\"}\n\t\t\t\t\t\t\t  cursor={this.props.model.editable ? \"pointer\" : \"move\"}>\n\t\t\t\t\t<Title title={\"Smerovanie predikátov/funkcií (od – do)\"}>\n\t\t\t\t\t\t<TitleName>\n\t\t\t\t\t\t\t{this.sourceNodeName + \" – \" + this.targetNodeName}\n\t\t\t\t\t\t</TitleName>\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Elements>\n\t\t\t\t\t\t<ElementContainer>\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getPredicates()), this.generatePredicateComponent)}\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getFunctions()), this.generateFunctionComponent)}\n\t\t\t\t\t\t\t<Port title={\"Otvoriť/zatvoriť rozbaľovaciu ponuku\"} onClick={() => {\n\t\t\t\t\t\t\t\tif (this.state.isDropDownMenu) {\n\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t\t\tthis.props.model.getParent().setSelected(true);\n\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: true});\n\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t  height={20}\n\t\t\t\t\t\t\t\t  width={this.props.model.getOptions().name?0:20}>{this.state.isDropDownMenu ? ADDPORTSELECTED : ADDPORT}</Port>\n\t\t\t\t\t\t</ElementContainer>\n\t\t\t\t\t</Elements>\n\t\t\t\t</ElementsNode>\n\t\t\t\t{(this.state.isDropDownMenu && this.props.model.getParent().isSelected()) ?\n\t\t\t\t\t<DropDownMenuWidget model={this.props.model} engine={this.props.engine}\n\t\t\t\t\t\t\t\t\t\tbadNameForLanguageElement={this.state.badNameForNewPredicate}\n\t\t\t\t\t\t\t\t\t\tsetStateInputElementTextLength={this.setInputElementTextLength}\n\t\t\t\t\t\t\t\t\t\twidthOfInputElement={width} arity={\"2\"} closeDropDown={this.closeDropDown}/> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport FontAwesome from \"react-fontawesome\";\nimport { UnBinaryNodeModel } from './UnBinaryNodeModel';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams';\nimport { Port } from \"./UnBinaryPortLabelWidget\";\nimport {ADDPORT, ADDPORTSELECTED, UNBINARY} from \"../ConstantNames\";\nimport {Element, ElementRowContainer} from \"../../labels/binary/BinaryLabelWidget\";\nimport {DropDownMenuWidget} from \"../DropDownMenuWidget\";\nimport {canUseNameForNode, getWidestElement, selectOnlyCurrentGraphElement} from \"../functions\";\nimport { Button } from 'react-bootstrap';\n\nexport interface UnBinaryNodeWidgetProps {\n\tmodel: UnBinaryNodeModel;\n\tengine: DiagramEngine;\n\trenameDomainNode:any;\n\tremoveDomainNode:any;\n\tname?:string;\n\tsize?: number;\n}\n\ninterface UnBinaryNodeWidgetState {\n\trenameActive?:boolean;\n\ttitleChanged?:boolean;\n\tnodeName?:string;\n\tbadName?:boolean;\n\tisDropDownMenu?:boolean;\n\tinputElementTextLength?:number;\n}\n\nexport const Node = styled.div<{ background: string; selected: boolean, pointerEvents: string, cursor:string}>`\n\t\twidth: 100%;\n\t\tpointer-events: ${p => p.pointerEvents};\n\t\tcursor: ${p => p.cursor};\n\t\t/*background-color: ${p => p.background};*/\n\t\tbackground-color: green;\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tfont-weight: bold;\n\t\tcolor: black;\n\t\toverflow: visible;\n\t\tfont-size: 13px;\n\t\tborder: solid 2px ${p => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n\nexport const Title = styled.div`\n\t\twidth: 100%;\n\t\tbackground: rgba(255, 255, 255, 0.45);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t\ttext-align:center;\n\t`;\n\nexport const TitleName = styled.div`\n\t\twidth: 100%;\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t\t\t\t\n\t\t&:hover {\n\t\t\tbackground: rgba(255, 255, 255, 0.7);\n\t\t}\n\t`;\n\nexport const Ports = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(255, 255, 255, 0.55), rgba(255, 255, 255, 0.65));\n\t`;\n\nexport const PortsContainer = styled.div`\n\t\twidth: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex: 1 0 0;\n\t`;\n\nexport class UnBinaryNodeWidget extends React.Component<UnBinaryNodeWidgetProps,UnBinaryNodeWidgetState> {\n\tconstructor(props: UnBinaryNodeWidgetProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trenameActive: false,\n\t\t\ttitleChanged: false,\n\t\t\tnodeName: this.props.model.getOptions().name,\n\t\t\tbadName: false,\n\t\t\tisDropDownMenu: false,\n\t\t\tinputElementTextLength: 0\n\t\t};\n\t\tthis.setBadNodeNameState = this.setBadNodeNameState.bind(this);\n\t\tthis.setInputElementTextLength = this.setInputElementTextLength.bind(this);\n\t\tthis.closeDropDown = this.closeDropDown.bind(this);\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.setIsDropDownMenuAccordingBehaviour();\n\t}\n\n\tgeneratePredicate = (predicate: string) => {\n\t\treturn (\n\t\t\t<ElementRowContainer key={predicate} >\n\t\t\t\t<Element>\n\t\t\t\t\t{predicate}\n\t\t\t\t</Element>\n\t\t\t\t<Button className={'btn-graph'} variant={\"outline-success\"} onClick={() =>{\n\t\t\t\t\tthis.props.model.removeUnaryPredicate(predicate);\n\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t}}><FontAwesome name={\"fas fa-trash\"}/></Button>\n\t\t\t</ElementRowContainer>\n\t\t)\n\t};\n\n\tcancelRenameNode() {\n\t\tthis.setState({renameActive: false, nodeName: this.props.model.getNodeName(), badName: false});\n\t\tthis.props.model.setLocked(false);\n\t}\n\n\trenameNode(nodeName:string) {\n\t\tthis.props.model.setLocked(false);\n\n\t\tif (nodeName !== this.props.model.getNodeName()) {\n\t\t\tif (!this.state.badName) {\n\t\t\t\tthis.props.renameDomainNode(this.props.model.getNodeName(),nodeName);\n\t\t\t\tthis.props.model.renameNode(nodeName);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({nodeName: this.props.model.getNodeName()});\n\t\tthis.setState({renameActive: false});\n\t\tthis.setState({badName: false});\n\t}\n\n\tsetBadNodeNameState(bool: boolean) {\n\t\tthis.setState({badName: bool});\n\t}\n\n\tsetInputElementTextLength(length: number){\n\t\tthis.setState({inputElementTextLength:length});\n\t}\n\n\tsetIsDropDownMenuAccordingBehaviour(){\n\t\tif(!this.props.model.isSelected() && this.state.isDropDownMenu){\n\t\t\tthis.setState({isDropDownMenu:false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t}\n\t}\n\n\tcloseDropDown(){\n\t\tif(this.state.isDropDownMenu){\n\t\t\tthis.setState({isDropDownMenu:false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\tthis.props.engine.repaintCanvas();\n\t\t}\n\t}\n\n\tgetWidestElement():number{\n\t\tlet width:number = this.state.nodeName.length;\n\t\tlet compareWidth:number = getWidestElement(this.state.isDropDownMenu,this.state.inputElementTextLength,this.props.model,width,\"1\",\"0\");\n\n\t\tif(compareWidth>width){\n\t\t\treturn compareWidth;\n\t\t}\n\n\t\treturn width;\n\t}\n\n\trender() {\n\t\tlet width = this.getWidestElement();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Node\n\t\t\t\t\tdata-basic-node-name={this.props.name}\n\t\t\t\t\tselected={this.props.model.isSelected()}\n\t\t\t\t\tbackground={this.props.model.getOptions().color}\n\t\t\t\t\tpointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n\t\t\t\t\tcursor={this.props.model.isEditable() ? \"pointer\" : \"move\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(this.props.model.canSelectNode){\n\t\t\t\t\t\t\tselectOnlyCurrentGraphElement(this.props.model,this.props.engine);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.props.model.canSelectNode = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Title title={\"Vytvoriť novú linku ťahaním/dvojklikom premenovať názov vrcholu\"}>\n\t\t\t\t\t\t<PortWidget style={{flexGrow: 1}} engine={this.props.engine}\n\t\t\t\t\t\t\t\t\tport={this.props.model.getMainPort()}>\n\t\t\t\t\t\t\t<TitleName onDoubleClick={() => {\n\t\t\t\t\t\t\t\tif (this.state.isDropDownMenu) {\n\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!this.state.renameActive) {\n\t\t\t\t\t\t\t\t\tthis.setState({renameActive: true});\n\t\t\t\t\t\t\t\t\tthis.props.model.setLocked(true);\n\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{!this.state.renameActive ? this.props.model.getNodeName() :\n\t\t\t\t\t\t\t\t\t<input autoFocus onBlur={() => {\n\t\t\t\t\t\t\t\t\t\tlet name = this.state.nodeName.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\t\tthis.renameNode(name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t   onKeyDown={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t   if (e.key === \"Escape\") {\n\t\t\t\t\t\t\t\t\t\t\t\t   this.cancelRenameNode();\n\t\t\t\t\t\t\t\t\t\t\t   } else if (e.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\t\t\t   let name = this.state.nodeName.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\t\t\t\t   this.renameNode(name);\n\t\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t\t   type=\"text\" style={{\n\t\t\t\t\t\t\t\t\t\twidth: (width + 1.5) + \"ch\",\n\t\t\t\t\t\t\t\t\t\theight: 20 + \"px\",\n\t\t\t\t\t\t\t\t\t\tborder: this.state.badName ? \"1px solid red\" : \"1px solid black\"\n\t\t\t\t\t\t\t\t\t}} name=\"\" value={this.state.nodeName}\n\t\t\t\t\t\t\t\t\t\t   onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t   this.setState({nodeName: e.target.value});\n\t\t\t\t\t\t\t\t\t\t\t   let name: string = e.target.value.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\t\t\t   canUseNameForNode(this.props.model.getNodeName(),name,this.setBadNodeNameState,this.props.model.getReduxProps(),UNBINARY);\n\t\t\t\t\t\t\t\t\t\t   }}/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TitleName>\n\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Ports>\n\t\t\t\t\t\t<PortsContainer>\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getUnaryPredicates()), this.generatePredicate)}\n\t\t\t\t\t\t\t<PortWidget style={{flexGrow: 1}} engine={this.props.engine}\n\t\t\t\t\t\t\t\t\t\tport={this.props.model.getAppendPort()}>\n\t\t\t\t\t\t\t\t<Port title={\"Otvoriť/zatvoriť rozbaľovaciu ponuku\"} onClick={() => {\n\t\t\t\t\t\t\t\t\tif (this.state.isDropDownMenu) {\n\t\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: true, badNameForNewPredicate: true});\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t  height={20}\n\t\t\t\t\t\t\t\t\t  width={this.props.model.getOptions().name.length * 20}>{this.state.isDropDownMenu ? ADDPORTSELECTED : ADDPORT}</Port>\n\t\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t</PortsContainer>\n\t\t\t\t\t</Ports>\n\t\t\t\t</Node>\n\n\t\t\t\t{(this.state.isDropDownMenu && this.props.model.isSelected()) ?\n\t\t\t\t\t<DropDownMenuWidget widthOfInputElement={width}\n\t\t\t\t\t\t\t\t\t\tsetStateInputElementTextLength={this.setInputElementTextLength}\n\t\t\t\t\t\t\t\t\t\tmodel={this.props.model}\n\t\t\t\t\t\t\t\t\t\tengine={this.props.engine} modelName={this.props.model.getNodeName()}\n\t\t\t\t\t\t\t\t\t\tarity={\"1\"}\n\t\t\t\t\t\t\t\t\t\tcloseDropDown={this.closeDropDown}/> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react';\nimport { ConstantNodeModel } from './ConstantNodeModel';\nimport {DiagramEngine, PortWidget} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport {CONSTANT, UNBINARY} from \"../ConstantNames\";\nimport {canUseNameForNode, selectOnlyCurrentGraphElement} from \"../functions\";\n\nexport interface ConstantNodeWidgetProps {\n\tmodel: ConstantNodeModel;\n\tengine: DiagramEngine;\n\trenameConstantNode:any;\n\tremoveConstantNode:any;\n\tname?:string;\n\tsize?: number;\n}\n\ninterface ConstantNodeWidgetState {\n\trenameActive?:boolean;\n\ttitleChanged?:boolean;\n\tnodeName?:string;\n\tbadName?:boolean;\n}\n\nexport const Node = styled.div<{ background: string; selected: boolean, pointerEvents: string, cursor:string}>`\n\t\t/*background-color: ${p => p.background};*/\n\t\tbackground-color: #a6adbd;\n\t\tpointer-events: ${p => p.pointerEvents};\n\t\tcursor: ${p => p.cursor};\n\t\tborder-radius: 50%;\n\t\tfont-family: sans-serif;\n\t\tfont-weight:bold;\n\t\tcolor: black;\n\t\tborder: solid 2px black;\n\t\toverflow: hidden;\n\t\tfont-size: 13px;\n\t\tborder: solid 2.5px ${p => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t\tjustify-items: center;\n\t\ttext-align:center;\n\t`;\n\nexport const Title = styled.div`\n\t\tbackground: rgba(256, 256, 256, 0.15);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t\ttext-align:center;\n\t`;\n\nexport const TitleName = styled.div`\n\t\tflex-grow: 1;\n\t\tpadding: 10px 10px;\n\t\t\t\t\n\t\t&:hover {\n\t\t\tbackground: rgba(256, 256, 256, 0.4);\n\t\t}\n\t`;\n\n\nexport class ConstantNodeWidget extends React.Component<ConstantNodeWidgetProps,ConstantNodeWidgetState> {\n\tconstructor(props:ConstantNodeWidgetProps){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trenameActive: false,\n\t\t\ttitleChanged: false,\n\t\t\tnodeName: this.props.model.getOptions().name,\n\t\t\tbadName: false\n\t\t};\n\t\tthis.setBadNodeNameState = this.setBadNodeNameState.bind(this);\n\t}\n\n\tcancelRenameNode() {\n\t\tthis.setState({renameActive: false, nodeName: this.props.model.getNodeName(), badName: false});\n\t\tthis.props.model.setLocked(false);\n\t}\n\n\trenameNode(nodeName:string) {\n\t\tthis.props.model.setLocked(false);\n\n\t\tif (nodeName !== this.props.model.getNodeName()) {\n\t\t\tif (!this.state.badName) {\n\t\t\t\tthis.props.renameConstantNode(this.props.model.getNodeName(),nodeName);\n\t\t\t\tthis.props.model.renameNode(nodeName);\n\t\t\t} else {\n\t\t\t\tthis.setState({nodeName: this.props.model.getNodeName()});\n\t\t\t}\n\t\t}\n\t\tthis.setState({nodeName: this.props.model.getNodeName()});\n\t\tthis.setState({renameActive: false});\n\t\tthis.setState({badName: false});\n\t}\n\n\tgetWidestElement():number{\n\t\tlet width:number = this.props.model.getNodeName().length;\n\n\t\tif(this.state.renameActive){\n\t\t\treturn width;\n\t\t}\n\t\treturn width;\n\t}\n\n\tsetBadNodeNameState(bool: boolean) {\n\t\tthis.setState({badName: bool});\n\t}\n\n\trender() {\n\t\tlet width = this.getWidestElement();\n\n\t\treturn (\n\t\t\t<Node\n\t\t\t\tdata-basic-node-name={this.props.name}\n\t\t\t\tselected={this.props.model.isSelected()}\n\t\t\t\tbackground={this.props.model.getOptions().color}\n\t\t\t\tpointerEvents={this.props.model.isEditable()?\"auto\":\"none\"}\n\t\t\t\tcursor={this.props.model.isEditable()?\"pointer\":\"move\"}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tselectOnlyCurrentGraphElement(this.props.model,this.props.engine);\n\t\t\t\t}}>\n\t\t\t\t<Title>\n\t\t\t\t\t<PortWidget engine={this.props.engine} port={this.props.model.getMainPort()}>\n\t\t\t\t\t\t<TitleName onDoubleClick={() => {\n\t\t\t\t\t\t\tif (!this.state.renameActive) {\n\t\t\t\t\t\t\t\tthis.setState({renameActive: true});\n\t\t\t\t\t\t\t\tthis.props.model.setLocked(true);\n\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{!this.state.renameActive ? this.props.model.getNodeName() :\n\t\t\t\t\t\t\t\t<input autoFocus onBlur={() => {\n\t\t\t\t\t\t\t\t\tlet name = this.state.nodeName.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\tthis.renameNode(name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t   onKeyDown={(e) => {\n\t\t\t\t\t\t\t\t\t\t   if (e.key === \"Escape\") {\n\t\t\t\t\t\t\t\t\t\t\t   this.cancelRenameNode();\n\t\t\t\t\t\t\t\t\t\t   } else if (e.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\t\t   let name = this.state.nodeName.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\t\t\t   this.renameNode(name);\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   type=\"text\" style={{\n\t\t\t\t\t\t\t\t\twidth: (width+1.5)+\"ch\",\n\t\t\t\t\t\t\t\t\theight: 20 + \"px\",\n\t\t\t\t\t\t\t\t\tborder: this.state.badName ? \"1px solid red\" : \"1px solid black\"\n\t\t\t\t\t\t\t\t}} name=\"\" value={this.state.nodeName}\n\t\t\t\t\t\t\t\t\t   onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t   this.setState({nodeName: e.target.value});\n\t\t\t\t\t\t\t\t\t\t   let name = e.target.value.replace(/\\s/g, \"\");\n\t\t\t\t\t\t\t\t\t\t   canUseNameForNode(this.props.model.getNodeName(),name,this.setBadNodeNameState,this.props.model.getReduxProps(),CONSTANT);\n\t\t\t\t\t\t\t\t\t   }}/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TitleName>\n\t\t\t\t\t</PortWidget>\n\t\t\t\t</Title>\n\t\t\t</Node>)\n\t}\n}\n","import * as React from \"react\";\nimport {Element, ElementRowContainer} from \"../labels/binary/BinaryLabelWidget\";\nimport FontAwesome from \"react-fontawesome\";\nimport {PREDICATE} from \"./ConstantNames\";\nimport {DiagramEngine} from \"@projectstorm/react-diagrams\";\nimport {BaseNodeModel} from \"./BaseNodeModel\";\nimport {Button} from \"react-bootstrap\";\n\nexport interface NaryListWidgetProps {\n    model: BaseNodeModel;\n    engine: DiagramEngine;\n    type: string;\n    elementName: string;\n}\n\nexport class NaryListWidget extends React.Component<NaryListWidgetProps> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render(){\n        return (\n            <ElementRowContainer key={this.props.elementName} >\n                <Element title={this.props.type===PREDICATE?\"Predikát\":\"Funkcia\"}>\n                    {this.props.elementName}\n                </Element>\n                <Button className={'btn-graph'} variant={\"outline-warning\"} title={\"Zmazať \"+(this.props.type===PREDICATE?\"daný predikát\":\"danú funkciu\")+\" z vrcholu\"} onClick={() =>{\n                    this.props.type===PREDICATE?this.props.model.removePredicate(this.props.elementName):this.props.model.removeFunction(this.props.elementName);\n                    this.props.engine.repaintCanvas();\n                }}><FontAwesome name={\"fas fa-trash\"}/></Button>\n            </ElementRowContainer>\n        )\n    }\n}","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { TernaryNodeModel } from './TernaryNodeModel';\nimport {\n\tDropDownMenuWidget\n} from \"../DropDownMenuWidget\";\nimport {getWidestElement, selectOnlyCurrentGraphElement} from '../functions';\nimport {ADDPORT, ADDPORTSELECTED, FUNCTION, PREDICATE} from \"../ConstantNames\";\nimport {ElementContainer} from \"../../labels/binary/BinaryLabelWidget\";\nimport {Port as PortClassic} from \"../../nodes/unbinary/UnBinaryPortLabelWidget\";\nimport _ from \"lodash\";\nimport {NaryListWidget} from \"../NaryListWidget\";\n\nexport interface TernaryNodeWidgetProps {\n\tmodel: TernaryNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\ninterface TernaryNodeWidgetState {\n\tnodeName?:string;\n\tbadName?:boolean;\n\tcolor?:any;\n\tisDropDownMenu?:boolean;\n\tinputElementTextLength?:number;\n}\n\nexport const Element = styled.div`\n\tdisplay: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nexport const Port = styled.div`\n\twidth: 16px;\n\theight: 16px;\n\tz-index: 10;\n\tbackground: rgba(0, 0, 0, 0.5);\n\tborder-radius: 8px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground: rgba(0, 0, 0, 1);\n\t}\n`;\n\nexport const NaryNodeList = styled.div<{pointerEvents: string, cursor:string}>`\n\t\tpointer-events: ${p => p.pointerEvents};\n\t\tcursor: ${p => p.cursor};\n\t\twidth:100%;\n\t\theight:100%;\n\t\tbackground-color: yellow;\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: black;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 12px;\n\t\tfont-weight: bold;\n\t`;\n\nexport const Elements = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(256, 256, 256, 0.4), rgba(256, 256, 256, 0.5));\n\t`;\n\nexport const Node = styled.div<{ size: number, pointerEvents: string, cursor:string}>`\n\tposition: 'relative';\n\tpointer-events: ${p => p.pointerEvents};\n\tcursor: ${p => p.cursor};\n\tdisplay:flex;\n\tjustify-content: center;\n\t/*width: ${p => p.size};*/\n\theight:35px;\n`;\n\nexport class NodeWidget extends React.Component<{ size: number, color: string, isSelected: boolean }> {\n\trender() {\n\t\tlet {size, color, isSelected} = this.props;\n\t\treturn (\n\t\t\t<svg width={size} height={size}>\n\t\t\t\t<g id=\"Layer_1\">\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Layer_2\">\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tpoints={\"5,\" + size / 2 + \" \" + size / 2 + \",0\" + \" \" + size + \",\" + size / 2 + \" \" + size / 2 + \",\" + size / 2}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfill: color,\n\t\t\t\t\t\t\tstrokeMiterlimit: 10,\n\t\t\t\t\t\t\tstrokeWidth: 2.5,\n\t\t\t\t\t\t\tstroke: isSelected ? \"rgb(0,192,255)\" : \"#000000\"\n\t\t\t\t\t\t}}/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport class TernaryNodeWidget extends React.Component<TernaryNodeWidgetProps,TernaryNodeWidgetState> {\n\n\tconstructor(props: TernaryNodeWidgetProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbadName: false,\n\t\t\tisDropDownMenu: false,\n\t\t\tcolor: \"rgb(255,255,0)\",\n\t\t\tinputElementTextLength: 0\n\t\t};\n\n\t\tthis.setInputElementTextLength = this.setInputElementTextLength.bind(this);\n\t\tthis.closeDropDown = this.closeDropDown.bind(this);\n\t\tthis.generateFunctionComponent = this.generateFunctionComponent.bind(this);\n\t\tthis.generatePredicateComponent = this.generatePredicateComponent.bind(this);\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.setIsDropDownMenuAccordingBehaviour();\n\t}\n\n\tsetInputElementTextLength(length: number) {\n\t\tthis.setState({inputElementTextLength: length});\n\t}\n\n\n\tsetIsDropDownMenuAccordingBehaviour() {\n\t\tif (!this.props.model.isSelected() && this.state.isDropDownMenu) {\n\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t}\n\t}\n\n\tcloseDropDown() {\n\t\tif (this.state.isDropDownMenu) {\n\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\tthis.props.engine.repaintCanvas();\n\t\t}\n\t}\n\n\tgeneratePredicateComponent(elementName:string){\n\t\treturn <NaryListWidget engine={this.props.engine} model={this.props.model} elementName={elementName} type={PREDICATE} key={elementName}/>\n\t}\n\n\tgenerateFunctionComponent(elementName:string){\n\t\treturn <NaryListWidget engine={this.props.engine} model={this.props.model} elementName={elementName} type={FUNCTION} key={elementName}/>\n\t}\n\n\tgetWidestElement(): number {\n\t\tlet width: number = 3;\n\t\tlet compareWidth: number = getWidestElement(this.state.isDropDownMenu, this.state.inputElementTextLength, this.props.model, width, \"3\", \"2\");\n\n\t\tif (compareWidth > width) {\n\t\t\treturn compareWidth;\n\t\t}\n\n\t\treturn width;\n\t}\n\n\trender() {\n\t\tlet width = this.getWidestElement();\n\t\treturn (\n\t\t\t<Element>\n\t\t\t\t<Node size={this.props.size}\n\t\t\t\t\t  pointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n\t\t\t\t\t  cursor={this.props.model.isEditable() ? \"pointer\" : \"move\"}\n\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t  selectOnlyCurrentGraphElement(this.props.model,this.props.engine);\n\t\t\t\t\t  }}>\n\n\t\t\t\t\t<NodeWidget color={this.state.color} isSelected={this.props.model.isSelected()} size={this.props.size}/>\n\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: this.props.size / 2 - 9,\n\t\t\t\t\t\t\tleft: 50+\"%\",\n\t\t\t\t\t\t\tmarginLeft: -35+\"px\",\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(0)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Prvý parameter\"}/>\n\t\t\t\t\t</PortWidget>\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tright: 50+\"%\",\n\t\t\t\t\t\t\tmarginRight: -38+\"px\",\n\t\t\t\t\t\t\ttop: this.props.size / 2 - 10,\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(1)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Druhý parameter\"}/>\n\t\t\t\t\t</PortWidget>\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: -15,\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(2)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Tretí parameter\"}/>\n\t\t\t\t\t</PortWidget>\n\t\t\t\t</Node>\n\t\t\t\t<NaryNodeList pointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n\t\t\t\t\t\t\t  cursor={this.props.model.isEditable() ? \"pointer\" : \"move\"} s>\n\t\t\t\t\t<Elements>\n\t\t\t\t\t\t<ElementContainer>\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getPredicates()), this.generatePredicateComponent)}\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getFunctions()), this.generateFunctionComponent)}\n\t\t\t\t\t\t\t<PortWidget engine={this.props.engine}\n\t\t\t\t\t\t\t\t\t\tport={this.props.model.getAppendPort()}>\n\t\t\t\t\t\t\t<PortClassic title={\"Otvoriť/zatvoriť rozbaľovaciu ponuku\"} onClick={() => {\n\t\t\t\t\t\t\t\tif (this.state.isDropDownMenu) {\n\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: true});\n\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t height={20}\n\t\t\t\t\t\t\t\t\t\t width={this.props.model.getOptions().name ? 0 : 20}>{this.state.isDropDownMenu ? ADDPORTSELECTED : ADDPORT}</PortClassic>\n\t\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t</ElementContainer>\n\t\t\t\t\t</Elements>\n\t\t\t\t</NaryNodeList>\n\t\t\t\t{(this.state.isDropDownMenu && this.props.model.isSelected()) ?\n\t\t\t\t\t<DropDownMenuWidget widthOfInputElement={width}\n\t\t\t\t\t\t\t\t\t\tsetStateInputElementTextLength={this.setInputElementTextLength}\n\t\t\t\t\t\t\t\t\t\tmodel={this.props.model}\n\t\t\t\t\t\t\t\t\t\tengine={this.props.engine} modelName={this.props.model.getNodeName()}\n\t\t\t\t\t\t\t\t\t\tarity={\"3\"}\n\t\t\t\t\t\t\t\t\t\tcloseDropDown={this.closeDropDown}/> : null\n\t\t\t\t}\n\t\t\t</Element>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { QuaternaryNodeModel } from './QuaternaryNodeModel';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport {ElementContainer} from \"../../labels/binary/BinaryLabelWidget\";\nimport _ from \"lodash\";\nimport {Port as PortClassic} from \"../unbinary/UnBinaryPortLabelWidget\";\nimport {ADDPORT, ADDPORTSELECTED, FUNCTION, PREDICATE} from \"../ConstantNames\";\nimport {DropDownMenuWidget} from \"../DropDownMenuWidget\";\nimport {NaryNodeList} from \"../ternary/TernaryNodeWidget\";\nimport {NaryListWidget} from \"../NaryListWidget\";\nimport {getWidestElement, selectOnlyCurrentGraphElement} from '../functions';\n\nexport interface QuaternaryNodeWidgetProps {\n\tmodel: QuaternaryNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\ninterface QuaternaryNodeWidgetState {\n\tnodeName?:string;\n\tbadName?:boolean;\n\tcolor?:any;\n\tisDropDownMenu?:boolean;\n\tinputElementTextLength?:number;\n}\n\nexport const Element = styled.div`\n\tdisplay: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nexport const Elements = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(256, 256, 256, 0.4), rgba(256, 256, 256, 0.5));\n\t`;\n\n\nexport const Port = styled.div`\n\twidth: 16px;\n\theight: 16px;\n\tz-index: 10;\n\tbackground: rgba(0, 0, 0, 0.5);\n\tborder-radius: 8px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground: rgba(0, 0, 0, 1);\n\t}\n`;\n\nexport const Node = styled.div<{ size: number, pointerEvents: string, cursor:string}>`\n\tposition: 'relative';\n\tpointer-events: ${p => p.pointerEvents};\n\tcursor: ${p => p.cursor};\n\tdisplay:flex;\n\tjustify-content: center;\n\theight: 60px;\n`;\n\nexport class NodeWidget extends React.Component<{ size: number, color: string, isSelected: boolean }> {\n\trender() {\n\t\tlet {size, color, isSelected} = this.props;\n\t\treturn (\n\t\t\t<svg width={size} height={size}>\n\t\t\t\t<g id=\"Layer_1\">\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Layer_2\">\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tpoints={\"10,\" + this.props.size / 2 + \" \" + this.props.size / 2 + \",10\" + \" \" + (this.props.size-10) + \",\" + this.props.size / 2 + \" \" + this.props.size / 2 + \",\" + (this.props.size -10)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfill: color,\n\t\t\t\t\t\t\tstrokeMiterlimit: 10,\n\t\t\t\t\t\t\tstrokeWidth: 2.5,\n\t\t\t\t\t\t\tstroke: isSelected ? \"rgb(0,192,255)\" : \"#000000\"\n\t\t\t\t\t\t}}/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport class QuaternaryNodeWidget extends React.Component<QuaternaryNodeWidgetProps,QuaternaryNodeWidgetState> {\n\n\tconstructor(props: QuaternaryNodeWidgetProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbadName: false,\n\t\t\tisDropDownMenu: false,\n\t\t\tcolor: \"rgb(255,255,0)\",\n\t\t\tinputElementTextLength: 0\n\t\t};\n\n\t\tthis.setInputElementTextLength = this.setInputElementTextLength.bind(this);\n\t\tthis.closeDropDown = this.closeDropDown.bind(this);\n\t\tthis.generateFunctionComponent = this.generateFunctionComponent.bind(this);\n\t\tthis.generatePredicateComponent = this.generatePredicateComponent.bind(this);\n\t}\n\n\n\tcomponentDidUpdate(): void {\n\t\tthis.setIsDropDownMenuAccordingBehaviour();\n\t}\n\n\tsetInputElementTextLength(length: number) {\n\t\tthis.setState({inputElementTextLength: length});\n\t}\n\n\n\tsetIsDropDownMenuAccordingBehaviour() {\n\t\tif (!this.props.model.isSelected() && this.state.isDropDownMenu) {\n\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t}\n\t}\n\n\tsetColor(color: any) {\n\t\tthis.setState({color: color});\n\t}\n\n\tcloseDropDown() {\n\t\tif (this.state.isDropDownMenu) {\n\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\tthis.props.model.setLocked(false);\n\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\tthis.props.engine.repaintCanvas();\n\t\t}\n\t}\n\n\tgeneratePredicateComponent(elementName:string){\n\t\treturn <NaryListWidget engine={this.props.engine} model={this.props.model} elementName={elementName} type={PREDICATE} key={elementName}/>\n\t}\n\n\tgenerateFunctionComponent(elementName:string){\n\t\treturn <NaryListWidget engine={this.props.engine} model={this.props.model} elementName={elementName} type={FUNCTION} key={elementName}/>\n\t}\n\n\tgetWidestElement(): number {\n\t\tlet width: number = 3;\n\t\tlet compareWidth: number = getWidestElement(this.state.isDropDownMenu, this.state.inputElementTextLength, this.props.model, width, \"4\", \"3\");\n\n\t\tif (compareWidth > width) {\n\t\t\treturn compareWidth;\n\t\t}\n\n\t\treturn width;\n\t}\n\trender() {\n\t\tlet width = this.getWidestElement();\n\t\treturn (\n\t\t\t<Element>\n\t\t\t\t<Node size={this.props.size}\n\t\t\t\t\t  pointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n\t\t\t\t\t  cursor={this.props.model.isEditable() ? \"pointer\" : \"move\"}\n\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t  selectOnlyCurrentGraphElement(this.props.model,this.props.engine);\n\t\t\t\t\t  }}>\n\n\t\t\t\t\t<NodeWidget size={this.props.size} color={this.state.color} isSelected={this.props.model.isSelected()}/>\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: this.props.size / 2 - 9,\n\t\t\t\t\t\t\tleft: 50+\"%\",\n\t\t\t\t\t\t\tmarginLeft: -32+\"px\",\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(0)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Prvý parameter\"} />\n\t\t\t\t\t</PortWidget>\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: this.props.size - 8,\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(1)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Druhý parameter\"} />\n\t\t\t\t\t</PortWidget>\n\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tright: 50+\"%\",\n\t\t\t\t\t\t\tmarginRight: -32+\"px\",\n\t\t\t\t\t\t\ttop: this.props.size / 2 - 9,\n\t\t\t\t\t\t\tposition: 'absolute'\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(2)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Tretí parameter\"} />\n\t\t\t\t\t</PortWidget>\n\t\t\t\t\t<PortWidget\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: -8,\n\t\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tport={this.props.model.getPortByIndex(3)}\n\t\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t\t<Port title={\"Štvrtý parameter\"} />\n\t\t\t\t\t</PortWidget>\n\n\t\t\t\t</Node>\n\t\t\t\t<NaryNodeList pointerEvents={this.props.model.isEditable() ? \"auto\" : \"none\"}\n\t\t\t\t\t\t\t  cursor={this.props.model.isEditable() ? \"pointer\" : \"move\"} s>\n\t\t\t\t\t<Elements>\n\t\t\t\t\t\t<ElementContainer>\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getPredicates()), this.generatePredicateComponent)}\n\t\t\t\t\t\t\t{_.map(Array.from(this.props.model.getFunctions()), this.generateFunctionComponent)}\n\t\t\t\t\t\t\t<PortWidget engine={this.props.engine}\n\t\t\t\t\t\t\t\t\t\tport={this.props.model.getAppendPort()}>\n\t\t\t\t\t\t\t\t<PortClassic title={\"Otvoriť/zatvoriť rozbaľovaciu ponuku\"} onClick={() => {\n\t\t\t\t\t\t\t\t\tif (this.state.isDropDownMenu) {\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: false});\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.getModel().clearSelection();\n\t\t\t\t\t\t\t\t\t\tthis.props.model.setSelected(true);\n\t\t\t\t\t\t\t\t\t\tthis.setState({isDropDownMenu: true});\n\t\t\t\t\t\t\t\t\t\tthis.props.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t height={20}\n\t\t\t\t\t\t\t\t\t\t\t width={this.props.model.getOptions().name ? 0 : 20}>{this.state.isDropDownMenu ? ADDPORTSELECTED : ADDPORT}</PortClassic>\n\t\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t</ElementContainer>\n\t\t\t\t\t</Elements>\n\t\t\t\t</NaryNodeList>\n\t\t\t\t{(this.state.isDropDownMenu && this.props.model.isSelected()) ?\n\t\t\t\t\t<DropDownMenuWidget widthOfInputElement={width}\n\t\t\t\t\t\t\t\t\t\tsetStateInputElementTextLength={this.setInputElementTextLength}\n\t\t\t\t\t\t\t\t\t\tmodel={this.props.model}\n\t\t\t\t\t\t\t\t\t\tengine={this.props.engine} modelName={this.props.model.getNodeName()}\n\t\t\t\t\t\t\t\t\t\tarity={\"4\"}\n\t\t\t\t\t\t\t\t\t\tcloseDropDown={this.closeDropDown}/> : null\n\t\t\t\t}\n\t\t\t</Element>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport {Node as UnbinaryNode, Ports as UnbinaryPorts, PortsContainer as UnbinaryPortsContainer, Title as UnbinaryTittle, TitleName as UnbinaryTittleName} from \"../nodes/unbinary/UnBinaryNodeWidget\";\nimport {Port as UnbinaryPort} from \"../nodes/unbinary/UnBinaryPortLabelWidget\";\nimport {Node as ConstantNode, Title as ConstantTitle, TitleName as ConstantTitleName} from \"../nodes/constant/ConstantNodeWidget\";\nimport {Node as QuaternaryNode} from \"../nodes/quaternary/QuaternaryNodeWidget\";\nimport {Node as TernaryNode} from \"../nodes/ternary/TernaryNodeWidget\";\nimport {ADDPORT} from \"../nodes/ConstantNames\";\nimport {NodeWidget as NodeWidgetForTernary} from \"../nodes/ternary/TernaryNodeWidget\";\nimport {NodeWidget as NodeWidgetForQuaternary} from \"../nodes/quaternary/QuaternaryNodeWidget\";\n\nexport const UnbinaryIcon = () =>{\n    return(\n        <UnbinaryNode style={{pointerEvents:\"none\"}}>\n            <UnbinaryTittle>\n                <UnbinaryTittleName>\n                    Node\n                </UnbinaryTittleName>\n            </UnbinaryTittle>\n\n            <UnbinaryPorts>\n            <UnbinaryPortsContainer>\n                <UnbinaryPort>{ADDPORT}</UnbinaryPort>\n            </UnbinaryPortsContainer>\n        </UnbinaryPorts>\n        </UnbinaryNode>\n    )\n};\n\nexport const ConstantIcon = () =>{\n    return(\n        <ConstantNode style={{pointerEvents:\"none\"}}>\n            <ConstantTitle>\n                <ConstantTitleName>\n                    Const\n                </ConstantTitleName>\n            </ConstantTitle>\n        </ConstantNode>\n    )\n};\n\nexport const TernaryIcon = () =>{\n    let size = 50;\n    return(\n        <TernaryNode size={size}>\n            <NodeWidgetForTernary size={size} color={\"rgb(255,255,0)\"} isSelected={false}/>\n        </TernaryNode>\n    )\n};\n\nexport const QuaternaryIcon = () =>{\n    let size = 50;\n    return(\n        <QuaternaryNode size={50}>\n            <NodeWidgetForQuaternary size={size} color={\"rgb(255,255,0)\"} isSelected={false}/>\n        </QuaternaryNode>\n    )\n};\n\n","import * as React from 'react';\nimport { TrayWidget } from './TrayWidget';\nimport {ItemWidgetIcon} from './TrayItemWidget';\nimport { CanvasWidget} from '@projectstorm/react-canvas-core';\nimport { MainCanvasWidget} from './MainCanvasWidget';\nimport styled from '@emotion/styled';\nimport {UnBinaryNodeModel} from \"../nodes/unbinary/UnBinaryNodeModel\";\nimport {ConstantNodeModel} from \"../nodes/constant/ConstantNodeModel\";\nimport {QuaternaryNodeModel} from \"../nodes/quaternary/QuaternaryNodeModel\";\nimport {TernaryNodeModel} from \"../nodes/ternary/TernaryNodeModel\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Button} from 'react-bootstrap';\nimport {ConstantIcon, QuaternaryIcon, TernaryIcon, UnbinaryIcon} from \"./TrayItemWidgetIcon\";\nimport {importDiagramState} from \"../../redux/actions\";\nimport {CONSTANTNODE, QUATERNARYNODE, TERNARYNODE, UNBINARYNODE} from \"../nodes/ConstantNames\";\nimport { NodeModel } from '@projectstorm/react-diagrams';\nimport {BinaryLabelModel} from \"../labels/binary/BinaryLabelModel\";\n\nexport interface BodyWidgetProps {\n\tsyncDiagram:any;\n\taddDomainNode:any;\n\taddConstantNode:any;\n\taddTernaryNode:any;\n\taddQuaternaryNode:any;\n\trenameDomainNode:any;\n\trenameConstantNode:any;\n\tremoveDomainNode:any;\n\tremoveConstantNode:any;\n\tremoveTernaryNode:any;\n\tremoveQuaternaryNode:any;\n\taddUnaryPredicate:any;\n\taddUnaryFunction:any;\n\taddBinaryPredicate:any;\n\taddBinaryFunction:any;\n\taddTernaryPredicate:any;\n\taddTernaryFunction:any;\n\taddQuaternaryPredicate:any;\n\tremoveUnaryPredicate:any;\n\tremoveUnaryFunction:any;\n\tremoveBinaryPredicate:any;\n\tremoveBinaryFunction:any;\n\tremoveTernaryPredicate:any;\n\tremoveTernaryFunction:any;\n\tremoveQuaternaryPredicate:any;\n\ttoggleEditableNodes:any;\n\tsetConstantValueFromLink:any;\n\tchangeDirectionOfBinaryRelation:any;\n\tdiagramState:any;\n\tstore:any;\n}\n\n\texport const Body = styled.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t`;\n\n\texport const Content = styled.div`\n\t\tdisplay: flex;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const Layer = styled.div`\n\t\tposition: relative;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const ModeElement = styled.div`\n\tdisplay:flex;\n\tflex-direction:row;\n\t\n\t`;\n\n\n\tfunction getAvailableCount(nodeType:string,diagramState:any):number {\n\t\tlet nodeCount:number = 0;\n\t\tlet name: string;\n\t\tlet state:Map<string,object>;\n\t\tif (nodeType === 'unbinary') {\n\t\t\tstate = diagramState.domainNodes;\n\t\t\tname = UNBINARYNODE;\n\t\t\t}\n\n\t\telse if(nodeType === 'constant'){\n\t\t\tstate = diagramState.constantNodes;\n\t\t\tname = CONSTANTNODE;\n\t\t}\n\n\t\telse if(nodeType === 'ternary'){\n\t\t\tstate = diagramState.ternaryNodes;\n\t\t\tname = TERNARYNODE;\n\t\t}\n\n\t\telse{\n\t\t\tstate = diagramState.quaternaryNodes;\n\t\t\tname = QUATERNARYNODE;\n\t\t}\n\n\t\twhile(state.has(name+nodeCount)){\n\t\t\tnodeCount++;\n\t\t}\n\t\treturn nodeCount;\n\t}\n\n\tfunction createNode(element:any,event:any,reduxProps:any,clicked:boolean=true) {\n\t\tlet data;\n\t\tif (clicked) {\n\t\t\tdata = JSON.parse(event);\n\t\t} else {\n\t\t\tdata = JSON.parse(event.dataTransfer.getData('storm-graph_view-node'));\n\t\t}\n\n\t\tlet nodesCount = getAvailableCount(data.type,element.props.diagramState);\n\n\t\tlet node: any;\n\t\tif (data.type === 'unbinary') {\n\t\t\tnode = new UnBinaryNodeModel(UNBINARYNODE + nodesCount, 'rgb(92,192,125)', reduxProps);\n\t\t\treduxProps.addDomainNode(node.getOptions().name,node);\n\n\t\t} else if (data.type === 'constant') {\n\t\t\tnode = new ConstantNodeModel(CONSTANTNODE + nodesCount, 'rgb(92,192,125)', reduxProps);\n\t\t\treduxProps.addConstantNode(node.getOptions().name,node);\n\t\t}\n\n\t\telse if(data.type === 'ternary'){\n\t\t\tnode = new TernaryNodeModel({name:TERNARYNODE+nodesCount,reduxProps:reduxProps,numberOfPorts:3});\n\t\t\treduxProps.addTernaryNode(node.getOptions().name,node);\n\t\t}\n\n\t\telse if (data.type === 'quaternary') {\n\t\t\tnode = new QuaternaryNodeModel({name:QUATERNARYNODE+nodesCount,reduxProps:reduxProps,numberOfPorts:4});\n\t\t\treduxProps.addQuaternaryNode(node.getOptions().name,node);\n\t\t}\n\n\t\telse {\n\t\t\tthrow new Error(\"Node cannot be null, possible leak of unknown type\");\n\t\t}\n\n\t\tlet point;\n\n\t\tlet diagramEngine = element.props.diagramState.diagramEngine;\n\n\t\tif (clicked) {\n\t\t\tlet canvasWidth = diagramEngine.getCanvas().clientWidth;\n\t\t\tlet canvasHeight = diagramEngine.getCanvas().clientHeight;\n\t\t\tpoint = {x: Math.random()*(canvasWidth-canvasWidth*0.2)+canvasWidth*0.05, y: Math.random()*(canvasHeight-canvasHeight*0.2)+canvasHeight*0.05};\n\t\t} else {\n\t\t\tpoint = diagramEngine.getRelativeMousePoint(event);\n\t\t}\n\n\t\tnode.setPosition(point);\n\t\tdiagramEngine.getModel().addNode(node);\n\t\telement.forceUpdate();\n\t}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps,any> {\n\tbody: any;\n\treduxProps: any;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.focusOnBodyElement = this.focusOnBodyElement.bind(this);\n\t\tthis.clearGraphSelection = this.clearGraphSelection.bind(this);\n\n\t\tthis.reduxProps = {\n\t\t\t\"addDomainNode\": this.props.addDomainNode,\n\t\t\t\"addConstantNode\": this.props.addConstantNode,\n\t\t\t\"addTernaryNode\": this.props.addTernaryNode,\n\t\t\t\"addQuaternaryNode\": this.props.addQuaternaryNode,\n\t\t\t\"renameDomainNode\": this.props.renameDomainNode,\n\t\t\t\"removeDomainNode\": this.props.removeDomainNode,\n\t\t\t\"renameConstantNode\": this.props.renameConstantNode,\n\t\t\t\"removeConstantNode\": this.props.removeConstantNode,\n\t\t\t\"removeTernaryNode\": this.props.removeTernaryNode,\n\t\t\t\"removeQuaternaryNode\": this.props.removeQuaternaryNode,\n\t\t\t\"addUnaryPredicate\": this.props.addUnaryPredicate,\n\t\t\t\"addUnaryFunction\": this.props.addUnaryFunction,\n\t\t\t\"addBinaryPredicate\": this.props.addBinaryPredicate,\n\t\t\t\"addBinaryFunction\" : this.props.addBinaryFunction,\n\t\t\t\"addTernaryPredicate\": this.props.addTernaryPredicate,\n\t\t\t\"addTernaryFunction\" : this.props.addTernaryFunction,\n\t\t\t\"addQuaternaryPredicate\": this.props.addQuaternaryPredicate,\n\t\t\t\"removeUnaryPredicate\": this.props.removeUnaryPredicate,\n\t\t\t\"removeUnaryFunction\": this.props.removeUnaryFunction,\n\t\t\t\"removeBinaryPredicate\": this.props.removeBinaryPredicate,\n\t\t\t\"removeBinaryFunction\" : this.props.removeBinaryFunction,\n\t\t\t\"removeTernaryPredicate\" : this.props.removeTernaryPredicate,\n\t\t\t\"removeTernaryFunction\" : this.props.removeTernaryFunction,\n\t\t\t\"removeQuaternaryPredicate\": this.props.removeQuaternaryPredicate,\n\t\t\t\"setConstantValueFromLink\": this.props.setConstantValueFromLink,\n\t\t\t\"changeDirectionOfBinaryRelation\": this.props.changeDirectionOfBinaryRelation,\n\t\t\t\"focusOnBodyElement\": this.focusOnBodyElement,\n\t\t\t\"editable\": this.props.diagramState.editableNodes,\n\t\t\t\"store\": this.props.store,\n\t\t};\n\t}\n\n\tcomponentDidMount(): void {\n\t\tif(this.props.diagramState.imported) {\n\t\t\tthis.props.store.dispatch(importDiagramState(this.props.store.getState()));\n\t\t}\n\t\telse{\n\t\t\tthis.props.syncDiagram(this.props,this.focusOnBodyElement);\n\t\t}\n\t\tthis.focusOnBodyElement();\n\t}\n\tcomponentDidUpdate(): void {\n\t\tif(this.props.diagramState.imported){\n\t\t\tthis.props.store.dispatch(importDiagramState({...this.props.store.getState(),...this.reduxProps},this.focusOnBodyElement));\n\t\t\tthis.focusOnBodyElement();\n\t\t}\n\t\tthis.reduxProps[\"editable\"] = this.props.diagramState.editableNodes;\n\t}\n\n\tfocusOnBodyElement(){\n\t\tif(this.body){\n\t\t\tthis.body.focus();\n\t\t}\n\t}\n\n\tclearGraphSelection(){\n\t\tthis.props.diagramState.diagramEngine.getModel().clearSelection();\n\t\tthis.props.diagramState.diagramEngine.repaintCanvas();\n\t}\n\n\trender() {\n\t\tlet editableNodes = this.props.diagramState.editableNodes;\n\t\tlet editableNodesFunction = this.props.toggleEditableNodes;\n\n\t\treturn (\n\t\t\t<Body ref={Body => this.body = Body} tabIndex={1} onKeyPress={(e: any) => {\n\t\t\t\tlet exclude = ['input', 'textarea'];\n\t\t\t\tif (!exclude.includes(e.target.tagName.toLowerCase())) {\n\t\t\t\t\tif (e.key === ';' || e.key === '`') {\n\t\t\t\t\t\teditableNodes ? editableNodesFunction(false) : editableNodesFunction(true);\n\t\t\t\t\t} else if (e.key.toLowerCase() === 'p') {\n\t\t\t\t\t\teditableNodesFunction(false);\n\t\t\t\t\t} else if (e.key.toLowerCase() === 'e') {\n\t\t\t\t\t\teditableNodesFunction(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\t\t  onKeyDown={(e:any) => {\n\t\t\t\t\t  if (e.key === \"Escape\") {\n\t\t\t\t\t\t this.clearGraphSelection();\n\t\t\t\t\t  }\n\t\t\t\t\t  else if(e.key === \"Backspace\"){\n\t\t\t\t\t  \tif(this.props.diagramState.diagramEngine.getModel().getSelectedEntities().length>0){\n\t\t\t\t\t\t\tlet exclude = ['input', 'textarea'];\n\t\t\t\t\t\t\tif (!exclude.includes(e.target.tagName.toLowerCase())) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t  }\n\t\t\t\t  }}\n\t\t\t>\n\t\t\t\t<Content>\n\t\t\t\t\t<TrayWidget>\n\t\t\t\t\t\t<ModeElement>\n\t\t\t\t\t\t<Button title={\"Pohyb po grafe (P)\"} variant={\"outline-primary\"}\n\t\t\t\t\t\t\t\tclassName={editableNodes ? \"\" : \"active\"} onClick={() => {\n\t\t\t\t\t\t\teditableNodesFunction(false)\n\t\t\t\t\t\t}}><FontAwesome name={\"fas fa-arrows-alt\"}/></Button>\n\t\t\t\t\t\t<Button title={\"Editovanie grafu (E)\"} variant={\"outline-primary\"}\n\t\t\t\t\t\t\t\tclassName={editableNodes ? \"active\" : \"\"} onClick={() => {\n\t\t\t\t\t\t\teditableNodesFunction(true)\n\t\t\t\t\t\t}}><FontAwesome name={\"fas fa-edit\"}/></Button>\n\t\t\t\t\t\t</ModeElement>\n\n\t\t\t\t\t\t<ItemWidgetIcon model={{type: 'unbinary'}} clickFunction={createNode} element={this}\n\t\t\t\t\t\t\t\t\t\tname=\"Pridaj unárny/binárny\" color=\"rgb(125,192,125)\"\n\t\t\t\t\t\t\t\t\t\treduxProps={this.reduxProps}\n\t\t\t\t\t\t\t\t\t\ttitle={\"Pridať vrchol, ktorý predstavuje prvok domény. Tomuto prvku je možné následne pridať unárne predikáty a vytvarať binárne väzby\"}\n\t\t\t\t\t\t\t\t\t\tchildren={<UnbinaryIcon/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ItemWidgetIcon model={{type: 'constant'}} clickFunction={createNode} element={this}\n\t\t\t\t\t\t\t\t\t\tname=\"Pridaj konštantu\" color=\"rgb(125,192,125)\"\n\t\t\t\t\t\t\t\t\t\treduxProps={this.reduxProps}\n\t\t\t\t\t\t\t\t\t\ttitle={\"Pridať vrchol, ktorý predstavuje konštanty. Vytvorením linky priradíme konštante prvok domény\"}\n\t\t\t\t\t\t\t\t\t\tchildren={<ConstantIcon/>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<ItemWidgetIcon model={{type: 'ternary'}} clickFunction={createNode} element={this}\n\t\t\t\t\t\t\t\t\t\tname= \"Pridaj ternárny\" color=\"rgb(128,96,245)\"\n\t\t\t\t\t\t\t\t\t\treduxProps={this.reduxProps}\n\t\t\t\t\t\t\t\t\t\ttitle={\"Pridať vrchol, ktorý predstavuje ternárny vzťah pre predikáty a binárny vzťah pre funkcie\"}\n\t\t\t\t\t\t\t\t\t\tchildren={<TernaryIcon/>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<ItemWidgetIcon model={{type: 'quaternary'}} clickFunction={createNode} element={this}\n\t\t\t\t\t\t\t\t\t\tname=\"Pridaj štvornárny\" color=\"rgb(128,96,245)\"\n\t\t\t\t\t\t\t\t\t\treduxProps={this.reduxProps}\n\t\t\t\t\t\t\t\t\t\ttitle={\"Pridať vrchol, ktorý predstavuje quaternárny vzťah pre predikáty a ternárny vzťah pre funkcie\"}\n\t\t\t\t\t\t\t\t\t\tchildren={<QuaternaryIcon/>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</TrayWidget>\n\t\t\t\t\t<Layer\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tcreateNode(this, event, this.reduxProps, false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MainCanvasWidget>\n\t\t\t\t\t\t\t<CanvasWidget engine={this.props.diagramState.diagramEngine}/>\n\t\t\t\t\t\t</MainCanvasWidget>\n\t\t\t\t\t</Layer>\n\t\t\t\t</Content>\n\t\t\t</Body>\n\t\t);\n\t}\n}\n","import {\n  lockConstantValue,\n  lockDomain,\n  lockFunctionValue,\n  lockPredicateValue,\n  setConstantValue,\n  setFunctionValueTable,\n  setFunctionValueText,\n  setPredicateValueTable,\n  setPredicateValueText,\n  toggleDatabase,\n  toggleTable,\n  renameDomainNode,\n  syncDiagram,\n  addDomainNode,\n  removeDomainNode,\n  addConstantNode,\n  removeConstantNode,\n  addUnaryPredicate,\n  removeUnaryPredicate,\n  toggleEditableNodes,\n  renameConstantNode,\n  setConstantValueFromLink,\n  addBinaryPredicate,\n  removeBinaryPredicate,\n  changeDirectionOfBinaryRelation,\n  addUnaryFunction,\n  removeUnaryFunction,\n  addTernaryNode,\n  addQuaternaryNode,\n  removeTernaryNode,\n  removeQuaternaryNode,\n  addBinaryFunction,\n  addTernaryPredicate,\n  addTernaryFunction,\n  addQuaternaryPredicate,\n  removeTernaryPredicate,\n  removeTernaryFunction,\n  removeQuaternaryPredicate,\n  removeBinaryFunction,\n} from \"../actions\";\nimport {connect} from 'react-redux';\nimport {BodyWidget} from \"../../graph_view/components/BodyWidget\";\nimport {getStructureObject} from \"../selectors/structureObject\";\n\nconst mapStateToProps = (state,ownProps) => ({\n  structure: state.structure,\n  structureObject: getStructureObject(state),\n  diagramState: state.diagramState,\n  store: ownProps.store\n});\n\nconst mapDispatchOnProps = {\n  addDomainNode: addDomainNode,\n  addConstantNode: addConstantNode,\n  addTernaryNode: addTernaryNode,\n  renameDomainNode: renameDomainNode,\n  renameConstantNode: renameConstantNode,\n  removeDomainNode: removeDomainNode,\n  removeConstantNode: removeConstantNode,\n  removeTernaryNode: removeTernaryNode,\n  removeQuaternaryNode: removeQuaternaryNode,\n  addQuaternaryNode: addQuaternaryNode,\n  addUnaryPredicate: addUnaryPredicate,\n  addUnaryFunction: addUnaryFunction,\n  addBinaryPredicate: addBinaryPredicate,\n  addBinaryFunction: addBinaryFunction,\n  addTernaryPredicate: addTernaryPredicate,\n  addTernaryFunction: addTernaryFunction,\n  addQuaternaryPredicate: addQuaternaryPredicate,\n  removeUnaryFunction: removeUnaryFunction,\n  removeUnaryPredicate: removeUnaryPredicate,\n  removeBinaryPredicate: removeBinaryPredicate,\n  removeBinaryFunction: removeBinaryFunction,\n  removeTernaryPredicate: removeTernaryPredicate,\n  removeTernaryFunction: removeTernaryFunction,\n  removeQuaternaryPredicate: removeQuaternaryPredicate,\n  syncDiagram: syncDiagram,\n  setConstantValue: setConstantValue,\n  setPredicateValueText: setPredicateValueText,\n  setPredicateValueTable: setPredicateValueTable,\n  setFunctionValueText: setFunctionValueText,\n  setFunctionValueTable: setFunctionValueTable,\n  toggleTable: toggleTable,\n  toggleDatabase: toggleDatabase,\n  lockDomain: lockDomain,\n  lockConstantValue: lockConstantValue,\n  lockPredicateValue: lockPredicateValue,\n  lockFunctionValue: lockFunctionValue,\n  toggleEditableNodes: toggleEditableNodes,\n  setConstantValueFromLink: setConstantValueFromLink,\n  changeDirectionOfBinaryRelation: changeDirectionOfBinaryRelation\n};\n\nconst DiagramModelContainer = connect(\n   mapStateToProps,\n   mapDispatchOnProps\n)(BodyWidget);\n\nexport default DiagramModelContainer;","import {Col, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport ExpressionsContainer from \"../redux/containers/ExpressionsContainer\";\nimport DiagramModelContainer from \"../redux/containers/DiagramModelContainer\";\n\nimport styles from \"./DiagramSystem.module.css\"\n\nexport class DiagramSystem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        return(\n            <div>\n                <Row className={styles.reactDiagram}>\n                    <Col sm={12} >\n                        <DiagramModelContainer store={this.props.store}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <ExpressionsContainer diagramModel={this.props.diagramModel}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","\nfunction makeCordNodes(diagramState:any) {\n  let nodeState = new Map([[\"domainNodes\", diagramState.domainNodes],[\"constantNodes\", diagramState.constantNodes],[\"ternaryNodes\", diagramState.ternaryNodes],[\"quaternaryNodes\",diagramState.quaternaryNodes]]);\n  let nodesCoords:any = {};\n\n  for(let mapName of nodeState.keys()){\n    for(let [nodeName,nodeObject] of nodeState.get(mapName).entries()){\n      if(!nodesCoords.hasOwnProperty(mapName)){\n        nodesCoords[mapName] = {};\n      }\n      let nodeNameInObject = (mapName === \"domainNodes\" || mapName === \"constantNodes\")?nodeName:nodeObject.getNodeNameCombination();\n      if(nodeNameInObject){\n        nodesCoords[mapName][nodeNameInObject] = {x:nodeObject.position.x,y:nodeObject.position.y};\n      }\n    }\n  }\n  return nodesCoords;\n}\n\nfunction stateToJSON(state: any) {\n  return JSON.stringify({\n    common: state.common,\n    language: state.language,\n    structure: state.structure,\n    expressions: state.expressions,\n    diagramCordState: makeCordNodes(state.diagramState),\n  });\n}\n\nexport { stateToJSON }","import React from 'react';\nimport {Col, Row} from 'react-bootstrap';\nimport {Provider} from 'react-redux';\nimport {clearGraphSelection, importAppState} from \"./redux/actions\";\nimport {DEFAULT_FILE_NAME} from \"./constants\";\nimport MathSystemContainer from './redux/containers/MathSystemContainer';\nimport ButtonToolbarComponent from \"./buttons/ButtonToolbarComponent\";\nimport {DiagramSystem} from \"./graph_view/DiagramSystem\";\nimport { stateToJSON } from './stateToJSON';\n\ninterface AppProps{\n  store:any;\n  teacherMode:boolean;\n  toggleTeacherMode:any;\n}\n\ninterface AppState {\n  modalShow:boolean;\n  diagramToggled:boolean;\n  exerciseName:string;\n}\n\nclass App extends React.Component<AppProps,AppState> {\n  constructor(props:AppProps) {\n    super(props);\n\n    this.state = {\n      modalShow: false,\n      diagramToggled:false,\n      exerciseName:''\n    };\n\n    this.exportState = this.exportState.bind(this);\n    this.importState = this.importState.bind(this);\n    this.setModelShowState = this.setModelShowState.bind(this);\n    this.setDiagramToggledState = this.setDiagramToggledState.bind(this);\n    this.setTeacherModeState = this.setTeacherModeState.bind(this);\n    this.setExerciseNameState = this.setExerciseNameState.bind(this);\n    this.clearGraphSelection = this.clearGraphSelection.bind(this);\n  }\n\n  exportState() {\n    let state = this.props.store.getState();\n    let json = stateToJSON(state);\n\n    return {\n        mime: 'application/json',\n        filename: this.state.exerciseName.length === 0? (DEFAULT_FILE_NAME + '.json'):(this.state.exerciseName+'.json'),\n        contents: json\n    }\n  }\n\n  importState(e:any) {\n    let file = e.target.files[0];\n    let fr = new FileReader();\n\n    let store = this.props.store;\n    fr.onload = function (e) {\n      store.dispatch(importAppState(e.target.result,store.getState().diagramState));\n    };\n    fr.readAsText(file);\n  }\n\n  setModelShowState(bool:boolean){\n    this.setState({modalShow: bool});\n  }\n\n  setDiagramToggledState(bool:boolean){\n    this.setState({diagramToggled: bool});\n  }\n\n  setExerciseNameState(name:string){\n    this.setState({exerciseName:name});\n  }\n\n  setTeacherModeState(){\n    this.props.toggleTeacherMode();\n  }\n\n  clearGraphSelection(){\n    this.props.store.dispatch(clearGraphSelection());\n  }\n\n  render() {\n    return (\n        <Provider store={this.props.store}>\n          <div className='app'>\n            <Row className={'navbar'}>\n                  <ButtonToolbarComponent clearGraphSelection={this.clearGraphSelection} exportState={this.exportState} setExerciseNameState={this.setExerciseNameState} modalShowState={this.state.modalShow} diagramToggledState={this.state.diagramToggled} teacherModeState={this.props.teacherMode} setTeacherModeState={this.setTeacherModeState} setDiagramToggledState={this.setDiagramToggledState} setModelShowState={this.setModelShowState} importState={this.importState}/>\n            </Row>\n              {this.state.diagramToggled?\n                    <DiagramSystem store={this.props.store} diagramModel={this.props.store.getState().diagramState.diagramModel}/>\n                  : <MathSystemContainer diagramModel={this.props.store.getState().diagramState.diagramModel}/>\n              }\n          </div>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {connect} from 'react-redux';\nimport App from \"../../App\";\nimport {toggleTeacherMode} from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n    teacherMode:state.common.teacherMode\n});\n\nconst mapDispatchOnProps = {\n    toggleTeacherMode:toggleTeacherMode\n};\n\nconst AppContainer = connect(\n    mapStateToProps,\n    mapDispatchOnProps\n)(App);\n\nexport default AppContainer;","import {\n    CONSTANT_IN_LANGUAGE,\n    EMPTY_CONSTANT_VALUE, FUNCTION_ALREADY_DEFINED,\n    FUNCTION_IN_LANGUAGE, FUNCTION_NOT_FULL_DEFINED,\n    PREDICATE_IN_LANGUAGE\n} from \"../../../constants/messages\";\n\n\nexport function validateLanguageConstants(state){\n    if(state.constants.errorMessage){\n        return;\n    }\n    state.constants.parsed.forEach(c => {\n        if (state.functions.parsed && state.functions.parsed.some(value => value.name === c)) {\n            state.constants.errorMessage = `${FUNCTION_IN_LANGUAGE} ${c}`;\n            return;\n        }\n        if (state.predicates.parsed && state.predicates.parsed.some(value => value.name === c)) {\n            state.constants.errorMessage = `${PREDICATE_IN_LANGUAGE} ${c}`;\n            return;\n        }\n        if (state.constants.parsed.filter(value => value === c).length > 1) {\n            state.constants.errorMessage = `${CONSTANT_IN_LANGUAGE}  ${c}`;\n            return;\n        }\n    });\n}\n\nexport function validateLanguagePredicates(state){\n    if(state.predicates.errorMessage){\n        return;\n    }\n    state.predicates.parsed.forEach(p => {\n        if (state.constants.parsed && state.constants.parsed.some(value => value === p.name)) {\n            state.predicates.errorMessage = `${CONSTANT_IN_LANGUAGE} ${p.name}`;\n            return;\n        }\n        if (state.functions.parsed && state.functions.parsed.some(value => value.name === p.name)) {\n            state.predicates.errorMessage = `${FUNCTION_IN_LANGUAGE} ${p.name}`;\n            return;\n        }\n        if(state.predicates.parsed.filter(value => value.name === p.name).length > 1){\n            state.predicates.errorMessage = `${PREDICATE_IN_LANGUAGE} ${p.name}`;\n            return;\n        }\n    });\n}\n\nexport function validateLanguageFunctions(state){\n    if(state.functions.errorMessage){\n        return;\n    }\n    state.functions.parsed.forEach(f => {\n        if (state.constants.parsed && state.constants.parsed.some(value => value === f.name)) {\n            state.functions.errorMessage = `${CONSTANT_IN_LANGUAGE} ${f.name}`;\n            return;\n        }\n        if (state.predicates.parsed && state.predicates.parsed.some(value => value.name === f.name)) {\n            state.functions.errorMessage = `${PREDICATE_IN_LANGUAGE} ${f.name}`;\n            return;\n        }\n        if(state.functions.parsed.filter(value => value.name === f.name).length > 1){\n            state.functions.errorMessage = `${FUNCTION_IN_LANGUAGE} ${f.name}`;\n            return;\n        }\n    });\n}\n\nexport function validateStructureConstants(constantName, value, constants, domainValues){\n    if (!constants[constantName]) {\n        throw `Jazyk neobsahuje konštantu ${constantName}`;\n    }\n    if (!domainValues.includes(value)) {\n        throw EMPTY_CONSTANT_VALUE;\n    }\n}\n\nexport function validateStructurePredicates(predicateValues, domainValues, arity){\n    let message = '';\n    predicateValues.forEach(tuple => {\n        if(tuple.length !== parseInt(arity)){\n            message = `N-tica ${tuple} nemá povolený počet prvkov`;\n            return;\n        }\n        if (predicateValues.filter(t => JSON.stringify(t) === JSON.stringify(tuple)).length > 1) {\n            message = `N-tica ${tuple} sa v predikáte už nachádza`;\n            return;\n        }\n        let illegalItems = tuple.filter(t => !domainValues.includes(t));\n        if(illegalItems.length > 0){\n            message = `Prvok ${illegalItems[0]} nie je v doméne štruktúry`;\n            return;\n        }\n    });\n    return message;\n}\n\nexport function validateStructureFunctions(functionValues, domainValues, arity){\n    let message = '';\n    let usedParams = [];\n    arity = parseInt(arity);\n    functionValues.forEach(tuple => {\n        let params = tuple.slice(0, tuple.length - 1); //takes just the arguments of the function\n        let stringParams = params.join(\",\");\n        if(usedParams.includes(stringParams)){\n            message = FUNCTION_ALREADY_DEFINED(params);\n            return;\n        }\n        if(params.length !== arity){\n            message = `Prvok ${tuple.length == 1 ? tuple : `(${tuple})`} nezodpovedá arite funkčného symbolu, prvky interpretácie musia byť ${arity + 1}-tice`;\n            return;\n        }\n        let illegalItems = tuple.filter(t => !domainValues.includes(t));\n        if (illegalItems.length > 0) {\n            message = `Prvok ${illegalItems[0]} nie je v doméne štruktúry`;\n            return;\n        }\n        usedParams.push(stringParams);\n    });\n\n    if(message === '') {\n        if (functionValues.length !== Math.pow(domainValues.length, arity)) {\n            message = FUNCTION_NOT_FULL_DEFINED;\n        }\n    }\n    return message;\n}\n","import Expression from \"../Expression\";\n\n/**\n * Represent simple term.\n * @author Milan Cifra\n * @class\n * @abstract\n *\n */\nclass Term extends Expression {\n\n  /*constructor() {\n    super();\n  }*/\n\n  toString() {\n    return '';\n  }\n\n  createCopy(){\n    return new Term();\n  }\n\n  substitute(_from, _to, _bound){\n    //nothing\n  }\n\n  getVariables(){\n    return [];\n  }\n}\n\nexport default Term;","import Term from \"./Term\";\n\n/**\n * Variable\n * @author Milan Cifra\n * @class\n * @extends Term\n */\nclass Variable extends Term {\n\n  /**\n   *\n   * @param {string} name\n   */\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n\n  /**\n   * Return intepretation of variable.\n   * @param {Structure} structure\n   * @param {Map} e variables valuation\n   * @return {string} domain item\n   */\n  eval(structure, e) {\n    if (!e.has(this.name)) {\n      throw `The variable ${this.name} is free,\n        but it is not assigned any value by the variable assignment 𝑒.`;\n    }\n    return e.get(this.name);\n  }\n\n  /**\n   * Return string representation of variable\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n\n  createCopy(){\n    return new Variable(this.name);\n  }\n\n  substitute(from, to, bound){\n    if (this.name === from) {\n      if (bound && bound.has(to)) {\n        throw `The variable ${to} cannot be substituted\n          for the variable ${this.name} occuring\n          in the scope of a quantifier that binds ${to}.`;\n      }\n      return new Variable(to);\n    }\n    return this.createCopy();\n  }\n\n  getVariables(){\n    return [this.name];\n  }\n}\n\nexport default Variable;","import Term from \"./Term\";\n\n/**\n * Constant\n * @author Milan Cifra\n * @class\n * @extends Term\n */\nclass Constant extends Term {\n\n  /**\n   *\n   * @param {string} name Name of the constant\n   */\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n\n  /**\n   * Return intepretation of the constant\n   * @param {Structure} structure Structure\n   * @param {Map} e variables valuation\n   * @return {string} domain item\n   */\n  eval(structure, e) {\n    if (structure.iConstant.get(this.name) === undefined ||\n        structure.iConstant.get(this.name) === null ||\n        structure.iConstant.get(this.name) === '') {\n      throw `The interpretation of the constant ${this.name} is not defined`;\n    }\n    return structure.iConstant.get(this.name);\n  }\n\n  /**\n   * Return string representation of constant\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n\n  createCopy(){\n    return new Constant(this.name);\n  }\n\n  substitute(_from, _to, _bound){\n    return this.createCopy();\n  }\n\n  getVariables(){\n    return [this.name];\n  }\n\n}\n\nexport default Constant;","import Term from \"./Term\";\n\n/**\n * Represent function term\n * @author Milan Cifra\n * @class\n * @extends Term\n */\nclass FunctionTerm extends Term {\n\n  /**\n   *\n   * @param {string} name name of the function\n   * @param {Term[]} terms parameters of function\n   */\n  constructor(name, terms) {\n    super();\n    this.name = name;\n    this.terms = terms;\n  }\n\n  /**\n   * Return intepretation of function.\n   * @param {Structure} structure\n   * @param {Map} e variables valuation\n   * @returns {string} domain item\n   */\n  eval(structure, e) {\n    let interpretedParams = [];\n    this.terms.forEach(term => {\n      interpretedParams.push(term.eval(structure, e));\n    });\n    if (!structure.iFunction.get(this.name + '/' + structure.language.functions.get(this.name))[JSON.stringify(interpretedParams)]) {\n      throw `The interpretation of the function symbol ${this.name} for ${interpretedParams.length > 1 ? `(${interpretedParams})` : interpretedParams} is not defined`;\n    }\n    return structure.iFunction.get(this.name + '/' + structure.language.functions.get(this.name))[JSON.stringify(interpretedParams)];\n  }\n\n  /**\n   * Return string representation of function term\n   * @returns {string}\n   */\n  toString() {\n    let res = this.name + '(';\n    for (let i = 0; i < this.terms.length; i++) {\n      if (i > 0) {\n        res += ', ';\n      }\n      res += this.terms[i].toString();\n    }\n    res += ')';\n    return res;\n  }\n\n  createCopy(){\n    return new FunctionTerm(this.name, this.terms.map( (term) => term.createCopy() ));\n  }\n\n  substitute(from, to, bound){\n    return new FunctionTerm(this.name, this.terms.map( (term) => term.substitute(from, to, bound) ));\n  }\n\n  getVariables(){\n    return this.terms.flatMap(term => term.getVariables());\n  }\n}\n\nexport default FunctionTerm;","import Formula from \"./Formula\";\nimport {ATOM} from \"../../constants/gameConstants\";\n\n/**\n * Represent equality symbol\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass EqualityAtom extends Formula {\n\n  /**\n   *\n   * @param {Term} subLeft\n   * @param {Term} subRight\n   */\n  constructor(subLeft, subRight) {\n    super();\n    this.subLeft = subLeft;\n    this.subRight = subRight;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    return this.subLeft.eval(structure, e) == this.subRight.eval(structure, e);\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.subLeft.toString()} = ${this.subRight.toString()}`;\n  }\n\n  createCopy(){\n    return new EqualityAtom(this.subLeft.createCopy(), this.subRight.createCopy());\n  }\n\n  getType(commitment){\n    return ATOM;\n  }\n\n  getSubFormulas(){\n    return [];\n  }\n\n  substitute(from, to, bound){\n    return new EqualityAtom(this.subLeft.substitute(from, to, bound), this.subRight.substitute(from, to, bound));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [];\n  }\n\n  getVariables(){\n    return this.subLeft.getVariables().concat(this.subRight.getVariables());;\n  }\n}\n\nexport default EqualityAtom;","import Formula from \"./Formula\";\nimport {GAME_OPERATOR} from \"../../constants/gameConstants\";\n\n/**\n * Represent negation\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass Negation extends Formula {\n\n  /**\n   *\n   * @param {Formula} subFormula\n   */\n  constructor(subFormula) {\n    super();\n    this.subFormula = subFormula;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    return !this.subFormula.eval(structure, e);\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `¬${this.subFormula.toString()}`;\n  }\n\n  createCopy(){\n    return new Negation(this.subFormula.createCopy());\n  }\n\n  getType(commitment){\n    return GAME_OPERATOR;\n  }\n\n  getSubFormulas(){\n    return [this.subFormula];\n  }\n\n  substitute(from, to, bound){\n    return new Negation(this.subFormula.substitute(from, to, bound));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [!commitment];\n  }\n\n  getVariables(){\n    return this.subFormula.getVariables();\n  }\n}\n\nexport default Negation;","import Formula from \"./Formula\";\nimport {GAME_OPERATOR, PLAYER_OPERATOR} from \"../../constants/gameConstants\";\n\n/**\n * Represent conjunction\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass Conjunction extends Formula {\n\n  /**\n   *\n   * @param {Formula} subLeft\n   * @param {Formula} subRight\n   */\n  constructor(subLeft, subRight) {\n    super();\n    this.subLeft = subLeft;\n    this.subRight = subRight;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e variables valuation\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    const left = this.subLeft.eval(structure, e);\n    const right = this.subRight.eval(structure, e);\n    return left && right;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.subLeft.toString()} ∧ ${this.subRight.toString()})`;\n  }\n\n  createCopy(){\n    return new Conjunction(this.subLeft.createCopy(), this.subRight.createCopy());\n  }\n\n  getType(commitment){\n    return commitment ? GAME_OPERATOR : PLAYER_OPERATOR;\n  }\n\n  getSubFormulas(){\n    return [this.subLeft, this.subRight];\n  }\n\n  substitute(from, to, bound){\n    return new Conjunction(this.subLeft.substitute(from, to, bound), this.subRight.substitute(from, to, bound));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [commitment, commitment];\n  }\n\n  getVariables(){\n    return this.subLeft.getVariables().concat(this.subRight.getVariables());\n  }\n}\n\nexport default Conjunction;","import Formula from \"./Formula\";\nimport {GAME_OPERATOR, PLAYER_OPERATOR} from \"../../constants/gameConstants\";\n\n/**\n * Represent disjunction\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass Disjunction extends Formula {\n\n  /**\n   *\n   * @param {Formula} subLeft\n   * @param {Formula} subRight\n   */\n  constructor(subLeft, subRight) {\n    super();\n    this.subLeft = subLeft;\n    this.subRight = subRight;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    const left = this.subLeft.eval(structure, e);\n    const right = this.subRight.eval(structure, e);\n    return left || right;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.subLeft.toString()} ∨ ${this.subRight.toString()})`;\n  }\n\n  createCopy(){\n    return new Disjunction(this.subLeft.createCopy(), this.subRight.createCopy());\n  }\n\n  getType(commitment){\n    return commitment ? PLAYER_OPERATOR : GAME_OPERATOR;\n  }\n\n  getSubFormulas(){\n    return [this.subLeft, this.subRight];\n  }\n\n  substitute(from, to, bound){\n    return new Disjunction(this.subLeft.substitute(from, to, bound), this.subRight.substitute(from, to, bound));\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [commitment, commitment];\n  }\n\n  getVariables(){\n    return this.subLeft.getVariables().concat(this.subRight.getVariables());\n  }\n}\n\nexport default Disjunction;","import Formula from \"./Formula\";\nimport {GAME_QUANTIFIER, PLAYER_QUANTIFIER} from \"../../constants/gameConstants\";\n\n/**\n * Represent existential quantificator\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass ExistentialQuant extends Formula {\n\n  /**\n   *\n   * @param {string} variableName\n   * @param {Formula} subFormula\n   */\n  constructor(variableName, subFormula) {\n    super();\n    this.variableName = variableName;\n    this.subFormula = subFormula;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    let eCopy = new Map(e);\n    for (let item of structure.domain) {\n      eCopy.set(this.variableName, item);\n      if (this.subFormula.eval(structure, eCopy)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `∃${this.variableName} ${this.subFormula.toString()}`;\n  }\n\n  createCopy(){\n    return new ExistentialQuant(this.variableName, this.subFormula.createCopy());\n  }\n\n  getType(commitment){\n    return commitment ? PLAYER_QUANTIFIER : GAME_QUANTIFIER;\n  }\n\n  getSubFormulas(){\n    return [this.subFormula];\n  }\n\n  substitute(from, to, bound) {\n    if (this.variableName !== from) {\n      return new ExistentialQuant(this.variableName, this.subFormula.substitute(from, to, new Set([this.variableName,...(bound ?? [])])));\n    }\n    return this.createCopy();\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [commitment];\n  }\n\n  getVariables(){\n    const variables = this.subFormula.getVariables();\n    variables.push(this.variableName);\n    return variables;\n  }\n}\n\nexport default ExistentialQuant;","import Formula from \"./Formula\";\nimport {GAME_QUANTIFIER, PLAYER_QUANTIFIER} from \"../../constants/gameConstants\";\n\n/**\n * Represent universal quantificator\n * @author Milan Cifra\n * @class\n * @extends Formula\n */\nclass UniversalQuant extends Formula {\n\n  /**\n   *\n   * @param {string} variableName\n   * @param {Formula} subFormula\n   */\n  constructor(variableName, subFormula) {\n    super();\n    this.variableName = variableName;\n    this.subFormula = subFormula;\n  }\n\n  /**\n   *\n   * @param {Structure} structure\n   * @param {Map} e\n   * @return {boolean}\n   */\n  eval(structure, e) {\n    let eCopy = new Map(e);\n    for (let item of structure.domain) {\n      eCopy.set(this.variableName, item);\n      if (!this.subFormula.eval(structure, eCopy)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `∀${this.variableName} ${this.subFormula.toString()}`;\n  }\n\n  createCopy(){\n    return new UniversalQuant(this.variableName, this.subFormula.createCopy());\n  }\n\n  getType(commitment){\n    return commitment ? GAME_QUANTIFIER : PLAYER_QUANTIFIER;\n  }\n\n  getSubFormulas(){\n    return [this.subFormula];\n  }\n\n  substitute(from, to, bound){\n    if (this.variableName !== from) {\n      return new UniversalQuant(this.variableName, this.subFormula.substitute(from, to, new Set([this.variableName,...(bound ?? [])])));\n    }\n    return this.createCopy();\n  }\n\n  getSubFormulasCommitment(commitment){\n    return [commitment];\n  }\n\n  getVariables(){\n    const variables = this.subFormula.getVariables();\n    variables.push(this.variableName);\n    return variables;\n  }\n}\n\nexport default UniversalQuant;","import Formula from \"./Formula\";\nimport {\n    GAME_OPERATOR,\n    PLAYER_OPERATOR\n} from \"../../constants/gameConstants\";\nimport Implication from \"./Formula.Implication\";\n\n/**\n * Represent equality symbol\n * @author Richard Toth\n * @class\n * @extends Formula\n */\nclass Equivalence extends Formula {\n\n    /**\n     *\n     * @param {Formula} subLeft\n     * @param {Formula} subRight\n     */\n    constructor(subLeft, subRight) {\n        super();\n        this.subLeft = subLeft;\n        this.subRight = subRight;\n    }\n\n    /**\n     *\n     * @param {Structure} structure\n     * @param {Map} e\n     * @return {boolean}\n     */\n    eval(structure, e) {\n        const left = this.subLeft.eval(structure, e);\n        const right = this.subRight.eval(structure, e);\n        return left == right;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return `(${this.subLeft.toString()} ↔ ${this.subRight.toString()})`;\n    }\n\n    createCopy(){\n        return new Equivalence(this.subLeft.createCopy(), this.subRight.createCopy());\n    }\n\n    getType(commitment){\n        return commitment ? GAME_OPERATOR : PLAYER_OPERATOR;\n    }\n\n    getSubFormulas(){\n        const toRightImpl = new Implication(this.subLeft, this.subRight);\n        const toLeftImpl = new Implication(this.subRight, this.subLeft);\n        return [toRightImpl, toLeftImpl];\n    }\n\n    substitute(from, to, bound){\n        return new Equivalence(this.subLeft.substitute(from, to, bound), this.subRight.substitute(from, to, bound));\n    }\n\n    getSubFormulasCommitment(commitment){\n        return [commitment, commitment];\n    }\n\n    getVariables(){\n        return this.subLeft.getVariables().concat(this.subRight.getVariables());\n    }\n}\n\nexport default Equivalence;","import {parseConstants, parsePredicates, parseFunctions, parseDomain, parseTuples, parseValuation, parseTerm, parseFormulaWithPrecedence} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport {CONSTANT, PREDICATE, FUNCTION, DOMAIN, VARIABLE, TERM} from \"../../../constants\";\nimport {getLanguageObject} from \"../../selectors/languageObject\";\nimport Variable from \"../../../model/term/Term.Variable\";\nimport Constant from \"../../../model/term/Term.Constant\";\nimport FunctionTerm from \"../../../model/term/Term.FunctionTerm\";\nimport PredicateAtom from \"../../../model/formula/Formula.PredicateAtom\";\nimport EqualityAtom from \"../../../model/formula/Formula.EqualityAtom\";\nimport Negation from \"../../../model/formula/Formula.Negation\";\nimport Conjunction from \"../../../model/formula/Formula.Conjunction\";\nimport Disjunction from \"../../../model/formula/Formula.Disjunction\";\nimport Implication from \"../../../model/formula/Formula.Implication\";\nimport ExistentialQuant from \"../../../model/formula/Formula.ExistentialQuant\";\nimport UniversalQuant from \"../../../model/formula/Formula.UniversalQuant\";\nimport Equivalence from \"../../../model/formula/Formula.Equivalence\";\n\nexport function parseLanguage(state, value, type){\n    state.value = value;\n    state.errorMessage = '';\n    try {\n        switch(type){\n            case CONSTANT:\n                state.parsed = parseConstants(value);\n                break;\n            case PREDICATE:\n                state.parsed = parsePredicates(value);\n                break;\n            case FUNCTION:\n                state.parsed = parseFunctions(value);\n                break;\n        }\n    } catch (e) {\n        state.errorMessage = e.message;\n        return false;\n    }\n    return true;\n}\n\nexport function parseStructure(state, value, wholeState, type){\n    state.value = value;\n    state.errorMessage = '';\n    try {\n        switch(type){\n            case DOMAIN:\n                state.parsed = parseDomain(value);\n                break;\n            case PREDICATE:\n            case FUNCTION:\n                state.parsed = parseTuples(value);\n                break;\n            case VARIABLE:\n                state.parsed = parseValuation(value, getLanguageObject(wholeState).getLanguage());\n                break;\n        }\n    } catch (e) {\n        state.errorMessage = e.message;\n    }\n}\n\nexport function parseExpression(state, value, wholeState, type){\n    let language = getLanguageObject(wholeState);\n    state.value = value;\n    state.errorMessage = '';\n    try {\n        if(type === TERM){\n            const termFactories = getTermFactories(language);\n            state.parsed = parseTerm(value, language.getLanguage(), termFactories);\n        } else {\n            const formulaFactories = getFormulaFactories(language);\n            state.parsed = parseFormulaWithPrecedence(value, language.getLanguage(), formulaFactories);\n        }\n    } catch (e) {\n        state.errorMessage = e.message;\n        state.parsed = null;\n    }\n}\n\nfunction getTermFactories(language){\n    return({\n        variable: (symbol, _) =>\n            new Variable(symbol),\n        constant: (symbol, _) =>\n            new Constant(symbol),\n        functionApplication: (funSymbol, args, ee) => {\n            language.checkFunctionArity(funSymbol, args, ee);\n            return new FunctionTerm(funSymbol, args);\n        }\n    });\n}\n\nfunction getFormulaFactories(language){\n    return({...getTermFactories(language), ...{\n        predicateAtom: (predSymbol, args, ee) => {\n            language.checkPredicateArity(predSymbol, args, ee);\n            return new PredicateAtom(predSymbol, args);\n        },\n        equalityAtom: (lhs, rhs, _) =>\n            new EqualityAtom(lhs, rhs),\n        negation: (formula, _) =>\n            new Negation(formula),\n        conjunction: (lhs, rhs, _) =>\n            new Conjunction(lhs, rhs),\n        disjunction: (lhs, rhs, _) =>\n            new Disjunction(lhs, rhs),\n        implication: (lhs, rhs, _) =>\n            new Implication(lhs, rhs),\n        equivalence: (lhs, rhs, _) =>\n            new Equivalence(lhs, rhs),\n        existentialQuant: (variable, formula, _) =>\n            new ExistentialQuant(variable, formula),\n        universalQuant: (variable, formula, _) =>\n            new UniversalQuant(variable, formula)\n    }});\n}\n\n\n","import {\n  ADD_BINARY_FUNCTION,\n  ADD_BINARY_PREDICATE,\n  ADD_CONSTANT_NODE, ADD_QUATERNARY_PREDICATE, ADD_TERNARY_FUNCTION, ADD_TERNARY_PREDICATE, ADD_UNARY_FUNCTION,\n  ADD_UNARY_PREDICATE,\n  IMPORT_APP,\n  LOCK_CONSTANTS,\n  LOCK_FUNCTIONS, LOCK_LANGUAGE_COMPONENT,\n  LOCK_PREDICATES,\n  REMOVE_CONSTANT_NODE, REMOVE_DOMAIN_NODE,\n  RENAME_CONSTANT_NODE, RENAME_DOMAIN_NODE,\n  SET_CONSTANTS,\n  SET_FUNCTIONS,\n  SET_PREDICATES\n} from \"../actions/action_types\";\nimport {CONSTANT, defaultInputData, FUNCTION, PREDICATE} from \"../../constants\";\nimport {\n  validateLanguageConstants as validateConstants,\n  validateLanguagePredicates as validatePredicates,\n  validateLanguageFunctions as validateFunctions\n} from \"./functions/validation\";\nimport {parseLanguage} from \"./functions/parsers\";\nimport produce from \"immer\";\n\nexport function defaultState(){\n  return{\n    constants: defaultInputData(),\n    predicates: defaultInputData(),\n    functions: defaultInputData(),\n    lockedComponent: false\n  }\n}\n\nconst languageReducer = produce((state, action) => {\n  switch (action.type) {\n    case SET_CONSTANTS:\n      parseLanguage(state.constants, action.value, CONSTANT);\n      validateConstants(state);\n      validateAndParsePredicates(state);\n      validateAndParseFunctions(state);\n      return;\n\n    case SET_PREDICATES:\n      parseLanguage(state.predicates, action.value, PREDICATE);\n      validatePredicates(state);\n      validateAndParseConstants(state);\n      validateAndParseFunctions(state);\n      return;\n\n    case SET_FUNCTIONS:\n      parseLanguage(state.functions, action.value, FUNCTION);\n      validateFunctions(state);\n      validateAndParsePredicates(state);\n      validateAndParseConstants(state);\n      return;\n\n    case ADD_UNARY_PREDICATE:\n      addPredicateLanguageElement(state, action.predicateName, 1);\n      return;\n\n    case ADD_BINARY_PREDICATE:\n      addPredicateLanguageElement(state, action.predicateName, 2);\n      return;\n\n    case ADD_TERNARY_PREDICATE:\n      addPredicateLanguageElement(state, action.predicateName, 3);\n      return;\n\n    case ADD_QUATERNARY_PREDICATE:\n      addPredicateLanguageElement(state, action.predicateName, 4);\n      return;\n\n    case ADD_UNARY_FUNCTION:\n      addFunctionLanguageElement(state, action.functionName, 1);\n      return;\n\n    case ADD_BINARY_FUNCTION:\n      addFunctionLanguageElement(state, action.functionName, 2);\n      return;\n\n    case ADD_TERNARY_FUNCTION:\n      addFunctionLanguageElement(state, action.functionName, 3);\n      return;\n\n    case ADD_CONSTANT_NODE:\n      state.constants.parsed.push(action.nodeName);\n      state.constants.value = state.constants.parsed.join(\", \");\n      validateConstants(state);\n      return;\n\n    case RENAME_DOMAIN_NODE:\n    case REMOVE_DOMAIN_NODE:\n      parseLanguage(state.constants, returnParsedConstValues(state), CONSTANT);\n      validateConstants(state);\n\n      parseLanguage(state.predicates, returnParsedPredValues(state), PREDICATE);\n      validatePredicates(state);\n\n      parseLanguage(state.functions, returnParsedFuncValues(state), FUNCTION);\n      validateFunctions(state);\n\n      return;\n\n    case REMOVE_CONSTANT_NODE:\n      state.constants.parsed = state.constants.parsed.filter(value => value != action.nodeName);\n      state.constants.value = state.constants.parsed.join(\", \");\n      validateConstants(state);\n      return;\n\n    case RENAME_CONSTANT_NODE:\n      state.constants.parsed = state.constants.parsed.map(value => value === action.oldName ? action.newName : value);\n      state.constants.value = state.constants.parsed.join(\", \");\n      validateConstants(state);\n      return;\n\n    case LOCK_CONSTANTS:\n      state.constants.locked = !state.constants.locked;\n      return;\n\n    case LOCK_PREDICATES:\n      state.predicates.locked = !state.predicates.locked;\n      return;\n\n    case LOCK_FUNCTIONS:\n      state.functions.locked = !state.functions.locked;\n      return;\n\n    case LOCK_LANGUAGE_COMPONENT:\n      state.lockedComponent = !state.lockedComponent;\n      return;\n\n    case IMPORT_APP:\n      validateConstants(state);\n      validatePredicates(state);\n      validateFunctions(state);\n      return;\n\n    default:\n      return;\n  }\n})\n\nfunction returnParsedConstValues(state){\n  return state.constants.parsed.join(\", \");\n}\n\nfunction returnParsedPredValues(state){\n  return state.predicates.parsed.map(value => value.name + \"/\" + value.arity).join(\", \");\n}\n\nfunction returnParsedFuncValues(state){\n  return state.functions.parsed.map(value => value.name + \"/\" + value.arity).join(\", \");\n}\n\nfunction addPredicateLanguageElement(state, elementName, elementArity){\n  if(!state.predicates.parsed.some(pred => elementName === pred.name && elementArity === pred.arity)){\n    state.predicates.parsed.push({name: elementName, arity: elementArity});\n    state.predicates.value = state.predicates.parsed.map(value => value.name + \"/\" + value.arity).join(\",\");\n    validatePredicates(state);\n  }\n}\n\nfunction addFunctionLanguageElement(state, elementName, elementArity){\n  if(!state.functions.parsed.some(func => elementName === func.name && elementArity === func.arity)) {\n    state.functions.parsed.push({name: elementName, arity: elementArity});\n    state.functions.value = state.functions.parsed.map(value => value.name + \"/\" + value.arity).join(\",\");\n    validateFunctions(state);\n  }\n}\n\nfunction validateAndParseConstants(state) {\n  if(parseLanguage(state.constants, state.constants.value, CONSTANT)){\n    validateConstants(state);\n  }\n}\n\nfunction validateAndParsePredicates(state) {\n  if(parseLanguage(state.predicates, state.predicates.value, PREDICATE)){\n    validatePredicates(state);\n  }\n}\n\nfunction validateAndParseFunctions(state) {\n  if(parseLanguage(state.functions, state.functions.value, FUNCTION)){\n    validateFunctions(state);\n  }\n}\n\nexport default languageReducer;","export const SET_CONSTANTS = 'SET_CONSTANTS';\nexport const SET_PREDICATES = 'SET_PREDICATES';\nexport const SET_FUNCTIONS = 'SET_FUNCTIONS';\nexport const SET_DIAGRAM = 'SET_DIAGRAM';\n\nexport const LOCK_CONSTANTS = 'LOCK_CONSTANTS';\nexport const LOCK_PREDICATES = 'LOCK_PREDICATES';\nexport const LOCK_FUNCTIONS = 'LOCK_FUNCTIONS';\nexport const LOCK_LANGUAGE_COMPONENT = 'LOCK_LANGUAGE_COMPONENT';\n\nexport const SET_CONSTANT_VALUE = 'SET_CONSTANT_VALUE';\nexport const SET_PREDICATE_VALUE_TEXT = 'SET_PREDICATE_VALUE_TEXT';\nexport const SET_PREDICATE_VALUE_TABLE = 'SET_PREDICATE_VALUE_TABLE';\nexport const SET_FUNCTION_VALUE_TEXT = 'SET_FUNCTION_VALUE_TEXT';\nexport const SET_FUNCTION_VALUE_TABLE = 'SET_FUNCTION_VALUE_TABLE';\n\nexport const LOCK_CONSTANT_VALUE = 'LOCK_CONSTANT_VALUE';\nexport const LOCK_PREDICATE_VALUE = 'LOCK_PREDICATE_VALUE';\nexport const LOCK_FUNCTION_VALUE = 'LOCK_FUNCTION_VALUE';\n\nexport const SET_VARIABLES_VALUE = 'SET_VARIABLES_VALUE';\nexport const SYNC_DIAGRAM = 'SYNC_DIAGRAM';\nexport const SET_DOMAIN = 'SET_DOMAIN';\nexport const SYNC_MATH_STATE = 'SYNC_MATH_STATE';\nexport const RENAME_DOMAIN_NODE = 'RENAME_DOMAIN_NODE';\nexport const RENAME_CONSTANT_NODE = 'RENAME_CONSTANT_NODE';\nexport const ADD_UNARY_PREDICATE = 'ADD_UNARY_PREDICATE';\nexport const REMOVE_UNARY_PREDICATE = 'REMOVE_UNARY_PREDICATE';\nexport const ADD_BINARY_PREDICATE = 'ADD_BINARY_PREDICATE';\nexport const REMOVE_BINARY_PREDICATE = 'REMOVE_BINARY_PREDICATE';\nexport const ADD_CONSTANT_NODE = 'ADD_CONSTANT_NODE';\nexport const REMOVE_CONSTANT_NODE = 'REMOVE_CONSTANT_NODE';\nexport const RESET_DIAGRAM_STATE = 'RESET_DIAGRAM_STATE';\nexport const ADD_DOMAIN_NODE = 'ADD_DOMAIN_NODE';\nexport const ADD_TERNARY_NODE = 'ADD_TERNARY_NODE';\nexport const ADD_QUATERNARY_NODE = 'ADD_QUATERNARY_NODE';\nexport const REMOVE_DOMAIN_NODE = 'REMOVE_DOMAIN_NODE';\nexport const REMOVE_TERNARY_NODE = 'REMOVE_TERNARY_NODE';\nexport const REMOVE_QUATERNARY_NODE = 'REMOVE_QUATERNARY_NODE';\nexport const ADD_TERNARY_PREDICATE = 'ADD_TERNARY_PREDICATE';\nexport const REMOVE_TERNARY_PREDICATE = 'REMOVE_TERNARY_PREDICATE';\nexport const ADD_QUATERNARY_PREDICATE = 'ADD_QUATERNARY_PREDICATE';\nexport const REMOVE_QUATERNARY_PREDICATE = 'REMOVE_QUATERNARY_PREDICATE';\nexport const ADD_UNARY_FUNCTION = 'ADD_UNARY_FUNCTION';\nexport const REMOVE_UNARY_FUNCTION = 'REMOVE_UNARY_FUNCTION';\nexport const ADD_BINARY_FUNCTION = 'ADD_BINARY_FUNCTION';\nexport const REMOVE_BINARY_FUNCTION = 'REMOVE_BINARY_FUNCTION';\nexport const ADD_TERNARY_FUNCTION = 'ADD_TERNARY_FUNCTION';\nexport const REMOVE_TERNARY_FUNCTION = 'REMOVE_TERNARY_FUNCTION';\nexport const CHANGE_DIRECTION_OF_BINARY_RELATION = 'CHANGE_DIRECTION_OF_BINARY_RELATION';\nexport const SET_CONSTANT_VALUE_FROM_LINK = 'SET_CONSTANT_VALUE_FROM_LINK';\nexport const IMPORT_DIAGRAM_STATE = 'IMPORT_DIAGRAM_STATE';\nexport const CLEAR_GRAPH_SELECTION = 'CLEAR_GRAPH_SELECTION';\n\nexport const LOCK_DOMAIN = 'LOCK_DOMAIN';\nexport const LOCK_VARIABLES = 'LOCK_VARIABLES';\n\nexport const IMPORT_APP = 'IMPORT_APP';\n\nexport const ADD_EXPRESSION = 'ADD_EXPRESSION';\nexport const REMOVE_EXPRESSION = 'REMOVE_EXPRESSION';\nexport const SET_EXPRESSION_ANSWER = 'SET_EXPRESSION_ANSWER';\nexport const LOCK_EXPRESSION_VALUE = 'LOCK_EXPRESSION_VALUE';\nexport const LOCK_EXPRESSION_ANSWER = 'LOCK_EXPRESSION_ANSWER';\nexport const CHECK_SYNTAX = 'CHECK_SYNTAX';\n\nexport const TOGGLE_EDIT_TABLE = 'TOGGLE_EDIT_TABLE';\nexport const TOGGLE_EDIT_DATABASE = 'TOGGLE_EDIT_DATABASE';\nexport const TOGGLE_TEACHER_MODE = 'TOGGLE_TEACHER_MODE';\nexport const TOGGLE_EDITABLE_NODES = 'TOGGLE_EDITABLE_NODES';\n\nexport const INITIATE_GAME = 'INITIATE_GAME';\nexport const SET_GAME_COMMITMENT = 'SET_GAME_COMMITMENT';\nexport const CONTINUE_GAME = 'CONTINUE_GAME';\nexport const SET_GAME_DOMAIN_CHOICE = 'SET_GAME_DOMAIN_CHOICE';\nexport const END_GAME = 'END_GAME';\nexport const SET_GAME_NEXT_FORMULA = 'SET_GAME_NEXT_FORMULA';\nexport const GO_BACK = 'GO_BACK';\nexport const GET_VARIABLES = 'GET_VARIABLES';","import {\n  IMPORT_APP,\n  LOCK_CONSTANT_VALUE,\n  LOCK_DOMAIN,\n  LOCK_FUNCTION_VALUE,\n  LOCK_PREDICATE_VALUE,\n  LOCK_VARIABLES,\n  SET_CONSTANT_VALUE,\n  SET_CONSTANTS,\n  SET_DOMAIN,\n  SET_FUNCTION_VALUE_TABLE,\n  SET_FUNCTION_VALUE_TEXT,\n  SET_FUNCTIONS,\n  SET_PREDICATE_VALUE_TABLE,\n  SET_PREDICATE_VALUE_TEXT,\n  SET_PREDICATES,\n  SET_VARIABLES_VALUE,\n  TOGGLE_EDIT_TABLE,\n  TOGGLE_EDIT_DATABASE,\n  RENAME_DOMAIN_NODE,\n  ADD_DOMAIN_NODE,\n  REMOVE_DOMAIN_NODE,\n  ADD_CONSTANT_NODE,\n  REMOVE_CONSTANT_NODE,\n  ADD_UNARY_PREDICATE,\n  RENAME_CONSTANT_NODE,\n  SET_CONSTANT_VALUE_FROM_LINK,\n  REMOVE_UNARY_PREDICATE,\n  ADD_BINARY_PREDICATE,\n  REMOVE_BINARY_PREDICATE,\n  CHANGE_DIRECTION_OF_BINARY_RELATION,\n  ADD_UNARY_FUNCTION,\n  REMOVE_UNARY_FUNCTION,\n  ADD_TERNARY_PREDICATE,\n  REMOVE_TERNARY_PREDICATE,\n  REMOVE_BINARY_FUNCTION,\n  ADD_QUATERNARY_PREDICATE,\n  REMOVE_QUATERNARY_PREDICATE,\n  REMOVE_TERNARY_FUNCTION,\n  ADD_TERNARY_FUNCTION,\n  ADD_BINARY_FUNCTION\n} from \"../actions/action_types\";\nimport {\n  EMPTY_CONSTANT_VALUE, EMPTY_DOMAIN, FUNCTION_NOT_FULL_DEFINED, ITEM_IN_LANGUAGE,\n  ITEM_NOT_IN_DOMAIN\n} from \"../../constants/messages\";\nimport {defaultInputData, DOMAIN, FUNCTION, PREDICATE, VARIABLE} from \"../../constants\";\nimport {BOTH, FROM, PREDICATE as PRED, TO} from \"../../graph_view/nodes/ConstantNames\";\nimport {\n  validateStructureConstants,\n  validateStructurePredicates,\n  validateStructureFunctions\n} from \"./functions/validation\";\nimport {parseStructure} from \"./functions/parsers\";\nimport produce from \"immer\";\n\nconst constantDefaultInput = () => ({...defaultInputData(), errorMessage: EMPTY_CONSTANT_VALUE});\nconst predicateDefaultInput = () => ({...defaultInputData(), tableEnabled: false});\nconst functionDefaultInput = () => predicateDefaultInput();\n\n\nexport function defaultState(){\n  return{\n    constants: {},\n    predicates: {},\n    functions: {},\n    variables: {...defaultInputData()},\n    domain: {...defaultInputData(), errorMessage: EMPTY_DOMAIN}\n  }\n}\n\nconst structureReducer = produce((structure, action, state) => {\n  switch (action.type) {\n    case SET_CONSTANTS:\n    case SET_PREDICATES:\n    case SET_FUNCTIONS:\n      syncLanguageWithStructure(structure, state.language);\n      setVariables(structure, state.language);\n      return;\n\n    case ADD_CONSTANT_NODE:\n      insertNewInputs(structure, state.language);\n      return;\n\n    case REMOVE_CONSTANT_NODE:\n      deleteUnusedInputs(structure, state.language);\n      return;\n\n    case SET_CONSTANT_VALUE_FROM_LINK:\n      setConstantValue(structure, action.constantNodeName, action.domainNodeName);\n      return;\n\n    case RENAME_CONSTANT_NODE:\n      let newStateConstantObject = Object.keys(structure.constants).map(key => {\n        let newKey = key === action.oldName ? action.newName : key;\n        return {[newKey]: structure.constants[key]}\n      });\n\n      structure.constants = Object.assign({}, ...newStateConstantObject);\n      syncLanguageWithStructure(structure, state.language);\n      return;\n\n    case ADD_UNARY_PREDICATE:\n      addPredicateLanguageElement(structure, state.language, action.predicateName, 1, [action.nodeName]);\n      return;\n\n    case ADD_BINARY_PREDICATE:\n      addPredicateLanguageElement(structure, state.language, action.predicateName, 2, [action.sourceNodeName, action.targetNodeName], action.direction);\n      return;\n\n    case ADD_TERNARY_PREDICATE:\n      addPredicateLanguageElement(structure, state.language, action.predicateName,3,action.nodeName);\n      return;\n\n    case ADD_QUATERNARY_PREDICATE:\n      addPredicateLanguageElement(structure, state.language, action.predicateName, 4,action.nodeName);\n      return;\n\n    case ADD_BINARY_FUNCTION:\n      addFunctionLanguageElement(structure, state.language, action.functionName,2,action.nodeName);\n      return;\n\n    case ADD_TERNARY_FUNCTION:\n      addFunctionLanguageElement(structure, state.language, action.functionName,3,action.nodeName);\n      return;\n\n    case REMOVE_UNARY_PREDICATE:\n      removePredicateLanguageElement(structure, action.predicateName, 1, [action.nodeName]);\n      return;\n\n    case REMOVE_BINARY_PREDICATE:\n      removePredicateLanguageElementInGivenDirection(structure, action.predicateName, action.direction, action.sourceNodeName, action.targetNodeName);\n      return;\n\n    case REMOVE_TERNARY_PREDICATE:\n      removePredicateLanguageElement(structure, action.predicateName,3,action.nodeName);\n      return;\n\n    case REMOVE_QUATERNARY_PREDICATE:\n      removePredicateLanguageElement(structure, action.predicateName,4,action.nodeName);\n      return;\n\n    case REMOVE_BINARY_FUNCTION:\n      removeFunctionLanguageElement(structure, action.functionName,2,action.nodeName);\n      return;\n\n    case REMOVE_TERNARY_FUNCTION:\n      removeFunctionLanguageElement(structure, action.functionName,3,action.nodeName);\n      return;\n\n    case CHANGE_DIRECTION_OF_BINARY_RELATION:\n      let arity = action.langType === PRED ? 2 : 1;\n      let nodeNames;\n      if (action.direction === FROM) {\n        nodeNames = [action.targetNodeName, action.sourceNodeName];\n      } else if (action.direction === TO) {\n        nodeNames = [action.sourceNodeName, action.targetNodeName];\n      }\n      if(action.langType === PRED) {\n        removePredicateLanguageElement(structure, action.languageElementName, arity, nodeNames);\n        addPredicateLanguageElement(structure, state.language, action.languageElementName, arity,\n            [action.sourceNodeName, action.targetNodeName], action.direction);\n      } else {\n        removeFunctionLanguageElement(structure, action.languageElementName, arity, nodeNames);\n        addFunctionLanguageElement(structure, state.language, action.languageElementName, arity,\n            [action.sourceNodeName, action.targetNodeName], action.direction);\n      }\n      return;\n\n    case ADD_UNARY_FUNCTION:\n      addFunctionLanguageElement(structure, state.language, action.functionName, 1, [action.sourceNodeName, action.targetNodeName], action.direction);\n      return;\n\n    case REMOVE_UNARY_FUNCTION:\n      removeFunctionLanguageElementInGivenDirection(structure, action.functionName, action.direction, action.sourceNodeName, action.targetNodeName);\n      return;\n\n    case SET_CONSTANT_VALUE:\n      setConstantValue(structure, action.constantName, action.value);\n      return;\n\n    case SET_PREDICATE_VALUE_TEXT:\n      parseStructure(structure.predicates[action.predicateName], action.value, state, PREDICATE);\n      checkPredicateValue(structure, action.predicateName);\n      return;\n\n    case SET_PREDICATE_VALUE_TABLE:\n      if (action.checked) {\n        if(structure.predicates[action.predicateName].parsed.some(tuple => JSON.stringify(tuple) === JSON.stringify(action.value))){\n          return;\n        }\n        structure.predicates[action.predicateName].parsed.push(action.value);\n      } else {\n        let index = 0;\n        structure.predicates[action.predicateName].parsed.forEach(tuple =>{\n          if(JSON.stringify(tuple) === JSON.stringify(action.value)){\n            structure.predicates[action.predicateName].parsed.splice(index, 1);\n            return;\n          }\n          index++;\n        })\n      }\n      structure.predicates[action.predicateName].value = parsedToValue(structure.predicates[action.predicateName].parsed);\n      checkPredicateValue(structure, action.predicateName);\n      return;\n\n    case SET_FUNCTION_VALUE_TEXT:\n      parseStructure(structure.functions[action.functionName], action.value, state, FUNCTION);\n      checkFunctionValue(structure, action.functionName);\n      return;\n\n    case SET_FUNCTION_VALUE_TABLE:\n      let params = action.value.slice(0, action.value.length - 1);\n      let value = action.value[action.value.length - 1];\n      let index = 0;\n      structure.functions[action.functionName].parsed.forEach(tuple => {\n        if(JSON.stringify(tuple.slice(0, tuple.length - 1)) === JSON.stringify(params)){\n          structure.functions[action.functionName].parsed.splice(index, 1);\n          return;\n        }\n        index++;\n      });\n      if(value !== \"\") {\n        structure.functions[action.functionName].parsed.push(action.value);\n      }\n      structure.functions[action.functionName].value = parsedToValue(structure.functions[action.functionName].parsed);\n      checkFunctionValue(structure, action.functionName);\n      return;\n\n    case SET_VARIABLES_VALUE:\n      parseStructure(structure.variables, action.value, state, VARIABLE);\n      setVariables(structure, state.language);\n      return;\n\n    case RENAME_DOMAIN_NODE:\n      syncLanguageWithStructure(structure, state.language);\n      structure.domain.parsed = structure.domain.parsed.map(value => value === action.oldName ? action.newName : value);\n      structure.domain.value = structure.domain.parsed.join(\", \");\n      setDomain(structure);\n      if(structure.domain.parsed.length !== 0){\n        structure.domain.errorMessage = '';\n      }\n\n      Object.keys(structure.constants).forEach(c => {\n        if (structure.constants[c].value === action.oldName) {\n          structure.constants[c].value = action.newName;\n        }\n      });\n      setConstantsValues(structure);\n      changePredicatesValues(structure, state.language, action.oldName, action.newName);\n      return;\n\n    case ADD_DOMAIN_NODE:\n      structure.domain.parsed.push(action.nodeName);\n      structure.domain.value = structure.domain.parsed.join(\", \");\n      setDomain(structure);\n      if(structure.domain.parsed.length !== 0){\n        structure.domain.errorMessage = '';\n      }\n      return;\n\n    case REMOVE_DOMAIN_NODE:\n      structure.domain.parsed = structure.domain.parsed.filter(value => value !== action.nodeName);\n      structure.domain.value = structure.domain.parsed.join(\", \");\n      setDomain(structure);\n      if(structure.domain.parsed.length !== 0){\n        structure.domain.errorMessage = '';\n      }\n\n      //toto mozem pretoze tu nie je input okno takze toto sa \"neda\" pokazit takym sposobom\n      state.language.constants.parsed.forEach(c => {\n        if (structure.constants[c].value === action.oldName) {\n          structure.constants[c].value = \"\";\n        }\n      });\n      setConstantsValues(structure);\n      return;\n\n    case SET_DOMAIN:\n      parseStructure(structure.domain, action.value, state, DOMAIN);\n      setDomain(structure);\n      setConstantsValues(structure);\n      setPredicatesValues(structure);\n      setFunctionsValues(structure);\n      setVariables(structure, state.language);\n      return;\n\n    case TOGGLE_EDIT_TABLE:\n      if(action.itemType === PREDICATE){\n        structure.predicates[action.name].tableEnabled = !structure.predicates[action.name].tableEnabled;\n        if(structure.predicates[action.name].tableEnabled){\n          structure.predicates[action.name].databaseEnabled = false;\n        }\n      } else if(action.itemType === FUNCTION){\n        structure.functions[action.name].tableEnabled = !structure.functions[action.name].tableEnabled;\n        if(structure.functions[action.name].tableEnabled){\n          structure.functions[action.name].databaseEnabled = false;\n        }\n      }\n      return;\n\n    case TOGGLE_EDIT_DATABASE:\n      if(action.itemType === PREDICATE){\n        structure.predicates[action.name].databaseEnabled = !structure.predicates[action.name].databaseEnabled;\n        if(structure.predicates[action.name].databaseEnabled){\n          structure.predicates[action.name].tableEnabled = false;\n        }\n      } else if(action.itemType === FUNCTION){\n        structure.functions[action.name].databaseEnabled = !structure.functions[action.name].databaseEnabled;\n        if(structure.functions[action.name].databaseEnabled){\n          structure.functions[action.name].tableEnabled = false;\n        }\n      }\n      return;\n\n    case LOCK_DOMAIN:\n      structure.domain.locked = !structure.domain.locked;\n      return;\n\n    case LOCK_CONSTANT_VALUE:\n      structure.constants[action.constantName].locked = !structure.constants[action.constantName].locked;\n      return;\n\n    case LOCK_PREDICATE_VALUE:\n      structure.predicates[action.predicateName].locked = !structure.predicates[action.predicateName].locked;\n      return;\n\n    case LOCK_FUNCTION_VALUE:\n      structure.functions[action.functionName].locked = !structure.functions[action.functionName].locked;\n      return;\n    case LOCK_VARIABLES:\n      structure.variables.locked = !structure.variables.locked;\n      return;\n\n    case IMPORT_APP:\n      setDomain(structure);\n      setConstantsValues(structure);\n      setPredicatesValues(structure);\n      setFunctionsValues(structure);\n      setVariables(structure, state.language);\n      return;\n\n    default:\n      return;\n  }\n})\n\nfunction removePredicateLanguageElementInGivenDirection(state, elementName, direction, sourceNodeName, targetNodeName) {\n  let nodeNames = [sourceNodeName, targetNodeName]; //FROM direction\n\n  if (direction === TO) {\n    nodeNames = [targetNodeName,sourceNodeName];\n  } else {\n    removePredicateLanguageElement(state, elementName, 2, [targetNodeName, sourceNodeName]); //deleting BOTH direction, starting with TO direction\n  }\n  removePredicateLanguageElement(state, elementName, 2, nodeNames);\n}\n\nfunction removeFunctionLanguageElementInGivenDirection(state, elementName, direction, sourceNodeName, targetNodeName) {\n  let nodeNames = [sourceNodeName, targetNodeName]; //FROM direction\n\n  if (direction === TO) {\n    nodeNames = [targetNodeName,sourceNodeName];\n  } else {\n    removeFunctionLanguageElement(state, elementName, 1, [targetNodeName, sourceNodeName]); //deleting BOTH direction, starting with TO direction\n  }\n  removeFunctionLanguageElement(state, elementName, 1, nodeNames);\n}\n\nfunction changePredicatesValues(state, language, oldNodeName, newNodeName) {\n  language.predicates.parsed.forEach(predicate => {\n      let predicateName = predicate.name + \"/\" + predicate.arity;\n      state.predicates[predicateName].parsed = state.predicates[predicateName].parsed\n          .map(tuple => tuple.map(value => value === oldNodeName ? newNodeName : value));\n      state.predicates[predicateName].value = parsedToValue(state.predicates[predicateName].parsed);\n  });\n}\n\nfunction buildTupleArray(nodeNames,direction){\n  if(direction === BOTH){\n    if(nodeNames[0] === nodeNames[1]){\n      return [[nodeNames[0],nodeNames[1]]];\n    }\n    else{\n      return [[nodeNames[0],nodeNames[1]], [nodeNames[1],nodeNames[0]]];\n    }\n  }\n  else if(direction === FROM){\n    return [[nodeNames[0],nodeNames[1]]];\n  }\n  else{\n    return [[nodeNames[1],nodeNames[0]]];\n  }\n}\n\nfunction addPredicateLanguageElement(state, language, elementName, elementArity, nodeNames, direction=\"\"){\n  let predicateName = elementName + \"/\" + elementArity;\n  insertNewInputs(state, language);\n  if(nodeNames !== null) {\n    if (direction !== \"\") {\n      let arrayNodeNames = buildTupleArray(nodeNames, direction);\n      arrayNodeNames.forEach(tuple => {\n        if(!state.predicates[predicateName].parsed.some(entry => arraysEqual(entry, tuple))) {\n          state.predicates[predicateName].parsed.push(tuple);\n        }\n      });\n    } else {\n      state.predicates[predicateName].parsed.push(nodeNames);\n    }\n  }\n  state.predicates[predicateName].value = parsedToValue(state.predicates[predicateName].parsed);\n  checkPredicateValue(state, predicateName)\n}\n\nfunction addFunctionLanguageElement(state, language, elementName, elementArity, nodeNames, direction=\"\"){\n  let functionName = elementName + \"/\" + elementArity;\n  insertNewInputs(state, language);\n  if(nodeNames !== null) {\n    if (direction !== \"\") {\n      let arrayNodeNames = buildTupleArray(nodeNames, direction);\n      arrayNodeNames.forEach(tuple => {\n        if(!state.functions[functionName].parsed.some(entry => arraysEqual(entry, tuple))) {\n          state.functions[functionName].parsed.push(tuple);\n        }\n      });\n    } else {\n      state.functions[functionName].parsed.push(nodeNames);\n    }\n  }\n  state.functions[functionName].value = parsedToValue(state.functions[functionName].parsed);\n  checkFunctionValue(state, functionName)\n}\n\nfunction removePredicateLanguageElement(state, elementName,elementArity,nodeNames){\n  let predicateName = elementName+\"/\"+elementArity;\n  const sNodeNames = JSON.stringify(nodeNames);\n  state.predicates[predicateName].parsed = state.predicates[predicateName].parsed.filter(tuple => JSON.stringify(tuple) !== sNodeNames)\n  state.predicates[predicateName].value = parsedToValue(state.predicates[predicateName].parsed);\n  checkPredicateValue(state, predicateName)\n}\n\nfunction removeFunctionLanguageElement(state, elementName,elementArity,nodeNames){\n  let functionName = elementName+\"/\"+elementArity;\n  const sNodeNames = JSON.stringify(nodeNames);\n  state.functions[functionName].parsed = state.functions[functionName].parsed.filter(tuple => JSON.stringify(tuple) !== sNodeNames)\n  state.functions[functionName].value = parsedToValue(state.functions[functionName].parsed);\n  checkFunctionValue(state, functionName)\n}\n\nfunction setDomain(state) {\n  if (!state.domain.parsed) {\n    return;\n  }\n  if(state.domain.parsed.length === 0 && state.domain.errorMessage === ''){\n    state.domain.errorMessage = EMPTY_DOMAIN;\n  }\n}\n\nfunction setConstantsValues(state) {\n  Object.keys(state.constants).forEach(c => {\n    setConstantValue(state, c, state.constants[c].value);\n  })\n}\n\nfunction setPredicatesValues(state) {\n  Object.keys(state.predicates).forEach(predicate => {\n    checkPredicateValue(state, predicate);\n  })\n}\n\nfunction setFunctionsValues(state) {\n  Object.keys(state.functions).forEach(f => {\n    checkFunctionValue(state, f);\n  })\n}\n\nfunction syncLanguageWithStructure(state, language) {\n  deleteUnusedInputs(state, language);\n  insertNewInputs(state, language);\n}\n\nfunction deleteUnusedInputs(state, language) {\n  Object.keys(state.constants).forEach(constantName => {\n    if (!language.constants.parsed.some(c => c === constantName)) {\n      delete state.constants[constantName];\n    }\n  });\n\n  Object.keys(state.predicates).forEach(predicateName => {\n    if (!language.predicates.parsed.some(p => (p.name + \"/\" + p.arity) === predicateName)) {\n      delete state.predicates[predicateName];\n    }\n  });\n  Object.keys(state.functions).forEach(functionName => {\n    if (!language.functions.parsed.some(f => (f.name + \"/\" + f.arity) === functionName)) {\n      delete state.functions[functionName];\n    }\n  });\n}\n\nfunction insertNewInputs(state, language) {\n    language.constants.parsed.forEach(c => {\n      if (!state.constants[c]) {\n        state.constants[c] = constantDefaultInput();\n      }\n    });\n    language.predicates.parsed.forEach(p => {\n      let predicateName = p.name + \"/\" + p.arity;\n      if (!state.predicates[predicateName]) {\n        state.predicates[predicateName] = predicateDefaultInput()\n      }\n    });\n    language.functions.parsed.forEach(f => {\n      let functionName = f.name + \"/\" + f.arity;\n      if (!state.functions[functionName]) {\n        state.functions[functionName] = functionDefaultInput();\n        checkFunctionValue(state, functionName);\n      }\n    });\n}\n\nfunction setVariables(state, language) {\n  if (!state.variables.parsed || state.variables.errorMessage !== '') {\n    return;\n  }\n  let errorMessage = '';\n  state.variables.parsed.forEach(tuple => {\n    let variable = tuple[0];\n    let value = tuple[1];\n    if (language.constants.parsed.some(c => c === variable)\n          || language.functions.parsed.some(f => (f.name + \"/\" + f.arity) === variable)\n          || language.predicates.parsed.some(p => (p.name + \"/\" + p.arity) === variable)) {\n      errorMessage = ITEM_IN_LANGUAGE(variable);\n    }\n    else if (!state.domain.parsed.some(d => d === value)) {\n      errorMessage = ITEM_NOT_IN_DOMAIN(value);\n    }\n  });\n  state.variables.errorMessage = errorMessage;\n}\n\nfunction setConstantValue(state, constantName, value) {\n  try {\n    validateStructureConstants(constantName, value, state.constants, state.domain.parsed);\n    state.constants[constantName].value = value;\n    state.constants[constantName].errorMessage = '';\n  } catch (e) {\n    console.error(e);\n    state.constants[constantName].errorMessage = e;\n    state.constants[constantName].value = '';\n  }\n}\n\nfunction checkPredicateValue(state, predicateName) {\n  if (state.predicates[predicateName].errorMessage !== '') {\n    return;\n  }\n  let arity = predicateName.split(\"/\")[1];\n  state.predicates[predicateName].errorMessage =\n      validateStructurePredicates(state.predicates[predicateName].parsed, state.domain.parsed, arity);\n}\n\nfunction checkFunctionValue(state, functionName) {\n  let arity = functionName.split(\"/\")[1];\n  state.functions[functionName].errorMessage =\n      validateStructureFunctions(state.functions[functionName].parsed, state.domain.parsed, arity);\n}\n\nfunction tupleToString(tuple) {\n  if (tuple.length === 0) {\n    return '';\n  }\n  if (tuple.length === 1) {\n    return tuple[0];\n  }\n  return \"(\" + tuple.join(\", \") + \")\"\n}\n\nfunction  parsedToValue(parsedValues) {\n  if (parsedValues === undefined || parsedValues.length === 0) {\n    return '';\n  }\n  return parsedValues.map(value => tupleToString(value)).join(\", \");\n}\n\nfunction arraysEqual(array1, array2){\n  return (\n    (array1.length == array2.length) &&\n    array1.every( (elem, index) => elem === array2[index] )\n  );\n}\n\nexport default structureReducer;","import { createSelector } from 'reselect'\n\nconst getParsedValuation = state => state.structure.variables.parsed\n\nexport const getValuationObject = createSelector(\n    [getParsedValuation],\n    (valuations) => {\n        return new Map(valuations);\n    }\n)","import {defaultExpressionData, FORMULA, TERM} from \"../../constants\";\nimport {\n  defaultHintikkaGameData, GAME_EQUIVALENCE,\n  GAME_IMPLICATION,\n  GAME_OPERATOR,\n  GAME_QUANTIFIER, gameEntry,\n  NEGATION\n} from \"../../constants/gameConstants\";\nimport Implication from \"../../model/formula/Formula.Implication\";\nimport {\n  ADD_EXPRESSION,\n  RENAME_DOMAIN_NODE,\n  CHECK_SYNTAX,\n  IMPORT_APP,\n  LOCK_EXPRESSION_ANSWER,\n  LOCK_EXPRESSION_VALUE,\n  REMOVE_EXPRESSION,\n  SET_CONSTANT_VALUE,\n  SET_CONSTANTS,\n  SET_EXPRESSION_ANSWER,\n  SET_FUNCTION_VALUE_TABLE,\n  SET_FUNCTION_VALUE_TEXT,\n  SET_FUNCTIONS,\n  SET_PREDICATE_VALUE_TABLE,\n  SET_PREDICATE_VALUE_TEXT,\n  SET_PREDICATES,\n  SET_VARIABLES_VALUE,\n  ADD_DOMAIN_NODE,\n  SET_CONSTANT_VALUE_FROM_LINK,\n  REMOVE_CONSTANT_NODE,\n  ADD_UNARY_PREDICATE,\n  REMOVE_UNARY_PREDICATE,\n  ADD_BINARY_PREDICATE,\n  REMOVE_BINARY_PREDICATE,\n  ADD_CONSTANT_NODE,\n  RENAME_CONSTANT_NODE,\n  REMOVE_DOMAIN_NODE,\n  ADD_TERNARY_PREDICATE,\n  REMOVE_TERNARY_PREDICATE,\n  ADD_QUATERNARY_PREDICATE,\n  REMOVE_QUATERNARY_PREDICATE,\n  ADD_BINARY_FUNCTION,\n  REMOVE_BINARY_FUNCTION,\n  ADD_TERNARY_FUNCTION,\n  REMOVE_TERNARY_FUNCTION,\n  ADD_UNARY_FUNCTION,\n  REMOVE_UNARY_FUNCTION,\n  REMOVE_QUATERNARY_NODE,\n  REMOVE_TERNARY_NODE,\n  IMPORT_DIAGRAM_STATE,\n  CHANGE_DIRECTION_OF_BINARY_RELATION,\n  INITIATE_GAME,\n  SET_GAME_COMMITMENT,\n  CONTINUE_GAME,\n  SET_GAME_DOMAIN_CHOICE, SET_GAME_NEXT_FORMULA, END_GAME, GO_BACK, GET_VARIABLES\n} from \"../actions/action_types\";\nimport {getStructureObject} from \"../selectors/structureObject\";\nimport {parseExpression} from \"./functions/parsers\";\nimport produce from \"immer\";\nimport {getValuationObject} from \"../selectors/valuationObject\";\nimport {last} from \"mathjs/es/utils/array\";\n\nexport function defaultState(){\n  return {\n    formulas: [],\n    terms: []\n  }\n}\n\nconst expressionsReducer = produce((expressions, action, state) => {\n  const variablesObject = getValuationObject(state);\n  switch (action.type) {\n    case SET_CONSTANTS:\n    case SET_PREDICATES:\n    case SET_FUNCTIONS:\n      syncExpressionsValue(expressions, state, variablesObject,true);\n      return;\n    case IMPORT_APP:\n      syncExpressionsValue(expressions, state, variablesObject,true);\n      expressions.formulas.forEach( (formula) => endGame(formula) );\n      return;\n    case SET_CONSTANT_VALUE:\n    case SET_PREDICATE_VALUE_TEXT:\n    case SET_PREDICATE_VALUE_TABLE:\n    case SET_FUNCTION_VALUE_TEXT:\n    case SET_FUNCTION_VALUE_TABLE:\n    case SET_VARIABLES_VALUE:\n      syncExpressionsValue(expressions, state, variablesObject);\n      return;\n\n    case ADD_EXPRESSION:\n      addExpression(expressions, action.expressionType);\n      return;\n\n    case REMOVE_EXPRESSION:\n      removeExpression(expressions, action.expressionType, action.index);\n      return;\n\n    case SET_EXPRESSION_ANSWER:\n      setExpressionAnswer(expressions, action.expressionType, action.index, action.answer);\n      return;\n\n    case LOCK_EXPRESSION_VALUE:\n      lockExpressionValue(expressions, action.expressionType, action.expressionIndex);\n      return;\n\n    case LOCK_EXPRESSION_ANSWER:\n      lockExpressionAnswer(expressions, action.expressionType, action.expressionIndex);\n      return;\n\n    case CHECK_SYNTAX:\n      checkExpressionSyntax(expressions, state, action, variablesObject);\n      return;\n\n    case ADD_DOMAIN_NODE:\n    case RENAME_DOMAIN_NODE:\n    case REMOVE_DOMAIN_NODE:\n    case ADD_CONSTANT_NODE:\n    case RENAME_CONSTANT_NODE:\n    case REMOVE_CONSTANT_NODE:\n    case ADD_UNARY_PREDICATE:\n    case REMOVE_UNARY_PREDICATE:\n    case ADD_UNARY_FUNCTION:\n    case REMOVE_UNARY_FUNCTION:\n    case ADD_BINARY_PREDICATE:\n    case REMOVE_BINARY_PREDICATE:\n    case ADD_TERNARY_PREDICATE:\n    case REMOVE_TERNARY_PREDICATE:\n    case ADD_QUATERNARY_PREDICATE:\n    case REMOVE_QUATERNARY_PREDICATE:\n    case ADD_BINARY_FUNCTION:\n    case REMOVE_BINARY_FUNCTION:\n    case ADD_TERNARY_FUNCTION:\n    case REMOVE_TERNARY_FUNCTION:\n    case REMOVE_TERNARY_NODE:\n    case REMOVE_QUATERNARY_NODE:\n    case SET_CONSTANT_VALUE_FROM_LINK:\n    case IMPORT_DIAGRAM_STATE:\n    case CHANGE_DIRECTION_OF_BINARY_RELATION:\n      syncExpressionsValue(expressions, state, variablesObject,true);\n      return;\n\n    case INITIATE_GAME:\n    case SET_GAME_COMMITMENT:\n    case CONTINUE_GAME:\n    case SET_GAME_DOMAIN_CHOICE:\n    case SET_GAME_NEXT_FORMULA:\n    case END_GAME:\n    case GET_VARIABLES:\n    case GO_BACK:\n      game(expressions.formulas[action.index], action, state, variablesObject);\n      return;\n\n    default:\n      return;\n  }\n})\n\nfunction game(expression, action, state, variablesObject){\n  const lastEntry = expression.gameHistory.length > 0 ?\n     expression.gameHistory[expression.gameHistory.length - 1] :\n    null;\n  switch (action.type) {\n    case INITIATE_GAME:\n      {\n          if(expression.parsed) {\n            expression.gameEnabled = !expression.gameEnabled;\n            expression.gameHistory = new Array();\n            const variables = new Map(variablesObject);\n            expression.variableIndex = setValidVariableIndex(expression.parsed, 1, variables);\n            addToHistory(expression, expression.parsed, null, null, variables, [], []);\n          }\n          return;\n      }\n\n    case SET_GAME_COMMITMENT:\n      {\n          const nextMove = getNextStepForGame(lastEntry.currentFormula, action.commitment, getStructureObject(state), lastEntry.gameVariables, expression);\n          addToHistory(expression, lastEntry.currentFormula, action.commitment, nextMove, lastEntry.gameVariables, action.gameMessages, action.userMessages);\n          return;\n      }\n\n    case CONTINUE_GAME:\n      {\n          const variables = new Map(lastEntry.gameVariables);\n          if (!lastEntry) {\n            return;\n          }\n          if(lastEntry.currentFormula.getType(lastEntry.gameCommitment) === GAME_QUANTIFIER){\n            variables.set(lastEntry.nextMove.variables[0], lastEntry.nextMove.variables[1]);\n          }\n          const nextMove = getNextStepForGame(lastEntry.nextMove.formula, lastEntry.nextMove.commitment, getStructureObject(state), variables, expression);\n          addToHistory(expression, lastEntry.nextMove.formula, lastEntry.nextMove.commitment, nextMove, variables, action.gameMessages, action.userMessages);\n          return;\n      }\n\n    case SET_GAME_DOMAIN_CHOICE:\n      {\n          if (!lastEntry) {\n            return;\n          }\n          const variables = new Map(lastEntry.gameVariables);\n          const varName = 'n' + expression.variableIndex;\n          variables.set(varName, action.value);\n          console.log(lastEntry.currentFormula);\n          console.log(varName);\n          const currentFormula = lastEntry.currentFormula.subFormula.substitute(lastEntry.currentFormula.variableName, varName);\n          console.log(currentFormula);\n          expression.variableIndex = setValidVariableIndex(currentFormula, expression.variableIndex, variables);\n          const nextMove = getNextStepForGame(currentFormula, lastEntry.gameCommitment, getStructureObject(state), variables, expression);\n          addToHistory(expression, currentFormula, lastEntry.gameCommitment, nextMove, variables, action.gameMessages, action.userMessages);\n          return;\n      }\n\n    case SET_GAME_NEXT_FORMULA:\n      {\n          const currentFormula = action.formula.createCopy();\n          const nextMove = getNextStepForGame(currentFormula, action.commitment, getStructureObject(state), lastEntry.gameVariables, expression);\n          addToHistory(expression, currentFormula, action.commitment, nextMove, lastEntry.gameVariables, action.gameMessages, action.userMessages);\n          return;\n      }\n\n    case END_GAME:\n          endGame(expression);\n          return;\n\n    case GET_VARIABLES:\n          expression.showVariables = !expression.showVariables;\n          return;\n\n    case GO_BACK:\n          expression.gameHistory = expression.gameHistory.slice(0, action.historyIndex);\n          return;\n\n    default:\n          return;\n    }\n}\n\nfunction endGame(expression) {\n  expression.gameHistory = new Array();\n  expression.showVariables = false;\n  expression.gameEnabled = false;\n  expression.variableIndex = 1;\n}\n\nfunction addExpression(expressions, expressionType) {\n  if (expressionType === FORMULA) {\n    expressions.formulas.push({...defaultExpressionData(), ...defaultHintikkaGameData()});\n  } else if (expressionType === TERM) {\n    expressions.terms.push(defaultExpressionData());\n  }\n}\n\nfunction removeExpression(expressions, expressionType, expressionIndex) {\n  if (expressionType === FORMULA && expressionIndex < expressions.formulas.length) {\n    expressions.formulas.splice(expressionIndex, 1);\n  } else if (expressionType === TERM && expressionIndex < expressions.terms.length) {\n    expressions.terms.splice(expressionIndex, 1);\n  }\n}\n\nfunction syncExpressionsValue(expressions, state, variables, parse = false) {\n  expressions.formulas.forEach(formula => {\n    if (parse) {\n      parseExpression(formula, formula.value, state, FORMULA);\n      // noinspection JSUndefinedPropertyAssignment\n    }\n    evalExpression(state, formula, variables);\n  });\n  expressions.terms.forEach(term => {\n    if (parse) {\n      parseExpression(term, term.value, state, TERM);\n    }\n    evalExpression(state, term, variables);\n  });\n}\n\nfunction evalExpression(state, expression, variables) {\n  if (!expression.parsed || expression.parsed.length === 0) {\n    return;\n  }\n  expression.errorMessage = '';\n  try {\n    expression.expressionValue = expression.parsed.eval(getStructureObject(state), variables);\n  } catch (e) {\n    expression.errorMessage = e;\n    expression.expressionValue = null;\n  }\n}\n\nfunction checkExpressionSyntax(expressions, state, action, variables) {\n  let expressionText = action.value;\n  let expression = expressions.terms[action.index];\n  if (action.expressionType === FORMULA) {\n    expression = expressions.formulas[action.index];\n  }\n  parseExpression(expression, expressionText, state, action.expressionType);\n  expression.value = action.value; // aby tam neboli zatvorky\n  if (action.expressionType === FORMULA) {\n    endGame(expression);\n  }\n  if (expression.errorMessage.length === 0) {\n    expression.validSyntax = true;\n    evalExpression(state, expression, variables);\n  } else {\n    expression.validSyntax = false;\n  }\n}\n\nfunction setExpressionAnswer(expressions, expressionType, expressionIndex, answer) {\n  if (expressionType === FORMULA && expressionIndex < expressions.formulas.length) {\n    let ans = (answer === 'true');\n    if (answer === '')\n      ans = '';\n    expressions.formulas[expressionIndex].answerValue = ans;\n  } else if (expressionType === TERM && expressionIndex < expressions.terms.length) {\n    expressions.terms[expressionIndex].answerValue = answer;\n  }\n}\n\nfunction lockExpressionAnswer(expressions, expressionType, expressionIndex) {\n  if (expressionType === FORMULA && expressionIndex < expressions.formulas.length) {\n    expressions.formulas[expressionIndex].answerLocked = !expressions.formulas[expressionIndex].answerLocked;\n  } else if (expressionType === TERM && expressionIndex < expressions.terms.length) {\n    expressions.terms[expressionIndex].answerLocked = !expressions.terms[expressionIndex].answerLocked;\n  }\n}\n\nfunction lockExpressionValue(expressions, expressionType, expressionIndex) {\n  if (expressionType === FORMULA && expressionIndex < expressions.formulas.length) {\n    expressions.formulas[expressionIndex].inputLocked = !expressions.formulas[expressionIndex].inputLocked;\n  } else if (expressionType === TERM && expressionIndex < expressions.terms.length) {\n    expressions.terms[expressionIndex].inputLocked = !expressions.terms[expressionIndex].inputLocked;\n  }\n}\n\nfunction addToHistory(expression, currentFormula, commitment, nextFormula, gameVariables, gameMessages, userMessages){\n  expression.gameHistory.push(gameEntry(\n        commitment,\n        gameVariables,\n        currentFormula.createCopy(),\n        nextFormula,\n        gameMessages,\n        userMessages\n  ));\n}\n\nfunction getNextStepForGame(currentFormula, commitment, structureObject, variableObject, expression){\n    if(currentFormula.getType(commitment) === GAME_OPERATOR){\n        const subFormulas = currentFormula.getSubFormulas();\n        const subFormulasEval = subFormulas.map(formula => formula.eval(structureObject, variableObject));\n        const subFormulasCommitment = currentFormula.getSubFormulasCommitment(commitment);\n        const randomFormula = Math.floor(Math.random() * subFormulas.length);\n        for(let i = 0; i < subFormulas.length; i++){\n          if(subFormulasCommitment[i] !== subFormulasEval[i]){\n            return {formula: subFormulas[i], commitment: subFormulasCommitment[i], variables: variableObject}\n          }\n        }\n        return {formula: subFormulas[randomFormula], commitment: subFormulasCommitment[randomFormula], variables: variableObject}\n    } else if(currentFormula.getType(commitment) === GAME_QUANTIFIER){\n        const domain = Array.from(structureObject.domain);\n        const variables = new Map(variableObject);\n        const varName = 'n' + expression.variableIndex;\n        console.log(currentFormula)\n        const formula = currentFormula.subFormula.substitute(currentFormula.variableName, varName);\n        console.log(formula)\n        expression.variableIndex = setValidVariableIndex(formula, expression.variableIndex, variables);\n\n        for (const value of domain) {\n          variables.set(varName, value);\n          if (formula.eval(structureObject, variables) !== commitment) {\n            return { formula, commitment, variables: [varName, value] };\n          }\n        }\n\n        const randomDomainValue = domain[Math.floor(Math.random() * domain.length)];\n        return { formula, commitment, variables: [varName, randomDomainValue] };\n    }\n    return null;\n}\n\nfunction setValidVariableIndex(formula, variableIndex, variables){\n    const variablesInFormula = formula.getVariables();\n    while(variablesInFormula.includes('n' + variableIndex) || variables.has('n' + variableIndex)){\n        variableIndex++;\n    }\n    return variableIndex;\n}\n\n\nexport default expressionsReducer;","import {TOGGLE_TEACHER_MODE} from \"../actions/action_types\";\nimport produce from \"immer\";\n\nconst teacherModeReducer = produce((state:any, action:any) => {\n    if (action.type === TOGGLE_TEACHER_MODE) {\n        state.teacherMode = !state.teacherMode;\n        return;\n    } else {\n        return;\n    }\n})\n\nexport default teacherModeReducer;","import { UnBinaryNodeWidget } from './UnBinaryNodeWidget';\nimport { UnBinaryNodeModel } from './UnBinaryNodeModel';\nimport * as React from 'react';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class UnBinaryNodeFactory extends AbstractReactFactory<UnBinaryNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('unbinary');\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\tlet reduxProps = event.model.getReduxProps();\n\t\treturn <UnBinaryNodeWidget removeDomainNode={reduxProps[\"removeDomainNode\"]} renameDomainNode={reduxProps[\"renameDomainNode\"]} engine={this.engine} size={50} model={event.model}/>;\n\t}\n\n\tgenerateModel(event:any) {\n\t\treturn new UnBinaryNodeModel();\n\t}\n}\n","import { ConstantNodeWidget } from './ConstantNodeWidget';\nimport { ConstantNodeModel } from './ConstantNodeModel';\nimport * as React from 'react';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class ConstantNodeFactory extends AbstractReactFactory<ConstantNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('constant');\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\tlet reduxProps = event.model.options.reduxProps;\n\t\treturn <ConstantNodeWidget removeConstantNode={reduxProps[\"removeConstantNode\"]} renameConstantNode={reduxProps[\"renameConstantNode\"]} engine={this.engine} size={50} model={event.model}/>;\n\t}\n\n\tgenerateModel(event:any) {\n\t\treturn new ConstantNodeModel();\n\t}\n}\n","import * as React from 'react';\nimport { BinaryLabelModel } from './BinaryLabelModel';\nimport { BinaryLabelWidget } from './BinaryLabelWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class BinaryLabelFactory extends AbstractReactFactory< BinaryLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('binary');\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\treturn <BinaryLabelWidget model={event.model} engine={this.engine}/>;\n\t}\n\n\tgenerateModel(event:any): BinaryLabelModel {\n\t\treturn new BinaryLabelModel();\n\t}\n}\n","import { DiagramEngine, PortModel} from '@projectstorm/react-diagrams';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nexport class SimplePortFactory extends AbstractModelFactory<PortModel, DiagramEngine> {\n\tcb: (initialConfig?: any) => PortModel;\n\n\tconstructor(type: string, cb: (initialConfig?: any) => PortModel) {\n\t\tsuper(type);\n\t\tthis.cb = cb;\n\t}\n\n\tgenerateModel(event:any): PortModel {\n\t\treturn this.cb(event.initialConfig);\n\t}\n}\n","import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface BinaryLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface BinaryLinkPointWidgetState {\n\tselected: boolean;\n}\n\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n\nexport class BinaryLinkPointWidget extends React.Component<BinaryLinkPointWidgetProps, BinaryLinkPointWidgetState> {\n\tconstructor(props:any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { BinaryLinkFactory } from './BinaryLinkFactory';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { BinaryLinkModel } from './BinaryLinkModel';\n\nexport interface BinaryLinkSegmentWidgetProps {\n\tpath: string;\n\tlink: BinaryLinkModel;\n\tselected: boolean;\n\tforwardRef: React.RefObject<SVGPathElement>;\n\tfactory: BinaryLinkFactory;\n\tdiagramEngine: DiagramEngine;\n\tonSelection: (selected: boolean) => any;\n\textras: object;\n}\n\nexport class BinaryLinkSegmentWidget extends React.Component<BinaryLinkSegmentWidgetProps> {\n\trender() {\n\t\tconst Bottom = React.cloneElement(\n\t\t\tthis.props.factory.generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis.props.selected || this.props.link.isSelected(),\n\t\t\t\tthis.props.path\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: this.props.forwardRef\n\t\t\t}\n\t\t);\n\n\t\tconst Top = React.cloneElement(Bottom, {\n\t\t\tstrokeLinecap: 'round',\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.props.onSelection(false);\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.props.onSelection(true);\n\t\t\t},\n\t\t\t...this.props.extras,\n\t\t\tref: null,\n\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\tstrokeOpacity: this.props.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tfill: 'none',\n\t\t\tonContextMenu: (event:any) => {\n\t\t\t\tif (!this.props.link.isLocked()) {\n\t\t\t\t\tevent.preventBinary();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { BinaryLinkModel } from './BinaryLinkModel';\nimport { BinaryLinkPointWidget } from './BinaryLinkPointWidget';\nimport { BinaryLinkSegmentWidget } from './BinaryLinkSegmentWidget';\nimport { MouseEvent } from 'react';\nimport {clearAllWithoutCurrentModel} from \"../../nodes/functions\";\n\nexport interface BinaryLinkProps {\n\tlink: BinaryLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface BinaryLinkState {\n\tselected: boolean;\n}\n\nexport class BinaryLinkWidget extends React.Component<BinaryLinkProps, BinaryLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: BinaryLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.setRenderedLinkPath();\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.setRenderedLinkPath();\n\t\tclearAllWithoutCurrentModel(this.props.link,this.props.diagramEngine);\n\t}\n\n\tsetRenderedLinkPath(){\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map(ref => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\tevent.shiftKey &&\n\t\t\t// @ts-ignore\n\t\t\tthis.props.link.getSourcePort().getNode().isEditable() &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<BinaryLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<BinaryLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={selected => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event:any) => {\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//render the circles\n\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t}\n\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-binary-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n","import * as React from 'react';\nimport { BinaryLinkModel } from './BinaryLinkModel';\nimport { BinaryLinkWidget } from './BinaryLinkWidget';\nimport styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/core';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${p => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n\nexport class BinaryLinkFactory<Link extends BinaryLinkModel = BinaryLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'binary') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\treturn <BinaryLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event:any): Link {\n\t\treturn new BinaryLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { QuaternaryNodeWidget } from './QuaternaryNodeWidget';\nimport { QuaternaryNodeModel } from './QuaternaryNodeModel';\nimport * as React from 'react';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class QuaternaryNodeFactory extends AbstractReactFactory<QuaternaryNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('quaternary');\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\treturn <QuaternaryNodeWidget engine={this.engine} size={50} model={event.model} />;\n\t}\n\n\tgenerateModel(event:any) {\n\t\treturn new QuaternaryNodeModel();\n\t}\n}\n","import * as React from 'react';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport {TernaryNodeModel} from \"./TernaryNodeModel\";\nimport { TernaryNodeWidget } from './TernaryNodeWidget';\n\nexport class TernaryNodeFactory extends AbstractReactFactory<TernaryNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('ternary');\n\t}\n\n\tgenerateReactWidget(event:any): JSX.Element {\n\t\treturn <TernaryNodeWidget engine={this.engine} size={50} model={event.model} />;\n\t}\n\n\tgenerateModel(event:any) {\n\t\treturn new TernaryNodeModel();\n\t}\n}\n","import createEngine,{DiagramModel, DiagramEngine, DefaultDiagramState } from '@projectstorm/react-diagrams';\nimport {UnBinaryNodeFactory} from \"./nodes/unbinary/UnBinaryNodeFactory\";\nimport {ConstantNodeFactory} from \"./nodes/constant/ConstantNodeFactory\";\nimport {BinaryLabelFactory} from \"./labels/binary/BinaryLabelFactory\";\nimport { SimplePortFactory } from './nodes/SimplePortFactory';\nimport {BinaryLinkFactory} from \"./links/binary/BinaryLinkFactory\";\nimport {QuaternaryNodeFactory} from \"./nodes/quaternary/QuaternaryNodeFactory\";\nimport {TernaryNodeFactory} from \"./nodes/ternary/TernaryNodeFactory\";\nimport {NaryRelationPortModel} from \"./nodes/NaryRelationPortModel\";\n\nexport class DiagramApplication {\n\tprotected activeModel: DiagramModel;\n\tprotected diagramEngine: DiagramEngine;\n\n\tconstructor(diagramModel:DiagramModel) {\n\t\tthis.diagramEngine = createEngine();\n\t\tthis.setState();\n\t\tthis.setModel(diagramModel);\n\n\t\t//Custom ports access\n\t\tthis.diagramEngine.getPortFactories().registerFactory(new SimplePortFactory('nary', config => new NaryRelationPortModel()));\n\t\t//Custom nodes access\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new QuaternaryNodeFactory());\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new UnBinaryNodeFactory());\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new ConstantNodeFactory());\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new TernaryNodeFactory());\n\t\t//Custom link access\n\t\tthis.diagramEngine.getLinkFactories().registerFactory(new BinaryLinkFactory());\n\t\t//Custom labels access\n\t\tthis.diagramEngine.getLabelFactories().registerFactory(new BinaryLabelFactory());\n\t}\n\n\tpublic setState(){\n\t\tconst state = this.diagramEngine.getStateMachine().getCurrentState();\n\t\tif (state instanceof DefaultDiagramState) {\n\t\t\tstate.dragNewLink.config.allowLooseLinks = false;\n\t\t}\n\t}\n\n\tpublic setModel(diagramModel: DiagramModel) {\n\t\tthis.diagramEngine.setModel(diagramModel);\n\t\tthis.activeModel = diagramModel;\n\t\t//set number of links to zero, so if we will select a link it will not create a point\n\t\t//this.getDiagramEngine().setMaxNumberPointsPerLink(0);\n\t}\n\n\tpublic getActiveModel(): DiagramModel {\n\t\treturn this.activeModel;\n\t}\n\n\tpublic getDiagramEngine(): DiagramEngine {\n\t\treturn this.diagramEngine;\n\t}\n}\n","import {\n  ADD_CONSTANT_NODE,\n  ADD_DOMAIN_NODE,\n  RENAME_DOMAIN_NODE,\n  REMOVE_CONSTANT_NODE,\n  REMOVE_DOMAIN_NODE,\n  SET_DIAGRAM,\n  SYNC_DIAGRAM,\n  SYNC_MATH_STATE,\n  TOGGLE_EDITABLE_NODES,\n  RENAME_CONSTANT_NODE,\n  ADD_QUATERNARY_NODE,\n  ADD_TERNARY_NODE, IMPORT_APP, IMPORT_DIAGRAM_STATE, REMOVE_QUATERNARY_NODE, REMOVE_TERNARY_NODE, CLEAR_GRAPH_SELECTION\n} from \"../actions/action_types\";\nimport {UnBinaryNodeModel} from \"../../graph_view/nodes/unbinary/UnBinaryNodeModel\";\nimport {\n  BASIC_CURVYNESS,\n  BOTH,\n  FROM,\n  FUNCTION,\n  PREDICATE, QUATERNARY,\n  TERNARY,\n  TO\n} from \"../../graph_view/nodes/ConstantNames\";\nimport {ConstantNodeModel} from \"../../graph_view/nodes/constant/ConstantNodeModel\";\nimport {DiagramModel} from \"@projectstorm/react-diagrams\";\nimport {BinaryLinkModel} from \"../../graph_view/links/binary/BinaryLinkModel\";\nimport {DiagramApplication} from \"../../graph_view/DiagramAplication\";\nimport _ from \"lodash\";\nimport {TernaryNodeModel} from \"../../graph_view/nodes/ternary/TernaryNodeModel\";\nimport {QuaternaryNodeModel} from \"../../graph_view/nodes/quaternary/QuaternaryNodeModel\";\nimport {getStructureObject} from \"../selectors/structureObject\";\n\nexport function defaultState() {\n  const diagramModel = new DiagramModel();\n  return{\n    diagramModel: diagramModel,\n    diagramEngine: new DiagramApplication(diagramModel).diagramEngine,\n    domainNodes: new Map(),\n    constantNodes: new Map(),\n    ternaryNodes: new Map(),\n    quaternaryNodes: new Map(),\n    editableNodes: false\n  }\n}\n\nfunction diagramReducer(state, action, wholeState) {\n  switch (action.type) {\n    case SET_DIAGRAM:\n      state.diagramModel = action.diagramModel;\n      return state;\n    case SYNC_DIAGRAM:\n      let value = {...action.value,focusOnBodyFunc:action.focusOnBodyFunc};\n      syncDomain(value);\n      syncLabels(state);\n      syncPredicates(value, wholeState);\n      syncFunctions(value, wholeState);\n      syncConstants(value);\n      return state;\n    case ADD_DOMAIN_NODE:\n      state.domainNodes.set(action.nodeName, action.nodeObject);\n      return state;\n    case RENAME_DOMAIN_NODE:\n      state.domainNodes.set(action.newName, state.domainNodes.get(action.oldName));\n      state.domainNodes.delete(action.oldName);\n      return state;\n    case REMOVE_DOMAIN_NODE:\n      state.domainNodes.delete(action.nodeName);\n      return state;\n    case ADD_CONSTANT_NODE:\n      state.constantNodes.set(action.nodeName, action.nodeObject);\n      return state;\n    case RENAME_CONSTANT_NODE:\n      state.constantNodes.set(action.newName, state.constantNodes.get(action.oldName));\n      state.constantNodes.delete(action.oldName);\n      return state;\n    case REMOVE_CONSTANT_NODE:\n      state.constantNodes.delete(action.nodeName);\n      return state;\n    case ADD_TERNARY_NODE:\n      state.ternaryNodes.set(action.nodeName,action.nodeObject);\n      return state;\n    case REMOVE_TERNARY_NODE:\n      state.ternaryNodes.delete(action.nodeName);\n      return state;\n    case ADD_QUATERNARY_NODE:\n      state.quaternaryNodes.set(action.nodeName,action.nodeObject);\n      return state;\n    case REMOVE_QUATERNARY_NODE:\n      state.quaternaryNodes.delete(action.nodeName);\n      return state;\n    case SYNC_MATH_STATE:\n      deleteAllLabels(state);\n      return state;\n    case TOGGLE_EDITABLE_NODES:\n      changeEditableState(state,action.value);\n      return {...state, editableNodes: action.value};\n    case IMPORT_APP:\n      let diagramModel = new DiagramModel();\n      state.diagramEngine.setModel(diagramModel);\n      clearDiagramState(state);\n      return {...state,diagramModel:diagramModel,diagramCordState:JSON.parse(action.content).diagramCordState,imported:true};\n    case IMPORT_DIAGRAM_STATE:\n      let values = {...action.state,focusOnBodyFunc:action.focusOnBodyFunc};\n      syncDomain(values);\n      syncLabels(values.diagramState);\n      syncPredicates(values, wholeState);\n      syncFunctions(values, wholeState);\n      syncConstants(values);\n      syncNodesCords(values.diagramState);\n      changeEditableState(state,state.editableNodes);\n      setCallReduxFunc(state.diagramModel,true);\n      return {...state,imported:false};\n    case CLEAR_GRAPH_SELECTION:\n      state.diagramModel.clearSelection();\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction changeEditableState(state,boolValue){\n  let nodeArray = state.diagramModel.getNodes();\n  for (let a = 0; a < nodeArray.length; a++) {\n    nodeArray[a].changeEditableState(boolValue);\n  }\n\n  let linkArray = state.diagramModel.getLinks();\n  for (let i = 0; i < linkArray.length; i++) {\n    let labelArray = linkArray[i].getLabels();\n    for (let y = 0; y < labelArray.length; y++) {\n      labelArray[y].changeEditableState(boolValue);\n    }\n  }\n  state.diagramEngine.repaintCanvas();\n}\n\nfunction syncNodesCords(state){\n  let nodeState = new Map([[\"domainNodes\", state.domainNodes],[\"constantNodes\", state.constantNodes],[\"ternaryNodes\", state.ternaryNodes],[\"quaternaryNodes\",state.quaternaryNodes]]);\n  let diagramCordState = state.diagramCordState;\n\n  if(!diagramCordState){\n    return;\n  }\n\n  let naryNodeMap = new Map();\n\n  for (let nodeTypeMap of nodeState.values()) {\n    if(nodeTypeMap === \"ternaryNodes\" || nodeTypeMap === \"quaternaryNodes\"){\n      for(let node of nodeTypeMap.values()){\n        let nodeValue = node.getNodeNameCombination();\n        if (nodeValue) {\n          naryNodeMap.set(nodeValue.join(\",\"), node);\n        }\n      }\n    }\n  }\n\n  for(let mapName of nodeState.keys()){\n    for(let [nodeName,nodeObject] of nodeState.get(mapName).entries()){\n      if(diagramCordState.hasOwnProperty(mapName)){\n        let nodeNameInObject = (mapName === \"domainNodes\" || mapName === \"constantNodes\")?nodeName:nodeObject.getNodeNameCombination();\n        if(diagramCordState[mapName].hasOwnProperty(nodeNameInObject)){\n          let cord = diagramCordState[mapName][nodeNameInObject];\n          nodeObject.setPosition(cord.x,cord.y);\n        }\n      }\n    }\n  }\n  state.diagramEngine.repaintCanvas();\n}\n\nfunction syncLabels(state){\n  let linkArray = state.diagramModel.getLinks();\n  for (let i = 0; i<linkArray.length;i++) {\n    if(linkArray[i].label && linkArray[i].getLabels().length === 0){\n      linkArray[i].addLabel(linkArray[i].label);\n    }\n  }\n}\n\nfunction deleteAllLabels(action) {\n  let linkArray = action.diagramModel.getLinks();\n  for(let i = 0; i<linkArray.length;i++){\n    if (linkArray[i] instanceof BinaryLinkModel) {\n      linkArray[i].clearLabels();\n    }\n  }\n}\n\nfunction createNode(nodeObject,nodeName,nodeSet,diagramModel,diagramCanvas){\n  let canvasWidth = diagramCanvas.clientWidth;\n  let canvasHeight = diagramCanvas.clientHeight;\n\n  nodeObject.setPosition(Math.random() * (canvasWidth - canvasWidth * 0.2) + canvasWidth * 0.05, Math.random() * (canvasHeight - canvasHeight * 0.2) + canvasHeight * 0.05);\n\n  addNodeState(nodeName, nodeObject, nodeSet);\n  diagramModel.addNode(nodeObject);\n}\n\nfunction createLink(sourcePort,targetPort,diagramModel){\n  let link = new BinaryLinkModel({},false);\n  link.setSourcePort(sourcePort);\n  link.setTargetPort(targetPort);\n  diagramModel.addAll(link);\n  return link;\n}\n\nfunction createLabel(linkWhereLabelShouldBeAdded){\n  let label = new BinaryLinkModel({},false);\n  if(linkWhereLabelShouldBeAdded.getTargetPort().getNode() === linkWhereLabelShouldBeAdded.getSourcePort().getNode()){\n    label.setCurvyness(BASIC_CURVYNESS);\n  }\n  linkWhereLabelShouldBeAdded.addLabel(label);\n}\n\nfunction syncConstants(values){\n  if(values.structure.constants!== null){\n    let constantObjects = new Map(Object.entries(values.structure.constants));\n    let constantState = values.diagramState.constantNodes;\n    let domainState = values.diagramState.domainNodes;\n    let diagramModel = values.diagramState.diagramModel;\n    let diagramCanvas = values.diagramState.diagramEngine.getCanvas();\n\n    for(let [nodeName,nodeObject] of constantState.entries()) {\n      if (!constantObjects.has(nodeName)) {\n        removeNodeState(nodeName, constantState);\n        removeWholeNode(nodeObject, diagramModel);\n      }\n    }\n\n    for(let [nodeName,nodeProperties] of constantObjects.entries()) {\n      if(!constantState.has(nodeName)) {\n        let node = new ConstantNodeModel(nodeName, 'rgb(92,192,125)', {\n          \"addConstantNode\": values.addConstantNode,\n          \"renameConstantNode\": values.renameConstantNode,\n          \"removeConstantNode\": values.removeConstantNode,\n          \"setConstantValueFromLink\": values.setConstantValueFromLink,\n          \"focusOnBodyElement\": values.focusOnBodyFunc,\n          \"store\": values.store,\n        });\n        createNode(node,nodeName,constantState,diagramModel,diagramCanvas);\n        if(nodeProperties.value.length!==0){\n          createLink(node.getMainPort(),domainState.get(nodeProperties.value).getMainPort(),diagramModel);\n        }\n      }\n      else{\n        let nodeObject = constantState.get(nodeName);\n\n        //When entity is removed it would cause a dispatch of another Redux Function and we would get error, by setting callReduxFunc on false we will avoid this problem\n        interruptCallingReduxFunc(nodeObject.getMainPort());\n\n        nodeObject.removeAllLinks();\n        if(nodeProperties.value.length!==0){\n          createLink(nodeObject.getMainPort(),domainState.get(nodeProperties.value).getMainPort(),diagramModel);\n        }\n      }\n    }\n  }\n}\n\nfunction setCallReduxFunc(diagramModel,bool){\n  for(let link of diagramModel.getLinks()){\n    link.setCallReduxFunc(bool);\n  }\n\n}\n\nfunction interruptCallingReduxFunc(port){\n  for (let link of _.values(port.getLinks())) {\n    if(link instanceof BinaryLinkModel){\n      link.setCallReduxFunc(false);\n    }\n  }\n}\n\nfunction addNodeState(nodeName,nodeObject,nodeSet){\n  nodeSet.set(nodeName,nodeObject);\n}\n\nfunction removeNodeState(nodeName,nodeSet){\n  nodeSet.delete(nodeName);\n}\n\nfunction clearDiagramState(diagramState){\n  diagramState.domainNodes.clear();\n  diagramState.constantNodes.clear();\n  diagramState.ternaryNodes.clear();\n  diagramState.quaternaryNodes.clear();\n}\n\nfunction clearCertainNodeState(nodeState){\n  nodeState.clear();\n}\n\nfunction syncLanguageElementType(values,type,state) {\n  let structureObject = getStructureObject(state)\n  let elementInterpretationMap = type === PREDICATE ? structureObject.iPredicate : structureObject.iFunction;\n  let portMap = new Map([[\"1\", new Map()], [\"2\", new Map()], [\"3\", new Map()], [\"4\", new Map()]]);\n  if (elementInterpretationMap && elementInterpretationMap.size > 0) {\n    for (let [key, value] of elementInterpretationMap.entries()) {\n      let keyWithoutArity = key.split('/')[0];\n      let arityWithoutKey = key.split('/')[1];\n      let portMapArity = portMap.get(arityWithoutKey);\n\n      if (type === PREDICATE) {\n        addToPredicatePortMap(portMapArity, value, keyWithoutArity);\n      } else {\n        addToFunctionPortMap(portMapArity, value, keyWithoutArity);\n      }\n    }\n  }\n  return portMap;\n}\n\nfunction addToPredicatePortMap(portMapArity,value,keyWithoutArity) {\n  for (let currentNodeValue of value) {\n    currentNodeValue = currentNodeValue.join(\",\");\n    if (portMapArity.has(currentNodeValue)) {\n      portMapArity.get(currentNodeValue).add(keyWithoutArity);\n    } else {\n      portMapArity.set(currentNodeValue, new Set());\n      portMapArity.get(currentNodeValue).add(keyWithoutArity);\n    }\n  }\n}\n\nfunction addToFunctionPortMap(portMapArity,value,keyWithoutArity) {\n  for (let currentNodeValue in value) {\n    if (value.hasOwnProperty(currentNodeValue)) {\n      let currNodeValueParsed = JSON.parse(currentNodeValue).join(\",\") + (\",\" + value[currentNodeValue]);\n      if (portMapArity.has(currNodeValueParsed)) {\n        portMapArity.get(currNodeValueParsed).add(keyWithoutArity);\n      } else {\n        portMapArity.set(currNodeValueParsed, new Set());\n        portMapArity.get(currNodeValueParsed).add(keyWithoutArity);\n      }\n    }\n  }\n}\n\nfunction syncPredicates(values, state) {\n  let portMap = syncLanguageElementType(values,PREDICATE, state);\n  syncUnaryPredicates(portMap.get(\"1\"),values.diagramState.domainNodes);\n  syncBinaryLinkElement(portMap.get(\"2\"),values.diagramState,PREDICATE);\n  syncNaryLanguageElements(portMap.get(\"3\"),values,TERNARY,PREDICATE);\n  syncNaryLanguageElements(portMap.get(\"4\"),values,QUATERNARY,PREDICATE);\n }\n\n function syncNaryLanguageElements(portMap,values,type,typeElement) {\n   let nodes = new Map();\n   let diagramState = values.diagramState;\n   let nodesOfType = type === TERNARY ? diagramState.ternaryNodes : diagramState.quaternaryNodes;\n\n   for (let node of nodesOfType.values()) {\n     let nodeValue = node.getNodeNameCombination();\n     if (nodeValue) {\n       typeElement === PREDICATE?node.clearPredicates():node.clearFunctions();\n       nodes.set(nodeValue.join(\",\"), node);\n     }\n   }\n\n   let reduxProps = {\n     \"addTernaryNode\":values.addTernaryNode,\n     \"removeTernaryNode\":values.removeTernaryNode,\n     \"addQuaternaryNode\":values.addQuaternaryNode,\n     \"removeQuaternaryNode\":values.removeQuaternaryNode,\n     \"addBinaryFunction\":values.addBinaryFunction,\n     \"removeBinaryFunction\":values.removeBinaryFunction,\n     \"addTernaryPredicate\":values.addTernaryPredicate,\n     \"removeTernaryPredicate\":values.removeTernaryPredicate,\n     \"addTernaryFunction\": values.addTernaryFunction,\n     \"removeTernaryFunction\":values.removeTernaryFunction,\n     \"addQuaternaryPredicate\":values.addQuaternaryPredicate,\n     \"removeQuaternaryPredicate\":values.removeQuaternaryPredicate,\n     \"focusOnBodyElement\": values.focusOnBodyFunc,\n     \"editable\": values.diagramState.editableNodes,\n     \"store\": values.store\n   };\n\n   for (let [nodePortMapCombination, nodePortMapCombinationSet] of portMap.entries()) {\n     let nodeName = getNodeName(nodesOfType,type);\n\n     if (!nodes.has(nodePortMapCombination)) {\n       let node = type === TERNARY?new TernaryNodeModel({name:nodeName,reduxProps:reduxProps,numberOfPorts:3}):new QuaternaryNodeModel({name:nodeName,reduxProps:reduxProps,numberOfPorts:4});\n       createNode(node,nodeName,nodesOfType,diagramState.diagramModel,diagramState.diagramEngine.getCanvas());\n       createLinksForNaryNodes(node,nodePortMapCombination.split(\",\"),diagramState.domainNodes,diagramState.diagramModel);\n       nodes.set(nodePortMapCombination,node);\n     }\n\n     let naryNode = nodes.get(nodePortMapCombination);\n     for(let element of nodePortMapCombinationSet){\n       typeElement === PREDICATE?naryNode.addPredicateToSet(element):naryNode.addFunctionToSet(element);\n     }\n   }\n }\n\n function createLinksForNaryNodes(naryNode,nodeNames,domainNodes,diagramModel){\n  for(let i = 0; i<naryNode.getNumberOfPorts();i++){\n    createLink(naryNode.getPortByIndex(i),domainNodes.get(nodeNames[i]).getMainPort(),diagramModel);\n  }\n }\n\n function getNodeName(diagramStateNodesOfType,type){\n  let name = type;\n  let index = 0;\n  while(diagramStateNodesOfType.has(name+index)){\n    index++;\n  }\n  return name+index;\n }\n\nfunction syncFunctions(values, state) {\n  let portMap = syncLanguageElementType(values,FUNCTION, state);\n  syncBinaryLinkElement(portMap.get(\"1\"),values.diagramState,FUNCTION);\n  syncNaryLanguageElements(portMap.get(\"2\"),values,TERNARY,FUNCTION);\n  syncNaryLanguageElements(portMap.get(\"3\"),values,QUATERNARY,FUNCTION);\n}\n\nfunction syncUnaryPredicates(portMap,domainState) {\n  for (let [currentNodeName, currentNodeObject] of domainState.entries()) {\n    let setOfUnaryPredicatesForNode = portMap.get(currentNodeName);\n\n    if (portMap.has(currentNodeName)) {\n      //added new predicates\n      let currentNodePredicates = currentNodeObject.getUnaryPredicates();\n      for (let predicateName of setOfUnaryPredicatesForNode) {\n        if (!currentNodePredicates.has(predicateName)) {\n          currentNodeObject.addUnaryPredicateToSet(predicateName);\n        }\n      }\n\n      //delete old predicates\n      for (let predicate of currentNodePredicates) {\n        if (!setOfUnaryPredicatesForNode.has(predicate)) {\n          currentNodeObject.removeUnaryPredicateFromSet(predicate);\n        }\n      }\n\n    } else {\n      currentNodeObject.clearPredicates();\n    }\n  }\n}\n\nfunction createBinaryLinks(portMap,existingLinksCombination,diagramState){\n  let linksToChange = new Set();\n  for(let combination of portMap.keys()){\n    let firstComb = combination.split(\",\")[0];\n    let secondComb = combination.split(\",\")[1];\n    let reversedComb = combination.split(\",\")[1]+\",\"+combination.split(\",\")[0];\n    if(!existingLinksCombination.has(combination) && !existingLinksCombination.has(reversedComb)){\n      if(!diagramState.domainNodes.has(firstComb) || !diagramState.domainNodes.has(secondComb)){\n        break;\n      }\n      let sourcePort = diagramState.domainNodes.get(firstComb).getMainPort();\n      let targetPort = diagramState.domainNodes.get(secondComb).getMainPort();\n      if(sourcePort === targetPort){\n        linksToChange.add(createLink(sourcePort,sourcePort.getNode().getAppendPort(),diagramState.diagramModel));\n      }\n      else{\n        linksToChange.add(createLink(sourcePort,targetPort,diagramState.diagramModel));\n      }\n      existingLinksCombination.add(combination);\n      existingLinksCombination.add(reversedComb);\n    }\n  }\n  return linksToChange;\n}\n\nfunction addLanguageElementToBinaryLinks(portMap,nodeCombinationKey,reversedNodeCombinationKey,label,type){\n  if(portMap.has(nodeCombinationKey)){\n    for(let languageElement of portMap.get(nodeCombinationKey)){\n      type === PREDICATE?label.addBinaryPredicateToSetWithDirection(languageElement,FROM):label.addUnaryFunctionToSetWithDirection(languageElement,FROM);\n    }\n  }\n  if(portMap.has(reversedNodeCombinationKey)){\n    for(let languageElement of portMap.get(reversedNodeCombinationKey)){\n      let labelLanguageSet = type === PREDICATE?label.getPredicates():label.getFunctions();\n      if(labelLanguageSet.has(languageElement)){\n        type === PREDICATE?label.addBinaryPredicateToSetWithDirection(languageElement,BOTH):label.addUnaryFunctionToSetWithDirection(languageElement,BOTH);\n      }\n      else{\n        type === PREDICATE?label.addBinaryPredicateToSetWithDirection(languageElement,TO):label.addUnaryFunctionToSetWithDirection(languageElement,TO);\n      }\n    }\n  }\n}\n\nfunction syncBinaryLinkElement(portMap,diagramState,type) {\n  let linksToRemove = new Set();\n  let existingLinksCombination = new Set();\n  for(let link of diagramState.diagramModel.getLinks()){\n    let label = link.getLabel();\n    if(label){\n      let labelLanguageSet = type===PREDICATE?label.getPredicates():label.getFunctions();\n\n      type === PREDICATE?label.clearPredicates():label.clearFunctions();\n      let nodeCombinationKey = label.getNodeCombinationKey();\n      let reversedNodeCombinationKey = label.getReversedNodeCombinationKey();\n      existingLinksCombination.add(nodeCombinationKey);\n      existingLinksCombination.add(reversedNodeCombinationKey);\n\n      addLanguageElementToBinaryLinks(portMap,nodeCombinationKey,reversedNodeCombinationKey,label,type);\n\n      if(labelLanguageSet.size === 0){\n        linksToRemove.add(link);\n      }\n    }\n  }\n  let linksToChange = createBinaryLinks(portMap,existingLinksCombination,diagramState);\n  for(let link of linksToChange){\n    let label = link.getLabel();\n    addLanguageElementToBinaryLinks(portMap,label.getNodeCombinationKey(),label.getReversedNodeCombinationKey(),label,type);\n  }\n  //removeLinksToRemove(linksToRemove);\n  return linksToRemove;\n}\n\nfunction removeLinksToRemove(linksToRemove){\n  for(let link of linksToRemove){\n    link.remove();\n  }\n}\n\nfunction syncDomain(values) {\n  let domain = (values.structure.domain.parsed);\n  let domainState = values.diagramState.domainNodes;\n  let diagramModel = values.diagramState.diagramModel;\n  let diagramCanvas = values.diagramState.diagramEngine.getCanvas();\n\n  if (domain == null || domain.length === 0) {\n    for(let node of domainState.values()){\n      removeWholeNode(node, diagramModel);\n    }\n    clearCertainNodeState(domainState);\n    return;\n  }\n\n  let existingDomainNodes = [];\n  for (let [nodeName, nodeObject] of domainState.entries()) {\n    if (domain.includes(nodeName)) {\n      existingDomainNodes.push(nodeName);\n    } else {\n      removeNodeState(nodeName, domainState);\n      removeWholeNode(nodeObject, diagramModel);\n    }\n  }\n\n  for(let nodeName of domain){\n    if (!existingDomainNodes.includes(nodeName)) {\n      let node = new UnBinaryNodeModel(nodeName, 'rgb(92,192,125)', {\n        \"addDomainNode\":values.addDomainNode,\n        \"renameDomainNode\": values.renameDomainNode,\n        \"removeDomainNode\":values.removeDomainNode,\n        \"addUnaryPredicate\":values.addUnaryPredicate,\n        \"removeUnaryPredicate\":values.removeUnaryPredicate,\n        \"addUnaryFunction\": values.addUnaryFunction,\n        \"removeUnaryFunction\": values.removeUnaryFunction,\n        \"addBinaryPredicate\": values.addBinaryPredicate,\n        \"removeBinaryPredicate\": values.removeBinaryPredicate,\n        \"changeDirectionOfBinaryRelation\": values.changeDirectionOfBinaryRelation,\n        \"focusOnBodyElement\": values.focusOnBodyFunc,\n        \"editable\":values.diagramState.editableNodes,\n        \"store\":values.store,\n      });\n      createNode(node,nodeName,domainState,diagramModel,diagramCanvas);\n    }\n  }\n}\n\nfunction removeWholeNode(node,diagramModel){\n  for(let portObject of Object.values(node.getPorts())){\n    interruptCallingReduxFunc(portObject);\n    node.removePort(portObject); //ensures that all links are deleted\n  }\n diagramModel.removeNode(node);\n}\n\nexport default diagramReducer;","import languageReducer from \"./language\";\nimport structureReducer from \"./structure\";\nimport expressionsReducer from \"./expressions\";\nimport teacherModeReducer from \"./teacherMode\";\nimport {IMPORT_APP} from \"../actions/action_types\";\nimport diagramReducer,{ defaultState as diagramDefaultState } from \"./diagram\";\nimport {defaultState as expressionsDefaultState} from \"./expressions\";\nimport {defaultState as structureDefaultState} from \"./structure\";\nimport {defaultState as languageDefaultState} from \"./language\";\n\nfunction defaultState() {\n    return {\n        common: {\n            teacherMode: false\n        },\n        language: languageDefaultState(),\n        structure: structureDefaultState(),\n        expressions: expressionsDefaultState(),\n        diagramState: diagramDefaultState()\n    };\n}\n\nfunction checkImportedState(state:any) {\n    if (!state.common || !state.language || !state.structure) {\n        throw 'State is not valid!';\n    }\n    if (!state.language.constants || !state.language.predicates || !state.language.functions) {\n        throw 'State is not valid!';\n    }\n}\n\nfunction root(state = defaultState(), action:any) {\n    if (action.type === IMPORT_APP) {\n        try {\n            const importedState = JSON.parse(action.content);\n            checkImportedState(importedState);\n            state = importedState;\n            state.diagramState = action.diagramState?action.diagramState:diagramDefaultState();\n            // console.log('Imported state', state);\n        } catch (e) {\n            console.error(e);\n        }\n\n    }\n\n    const common = teacherModeReducer(state.common, action);\n    const language = languageReducer(state.language, action);\n    const structure = structureReducer(state.structure, action, {language});\n    const expressions = expressionsReducer(state.expressions, action, {language, structure})\n    const diagramState = diagramReducer(state.diagramState, action, state);\n\n    return {\n        common,\n        language,\n        structure,\n        expressions,\n        diagramState\n    }\n}\n\nexport default root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./redux/containers/AppContainer\";\nimport {createStore} from \"redux\";\nimport reducer from \"./redux/reducers\";\nimport {enableMapSet} from \"immer\";\n\nenableMapSet();\n\n// @ts-ignore\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst Main = () => (\n    <main className=\"container-fluid\">\n        <AppContainer store={store}/>\n    </main>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}